
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/104_math_operations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_104_math_operations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_104_math_operations.py:


Math Operations
===============

Demonstrate splitting and math operations that preserve the mass balance of components.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default


    import pandas as pd

    from elphick.mass_composition.datasets.sample_data import sample_data
    from elphick.mass_composition import MassComposition








.. GENERATED FROM PYTHON SOURCE LINES 16-20

Create a mass-composition (mc) enabled Xarray Dataset
-----------------------------------------------------

We get some demo data in the form of a pandas DataFrame

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: default


    df_data: pd.DataFrame = sample_data()
    print(df_data.head())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

           wet_mass  mass_dry    FE  SIO2  al2o3  LOI  group
    index                                                   
    0         100.0      90.0  57.0   5.2    3.0  5.0  grp_1
    1          90.0      80.0  59.0   3.1    1.7  4.0  grp_1
    2         110.0      90.0  61.0   2.2    0.9  3.0  grp_2




.. GENERATED FROM PYTHON SOURCE LINES 26-32

.. code-block:: default


    # Construct a MassComposition object and standardise the chemistry variables

    obj_mc: MassComposition = MassComposition(df_data)
    print(obj_mc)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    unnamed
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 100.0 90.0 110.0
        mass_dry  (index) float64 24B 90.0 80.0 90.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            unnamed
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 33-35

Split the original Dataset and return the complement of the split fraction.
Splitting does not modify the absolute grade of the input.

.. GENERATED FROM PYTHON SOURCE LINES 36-40

.. code-block:: default


    obj_mc_split, obj_mc_comp = obj_mc.split(fraction=0.1)
    print(obj_mc_split)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (0.1 * unnamed)
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 10.0 9.0 11.0
        mass_dry  (index) float64 24B 9.0 8.0 9.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            (0.1 * unnamed)
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    print(obj_mc_comp)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (0.9 * unnamed)
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 90.0 81.0 99.0
        mass_dry  (index) float64 24B 81.0 72.0 81.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            (0.9 * unnamed)
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 44-45

Add the split and complement parts using the mc.add method

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default


    obj_mc_sum: MassComposition = obj_mc_split + obj_mc_comp
    print(obj_mc_sum)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ((0.1 * unnamed) + (0.9 * unnamed))
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 100.0 90.0 110.0
        mass_dry  (index) float64 24B 90.0 80.0 90.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            ((0.1 * unnamed) + (0.9 * unnamed))
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 51-52

Confirm the sum of the splits is materially equivalent to the starting object.

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: default


    pd.testing.assert_frame_equal(obj_mc.data.to_dataframe(), obj_mc_sum.data.to_dataframe())








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Add finally add and then subtract the split portion to the original object, and check the output.

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default


    obj_mc_sum: MassComposition = obj_mc + obj_mc_split
    obj_mc_minus: MassComposition = obj_mc_sum - obj_mc_split
    pd.testing.assert_frame_equal(obj_mc_minus.data.to_dataframe(), obj_mc.data.to_dataframe())
    print(obj_mc_minus)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ((unnamed + (0.1 * unnamed)) - (0.1 * unnamed))
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 100.0 90.0 110.0
        mass_dry  (index) float64 24B 90.0 80.0 90.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            ((unnamed + (0.1 * unnamed)) - (0.1 * unnamed))
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Demonstrate division.

.. GENERATED FROM PYTHON SOURCE LINES 69-74

.. code-block:: default


    obj_mc_div: MassComposition = obj_mc_split / obj_mc
    print(obj_mc_div)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ((0.1 * unnamed) / unnamed)
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 0.1 0.1 0.1
        mass_dry  (index) float64 24B 0.1 0.1 0.1
        H2O       (index) float64 24B 0.0 0.0 0.0
        Fe        (index) float64 24B 0.1 0.1 0.1
        SiO2      (index) float64 24B 0.1 0.1 0.1
        Al2O3     (index) float64 24B 0.1 0.1 0.1
        LOI       (index) float64 24B 0.1 0.1 0.1
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            ((0.1 * unnamed) / unnamed)
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 75-77

Math operations with rename
The alternative syntax, methods rather than operands, allows renaming of the result object

.. GENERATED FROM PYTHON SOURCE LINES 78-82

.. code-block:: default


    obj_mc_sum_renamed: MassComposition = obj_mc.add(obj_mc_split, name='Summed object')
    print(obj_mc_sum_renamed)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Summed object
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 110.0 99.0 121.0
        mass_dry  (index) float64 24B 99.0 88.0 99.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            Summed object
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}




.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: default

    obj_mc_sub_renamed: MassComposition = obj_mc.sub(obj_mc_split, name='Subtracted object')
    print(obj_mc_sum_renamed)

    print('done')




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Summed object
    <xarray.Dataset> Size: 216B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 110.0 99.0 121.0
        mass_dry  (index) float64 24B 99.0 88.0 99.0
        H2O       (index) float64 24B 10.0 11.11 18.18
        Fe        (index) float64 24B 57.0 59.0 61.0
        SiO2      (index) float64 24B 5.2 3.1 2.2
        Al2O3     (index) float64 24B 3.0 1.7 0.9
        LOI       (index) float64 24B 5.0 4.0 3.0
        group     (index) object 24B 'grp_1' 'grp_1' 'grp_2'
    Attributes:
        mc_name:            Summed object
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Fe', 'SiO2', 'Al2O3', 'LOI']
        mc_vars_attrs:      ['group']
        mc_interval_edges:  {}
    done





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.451 seconds)


.. _sphx_glr_download_auto_examples_104_math_operations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 104_math_operations.py <104_math_operations.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 104_math_operations.ipynb <104_math_operations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
