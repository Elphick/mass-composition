
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/112_compare.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_112_compare.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_112_compare.py:


Compare
=======

Consistent MassComposition objects can be compared.  Objects generated by math operations, or connected in an
Flowsheet are candidates for comparison.

Comparison can be performed by:
- recovery
- difference
- divide

.. GENERATED FROM PYTHON SOURCE LINES 14-22

.. code-block:: default


    import pandas as pd
    import plotly
    import xarray as xr

    from elphick.mass_composition import MassComposition
    from elphick.mass_composition.datasets.sample_data import sample_data








.. GENERATED FROM PYTHON SOURCE LINES 23-27

Create a MassComposition object
-------------------------------

We get some demo data in the form of a pandas DataFrame

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default


    df_data: pd.DataFrame = sample_data()
    df_data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wet_mass</th>
          <th>mass_dry</th>
          <th>FE</th>
          <th>SIO2</th>
          <th>al2o3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>100.0</td>
          <td>90.0</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-34

Construct a MassComposition object

.. GENERATED FROM PYTHON SOURCE LINES 34-38

.. code-block:: default


    obj_mc: MassComposition = MassComposition(df_data, name='product')
    obj_mc.data.to_dataframe()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>100.0</td>
          <td>90.0</td>
          <td>10.000000</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>90.0</td>
          <td>80.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>110.0</td>
          <td>90.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-48

Compare by Recovery
-------------------

Recovery for an object is defined as the proportion of component mass compared with (divided by) the
component mass of another object.  In mineral processing recovery is often used to compare the recovered "metal"
in product compared to what was fed.  Recovery is also an important metric when considering internal separation
circuits inside a larger facility.

In this example we'll simply double the test object and call it 'feed'

.. GENERATED FROM PYTHON SOURCE LINES 49-53

.. code-block:: default


    obj_mc_ref: MassComposition = obj_mc.add(obj_mc, name='feed')
    obj_mc_ref.data.to_dataframe()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
          <th>group</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>200.0</td>
          <td>180.0</td>
          <td>10.000000</td>
          <td>57.0</td>
          <td>5.2</td>
          <td>3.0</td>
          <td>5.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>1</th>
          <td>180.0</td>
          <td>160.0</td>
          <td>11.111111</td>
          <td>59.0</td>
          <td>3.1</td>
          <td>1.7</td>
          <td>4.0</td>
          <td>grp_1</td>
        </tr>
        <tr>
          <th>2</th>
          <td>220.0</td>
          <td>180.0</td>
          <td>18.181818</td>
          <td>61.0</td>
          <td>2.2</td>
          <td>0.9</td>
          <td>3.0</td>
          <td>grp_2</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default

    rec_1: pd.DataFrame = obj_mc.compare(comparisons='recovery', other=obj_mc_ref)
    rec_1






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>product_mass_wet_rec_feed</th>
          <th>product_mass_dry_rec_feed</th>
          <th>product_H2O_rec_feed</th>
          <th>product_Fe_rec_feed</th>
          <th>product_SiO2_rec_feed</th>
          <th>product_Al2O3_rec_feed</th>
          <th>product_LOI_rec_feed</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 58-59

By default the variable names are explicit for clarity, though the basic variables names can be preserved.

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    rec_2: pd.DataFrame = obj_mc.compare(comparisons='recovery', other=obj_mc_ref, explicit_names=False)
    rec_2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>Al2O3</th>
          <th>LOI</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 64-65

An xarray Dataset can be returned if desired.

.. GENERATED FROM PYTHON SOURCE LINES 65-69

.. code-block:: default


    rec_3: xr.Dataset = obj_mc.compare(comparisons='recovery', other=obj_mc_ref, explicit_names=False, as_dataframe=False)
    rec_3






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 192B
    Dimensions:   (index: 3)
    Coordinates:
      * index     (index) int64 24B 0 1 2
    Data variables:
        mass_wet  (index) float64 24B 0.5 0.5 0.5
        mass_dry  (index) float64 24B 0.5 0.5 0.5
        H2O       (index) float64 24B 0.5 0.5 0.5
        Fe        (index) float64 24B 0.5 0.5 0.5
        SiO2      (index) float64 24B 0.5 0.5 0.5
        Al2O3     (index) float64 24B 0.5 0.5 0.5
        LOI       (index) float64 24B 0.5 0.5 0.5</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-8df91109-0177-412e-98b0-15cb033463df' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8df91109-0177-412e-98b0-15cb033463df' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>index</span>: 3</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-ec9a7841-fc09-4814-8334-4596b8dd796c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-ec9a7841-fc09-4814-8334-4596b8dd796c' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>index</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2</div><input id='attrs-904d2f35-00ad-4d7b-944a-1f31888a0939' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-904d2f35-00ad-4d7b-944a-1f31888a0939' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-53a0d88c-8290-4c00-94dc-d63f63f6e3d1' class='xr-var-data-in' type='checkbox'><label for='data-53a0d88c-8290-4c00-94dc-d63f63f6e3d1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0, 1, 2])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ce845b2f-1740-4635-b1a4-d34b347b8dd1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-ce845b2f-1740-4635-b1a4-d34b347b8dd1' class='xr-section-summary' >Data variables: <span>(7)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>mass_wet</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-c77cdfa0-162a-4e04-8453-f3b826de36d7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c77cdfa0-162a-4e04-8453-f3b826de36d7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2b5c220e-c44c-4d59-8d11-cbf7de75143a' class='xr-var-data-in' type='checkbox'><label for='data-2b5c220e-c44c-4d59-8d11-cbf7de75143a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>mass_dry</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-5ea8e360-c474-450f-a107-a829b9e2f829' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5ea8e360-c474-450f-a107-a829b9e2f829' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4f92d670-9d6e-407e-a3c1-02c2cfeff686' class='xr-var-data-in' type='checkbox'><label for='data-4f92d670-9d6e-407e-a3c1-02c2cfeff686' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>H2O</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-609b814c-b7ea-4f18-a6ed-bee2d637e522' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-609b814c-b7ea-4f18-a6ed-bee2d637e522' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2d8d90ac-5053-4a73-9ea4-2e9034429e99' class='xr-var-data-in' type='checkbox'><label for='data-2d8d90ac-5053-4a73-9ea4-2e9034429e99' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Fe</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-768268ae-aa41-4961-8b9c-bfa8802ee5a3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-768268ae-aa41-4961-8b9c-bfa8802ee5a3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bc1fdf3a-65f0-42e1-b92b-0b9970a28294' class='xr-var-data-in' type='checkbox'><label for='data-bc1fdf3a-65f0-42e1-b92b-0b9970a28294' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SiO2</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-c47b7048-dee8-4da7-8518-ba3bf1359acc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c47b7048-dee8-4da7-8518-ba3bf1359acc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7bf93f47-498d-4011-9532-ee19bc775721' class='xr-var-data-in' type='checkbox'><label for='data-7bf93f47-498d-4011-9532-ee19bc775721' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Al2O3</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-d6bafd86-923d-4831-a433-b77e4df9ef26' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d6bafd86-923d-4831-a433-b77e4df9ef26' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-97d3beb2-10f5-4069-8609-550dc7220570' class='xr-var-data-in' type='checkbox'><label for='data-97d3beb2-10f5-4069-8609-550dc7220570' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>LOI</span></div><div class='xr-var-dims'>(index)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 0.5 0.5</div><input id='attrs-138f5b4e-d689-479c-9350-f77dbe150789' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-138f5b4e-d689-479c-9350-f77dbe150789' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c4ed6889-2b57-449b-9cc3-1d67758d338a' class='xr-var-data-in' type='checkbox'><label for='data-c4ed6889-2b57-449b-9cc3-1d67758d338a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.5, 0.5, 0.5])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7b5bd561-e706-40e7-a26a-52c4d2552f37' class='xr-section-summary-in' type='checkbox'  ><label for='section-7b5bd561-e706-40e7-a26a-52c4d2552f37' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>index</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-6aed6299-7280-4b12-ac3e-0c97010c8786' class='xr-index-data-in' type='checkbox'/><label for='index-6aed6299-7280-4b12-ac3e-0c97010c8786' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(RangeIndex(start=0, stop=3, step=1, name=&#x27;index&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3c4df27b-aafd-4ef9-b522-e5ed8e82060d' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3c4df27b-aafd-4ef9-b522-e5ed8e82060d' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-75

Compare by Difference
---------------------

Comparing by difference simply subtracts mass and composition.  No conversion of composition to mass units is made.


.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: default


    rec_4: pd.DataFrame = obj_mc.compare(comparisons='difference', other=obj_mc_ref)
    rec_4






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>product_mass_wet_diff_feed</th>
          <th>product_mass_dry_diff_feed</th>
          <th>product_H2O_diff_feed</th>
          <th>product_Fe_diff_feed</th>
          <th>product_SiO2_diff_feed</th>
          <th>product_Al2O3_diff_feed</th>
          <th>product_LOI_diff_feed</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>-100.0</td>
          <td>-90.0</td>
          <td>0.0</td>
          <td>7.105427e-15</td>
          <td>0.0</td>
          <td>-4.440892e-16</td>
          <td>0.000000e+00</td>
        </tr>
        <tr>
          <th>1</th>
          <td>-90.0</td>
          <td>-80.0</td>
          <td>0.0</td>
          <td>-7.105427e-15</td>
          <td>0.0</td>
          <td>-2.220446e-16</td>
          <td>0.000000e+00</td>
        </tr>
        <tr>
          <th>2</th>
          <td>-110.0</td>
          <td>-90.0</td>
          <td>0.0</td>
          <td>0.000000e+00</td>
          <td>0.0</td>
          <td>-1.110223e-16</td>
          <td>-4.440892e-16</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-86

Compare by Division
--------------------

Comparing by simply dividing mass and composition.  No conversion of composition to mass units is made.
In the mineral processing context, the result may be described as the "upgrade ratio".

.. GENERATED FROM PYTHON SOURCE LINES 87-91

.. code-block:: default


    rec_5: pd.DataFrame = obj_mc.compare(comparisons='divide', other=obj_mc_ref)
    rec_5






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>product_mass_wet_ur_feed</th>
          <th>product_mass_dry_ur_feed</th>
          <th>product_H2O_ur_feed</th>
          <th>product_Fe_ur_feed</th>
          <th>product_SiO2_ur_feed</th>
          <th>product_Al2O3_ur_feed</th>
          <th>product_LOI_ur_feed</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 92-96

Multiple Comparisons
--------------------

More than one comparison can be performed at once.

.. GENERATED FROM PYTHON SOURCE LINES 97-101

.. code-block:: default


    rec_6: pd.DataFrame = obj_mc.compare(comparisons=['recovery', 'divide'], other=obj_mc_ref)
    rec_6.T






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>index</th>
          <th>0</th>
          <th>1</th>
          <th>2</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>product_mass_wet_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_mass_dry_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_H2O_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_Fe_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_SiO2_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_Al2O3_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_LOI_rec_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_mass_wet_ur_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_mass_dry_ur_feed</th>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
        <tr>
          <th>product_H2O_ur_feed</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>product_Fe_ur_feed</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>product_SiO2_ur_feed</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>product_Al2O3_ur_feed</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>product_LOI_ur_feed</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>1.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 102-103

Or using "all"

.. GENERATED FROM PYTHON SOURCE LINES 103-107

.. code-block:: default


    rec_7: pd.DataFrame = obj_mc.compare(comparisons='all', other=obj_mc_ref)
    rec_7.T






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>index</th>
          <th>0</th>
          <th>1</th>
          <th>2</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>product_mass_wet_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_mass_dry_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_H2O_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_Fe_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_SiO2_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_Al2O3_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_LOI_rec_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_mass_wet_diff_feed</th>
          <td>-1.000000e+02</td>
          <td>-9.000000e+01</td>
          <td>-1.100000e+02</td>
        </tr>
        <tr>
          <th>product_mass_dry_diff_feed</th>
          <td>-9.000000e+01</td>
          <td>-8.000000e+01</td>
          <td>-9.000000e+01</td>
        </tr>
        <tr>
          <th>product_H2O_diff_feed</th>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
        </tr>
        <tr>
          <th>product_Fe_diff_feed</th>
          <td>7.105427e-15</td>
          <td>-7.105427e-15</td>
          <td>0.000000e+00</td>
        </tr>
        <tr>
          <th>product_SiO2_diff_feed</th>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
        </tr>
        <tr>
          <th>product_Al2O3_diff_feed</th>
          <td>-4.440892e-16</td>
          <td>-2.220446e-16</td>
          <td>-1.110223e-16</td>
        </tr>
        <tr>
          <th>product_LOI_diff_feed</th>
          <td>0.000000e+00</td>
          <td>0.000000e+00</td>
          <td>-4.440892e-16</td>
        </tr>
        <tr>
          <th>product_mass_wet_ur_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_mass_dry_ur_feed</th>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
          <td>5.000000e-01</td>
        </tr>
        <tr>
          <th>product_H2O_ur_feed</th>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
        </tr>
        <tr>
          <th>product_Fe_ur_feed</th>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
        </tr>
        <tr>
          <th>product_SiO2_ur_feed</th>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
        </tr>
        <tr>
          <th>product_Al2O3_ur_feed</th>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
        </tr>
        <tr>
          <th>product_LOI_ur_feed</th>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
          <td>1.000000e+00</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 108-112

Comparison Plot
---------------

This plot compares one stream against another, with one component per subplot.

.. GENERATED FROM PYTHON SOURCE LINES 112-117

.. code-block:: default


    fig = obj_mc.plot_comparison(other=obj_mc_ref)
    fig.update_layout(height=600)
    fig






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.32.0.min.js"></script>                <div id="51a42ea9-cf53-47c6-8d51-166302a789db" class="plotly-graph-div" style="height:600px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("51a42ea9-cf53-47c6-8d51-166302a789db")) {                    Plotly.newPlot(                        "51a42ea9-cf53-47c6-8d51-166302a789db",                        [{"customdata":[[-110.0],[-100.0],[-90.0]],"hovertemplate":"variable=mass_wet\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[110.0,100.0,90.0],"xaxis":"x7","y":[220.0,200.0,180.0],"yaxis":"y7","type":"scatter"},{"customdata":[[-90.0],[-90.0],[-80.0]],"hovertemplate":"variable=mass_dry\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[90.0,90.0,80.0],"xaxis":"x8","y":[180.0,180.0,160.0],"yaxis":"y8","type":"scatter"},{"customdata":[[0.0],[0.0],[0.0]],"hovertemplate":"variable=H2O\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[10.0,18.181818181818183,11.11111111111111],"xaxis":"x9","y":[10.0,18.181818181818183,11.11111111111111],"yaxis":"y9","type":"scatter"},{"customdata":[[7.105427357601002e-15],[-7.105427357601002e-15],[0.0]],"hovertemplate":"variable=Fe\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[57.0,59.0,61.0],"xaxis":"x4","y":[56.99999999999999,59.00000000000001,61.0],"yaxis":"y4","type":"scatter"},{"customdata":[[0.0],[0.0],[0.0]],"hovertemplate":"variable=SiO2\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[2.2,5.2,3.1],"xaxis":"x5","y":[2.2,5.2,3.1],"yaxis":"y5","type":"scatter"},{"customdata":[[-4.440892098500626e-16],[-2.220446049250313e-16],[-1.1102230246251565e-16]],"hovertemplate":"variable=Al2O3\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[3.0,1.7,0.9],"xaxis":"x6","y":[3.0000000000000004,1.7000000000000002,0.9000000000000001],"yaxis":"y6","type":"scatter"},{"customdata":[[-4.440892098500626e-16],[0.0],[0.0]],"hovertemplate":"variable=LOI\u003cbr\u003eproduct=%{x}\u003cbr\u003efeed=%{y}\u003cbr\u003eresidual=%{customdata[0]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","marker":{"color":"#636efa","symbol":"circle"},"mode":"markers","name":"","orientation":"v","showlegend":false,"x":[3.0,5.0,4.0],"xaxis":"x","y":[3.0000000000000004,5.0,4.0],"yaxis":"y","type":"scatter"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[90.0,220.0],"y":[90.0,220.0],"type":"scatter","xaxis":"x7","yaxis":"y7"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[80.0,180.0],"y":[80.0,180.0],"type":"scatter","xaxis":"x8","yaxis":"y8"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[10.0,18.181818181818183],"y":[10.0,18.181818181818183],"type":"scatter","xaxis":"x9","yaxis":"y9"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[56.99999999999999,61.0],"y":[56.99999999999999,61.0],"type":"scatter","xaxis":"x4","yaxis":"y4"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[2.2,5.2],"y":[2.2,5.2],"type":"scatter","xaxis":"x5","yaxis":"y5"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":false,"x":[0.9,3.0000000000000004],"y":[0.9,3.0000000000000004],"type":"scatter","xaxis":"x6","yaxis":"y6"},{"legendgroup":"y=x","line":{"color":"gray"},"mode":"lines","name":"y=x","showlegend":true,"x":[3.0,5.0],"y":[3.0,5.0],"type":"scatter","xaxis":"x","yaxis":"y"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,0.31999999999999995],"title":{"text":"product"},"scaleanchor":"y","scaleratio":1,"showticklabels":true},"yaxis":{"anchor":"x","domain":[0.0,0.2866666666666666],"title":{"text":"feed"},"showticklabels":true},"xaxis2":{"anchor":"y2","domain":[0.33999999999999997,0.6599999999999999],"title":{"text":"product"},"showticklabels":true},"yaxis2":{"anchor":"x2","domain":[0.0,0.2866666666666666],"showticklabels":true},"xaxis3":{"anchor":"y3","domain":[0.6799999999999999,0.9999999999999999],"title":{"text":"product"},"showticklabels":true},"yaxis3":{"anchor":"x3","domain":[0.0,0.2866666666666666],"showticklabels":true},"xaxis4":{"anchor":"y4","domain":[0.0,0.31999999999999995],"showticklabels":true,"scaleanchor":"y4","scaleratio":1},"yaxis4":{"anchor":"x4","domain":[0.35666666666666663,0.6433333333333333],"title":{"text":"feed"},"showticklabels":true},"xaxis5":{"anchor":"y5","domain":[0.33999999999999997,0.6599999999999999],"showticklabels":true,"scaleanchor":"y5","scaleratio":1},"yaxis5":{"anchor":"x5","domain":[0.35666666666666663,0.6433333333333333],"showticklabels":true},"xaxis6":{"anchor":"y6","domain":[0.6799999999999999,0.9999999999999999],"showticklabels":true,"scaleanchor":"y6","scaleratio":1},"yaxis6":{"anchor":"x6","domain":[0.35666666666666663,0.6433333333333333],"showticklabels":true},"xaxis7":{"anchor":"y7","domain":[0.0,0.31999999999999995],"showticklabels":true,"scaleanchor":"y7","scaleratio":1},"yaxis7":{"anchor":"x7","domain":[0.7133333333333333,0.9999999999999999],"title":{"text":"feed"},"showticklabels":true},"xaxis8":{"anchor":"y8","domain":[0.33999999999999997,0.6599999999999999],"showticklabels":true,"scaleanchor":"y8","scaleratio":1},"yaxis8":{"anchor":"x8","domain":[0.7133333333333333,0.9999999999999999],"showticklabels":true},"xaxis9":{"anchor":"y9","domain":[0.6799999999999999,0.9999999999999999],"showticklabels":true,"scaleanchor":"y9","scaleratio":1},"yaxis9":{"anchor":"x9","domain":[0.7133333333333333,0.9999999999999999],"showticklabels":true},"annotations":[{"font":{},"showarrow":false,"text":"variable=LOI","x":0.15999999999999998,"xanchor":"center","xref":"paper","y":0.2866666666666666,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=Fe","x":0.15999999999999998,"xanchor":"center","xref":"paper","y":0.6433333333333333,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=SiO2","x":0.49999999999999994,"xanchor":"center","xref":"paper","y":0.6433333333333333,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=Al2O3","x":0.8399999999999999,"xanchor":"center","xref":"paper","y":0.6433333333333333,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=mass_wet","x":0.15999999999999998,"xanchor":"center","xref":"paper","y":0.9999999999999999,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=mass_dry","x":0.49999999999999994,"xanchor":"center","xref":"paper","y":0.9999999999999999,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"variable=H2O","x":0.8399999999999999,"xanchor":"center","xref":"paper","y":0.9999999999999999,"yanchor":"bottom","yref":"paper"}],"legend":{"tracegroupgap":0},"margin":{"t":60},"title":{},"height":600},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 118-120

With color, excluded variable, and trendline. The trendline is per color (group).  Since grp2 is a single point, no
trendline applies.

.. GENERATED FROM PYTHON SOURCE LINES 120-125

.. code-block:: default


    fig = obj_mc.plot_comparison(other=obj_mc_ref, vars_exclude=['H2O'], color='group', trendline=True)
    fig.update_layout(height=600)
    # noinspection PyArgumentList,PyTypeChecker
    plotly.io.show(fig)



.. raw:: html
    :file: images/sphx_glr_112_compare_001.html






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.571 seconds)


.. _sphx_glr_download_auto_examples_112_compare.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 112_compare.py <112_compare.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 112_compare.ipynb <112_compare.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
