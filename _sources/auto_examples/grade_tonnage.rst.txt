
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/grade_tonnage.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_grade_tonnage.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_grade_tonnage.py:


Grade Tonnage
=============

The "Grade Tonnage" curve is often used to characterise an entire deposit.
It is a cumulative view that presents the "mass (tonnes) and head grade" with increasing cut-off grade.

They are useful in comparing deposits.

.. GENERATED FROM PYTHON SOURCE LINES 11-20

.. code-block:: default


    import pandas as pd
    import plotly

    from elphick.mass_composition import MassComposition
    from elphick.mass_composition.datasets.sample_data import iron_ore_sample_data

    import xarray as xr








.. GENERATED FROM PYTHON SOURCE LINES 21-25

Create a MassComposition object
-------------------------------

We get some demo data in the form of a pandas DataFrame

.. GENERATED FROM PYTHON SOURCE LINES 26-34

.. code-block:: default


    df_data: pd.DataFrame = iron_ore_sample_data()
    name = 'A072391'
    df_data.drop(columns=['Na2O', 'CaO', 'MnO', 'TiO2', 'P', 'K2O', 'MgO'], inplace=True)

    print(df_data.shape)
    df_data.head()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (126, 8)


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Al2O3</th>
          <th>Fe</th>
          <th>SiO2</th>
          <th>DHID</th>
          <th>interval_from</th>
          <th>interval_to</th>
        </tr>
        <tr>
          <th>index</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>6</th>
          <td>2.12</td>
          <td>0.35</td>
          <td>1.48</td>
          <td>64.30</td>
          <td>3.23</td>
          <td>CBS02</td>
          <td>26.60</td>
          <td>26.85</td>
        </tr>
        <tr>
          <th>7</th>
          <td>2.06</td>
          <td>0.23</td>
          <td>1.28</td>
          <td>64.91</td>
          <td>2.90</td>
          <td>CBS02</td>
          <td>26.85</td>
          <td>27.10</td>
        </tr>
        <tr>
          <th>9</th>
          <td>1.91</td>
          <td>0.23</td>
          <td>1.01</td>
          <td>65.09</td>
          <td>2.39</td>
          <td>CBS02</td>
          <td>27.70</td>
          <td>28.00</td>
        </tr>
        <tr>
          <th>10</th>
          <td>1.96</td>
          <td>0.36</td>
          <td>0.99</td>
          <td>65.03</td>
          <td>2.22</td>
          <td>CBS02</td>
          <td>28.00</td>
          <td>28.30</td>
        </tr>
        <tr>
          <th>12</th>
          <td>2.06</td>
          <td>0.40</td>
          <td>0.75</td>
          <td>65.87</td>
          <td>1.69</td>
          <td>CBS02</td>
          <td>28.60</td>
          <td>28.95</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 35-37

.. code-block:: default

    obj_mc: MassComposition = MassComposition(df_data, name=name)








.. GENERATED FROM PYTHON SOURCE LINES 38-42

Demonstrate the aggregate function
-----------------------------------

i.e. weight average of the dataset, a.k.a. head grade

.. GENERATED FROM PYTHON SOURCE LINES 43-50

.. code-block:: default


    print(obj_mc.aggregate())
    print(obj_mc.aggregate(as_dataframe=False))

    res: xr.Dataset = obj_mc.binned_mass_composition(cutoff_var='Fe', bin_width=1.0, cumulative=True, as_dataframe=False)
    res





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                mass_wet  mass_dry       H2O     Al2O3         Fe     SiO2
    name                                                                  
    A072391  2029.617808  1981.688  2.361519  1.773585  60.443938  2.82721
    <xarray.Dataset> Size: 48B
    Dimensions:   (index: 1)
    Dimensions without coordinates: index
    Data variables:
        mass_wet  (index) float64 8B 2.03e+03
        mass_dry  (index) float64 8B 1.982e+03
        H2O       (index) float64 8B 2.362
        Al2O3     (index) float64 8B 1.774
        Fe        (index) float64 8B 60.44
        SiO2      (index) float64 8B 2.827
    Attributes:
        mc_name:            Aggregate of A072391
        mc_vars_mass:       ['mass_wet', 'mass_dry']
        mc_vars_chem:       ['Al2O3', 'Fe', 'SiO2']
        mc_vars_attrs:      []
        mc_interval_edges:  {}
    /home/runner/work/mass-composition/mass-composition/elphick/mass_composition/mc_xarray.py:157: FutureWarning:

    The return type of `Dataset.dims` will be changed to return a set of dimension names in future, in order to be more consistent with `DataArray.dims`. To access a mapping from dimension names to lengths, please use `Dataset.sizes`.



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: 'â–º';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: 'â–¼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 560B
    Dimensions:   (Fe_bins: 10)
    Coordinates:
      * Fe_bins   (Fe_bins) object 80B (57.0, 58.0] (58.0, 59.0] ... (66.0, 67.0]
    Data variables:
        mass_wet  (Fe_bins) float64 80B 2.03e+03 1.966e+03 1.832e+03 ... 23.58 5.575
        mass_dry  (Fe_bins) float64 80B 1.982e+03 1.921e+03 1.791e+03 ... 23.44 5.52
        H2O       (Fe_bins) float64 80B 2.362 2.321 2.27 ... 0.6308 0.5975 0.9911
        Al2O3     (Fe_bins) float64 80B 1.774 1.722 1.665 ... 1.039 0.8941 0.873
        Fe        (Fe_bins) float64 80B 60.44 60.54 60.68 ... 65.17 65.69 66.19
        SiO2      (Fe_bins) float64 80B 2.827 2.778 2.689 2.545 ... 2.304 2.049 2.0
    Attributes:
        mc_name:            Aggregate of A072391 with group Fe
        mc_vars_mass:       [&#x27;mass_wet&#x27;, &#x27;mass_dry&#x27;]
        mc_vars_chem:       [&#x27;Al2O3&#x27;, &#x27;Fe&#x27;, &#x27;SiO2&#x27;]
        mc_vars_attrs:      []
        mc_interval_edges:  {}</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-535e17ad-4ee7-41cf-9459-d0af9d3ff086' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-535e17ad-4ee7-41cf-9459-d0af9d3ff086' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>Fe_bins</span>: 10</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-4e4a6147-0417-4df2-a4b3-2630fc22edbb' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4e4a6147-0417-4df2-a4b3-2630fc22edbb' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>Fe_bins</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>(57.0, 58.0] ... (66.0, 67.0]</div><input id='attrs-cb7f979e-14a2-4540-9ef9-358e96d59ca0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-cb7f979e-14a2-4540-9ef9-358e96d59ca0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-28c5793d-43da-4170-869b-02bed956f5c3' class='xr-var-data-in' type='checkbox'><label for='data-28c5793d-43da-4170-869b-02bed956f5c3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>%</dd><dt><span>standard_name :</span></dt><dd>Fe</dd><dt><span>mc_type :</span></dt><dd>chemistry</dd><dt><span>mc_col_orig :</span></dt><dd>Fe</dd></dl></div><div class='xr-var-data'><pre>array([Interval(57.0, 58.0, closed=&#x27;right&#x27;),
           Interval(58.0, 59.0, closed=&#x27;right&#x27;),
           Interval(59.0, 60.0, closed=&#x27;right&#x27;),
           Interval(60.0, 61.0, closed=&#x27;right&#x27;),
           Interval(61.0, 62.0, closed=&#x27;right&#x27;),
           Interval(62.0, 63.0, closed=&#x27;right&#x27;),
           Interval(63.0, 64.0, closed=&#x27;right&#x27;),
           Interval(64.0, 65.0, closed=&#x27;right&#x27;),
           Interval(65.0, 66.0, closed=&#x27;right&#x27;),
           Interval(66.0, 67.0, closed=&#x27;right&#x27;)], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-f1f7fb85-46e3-4d11-bc04-6db3733dc9c0' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f1f7fb85-46e3-4d11-bc04-6db3733dc9c0' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>mass_wet</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.03e+03 1.966e+03 ... 23.58 5.575</div><input id='attrs-da27b59d-8c89-4a54-a0a7-1850eaeba0ad' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-da27b59d-8c89-4a54-a0a7-1850eaeba0ad' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1143e511-6fd8-460e-bc43-3f33e00ce221' class='xr-var-data-in' type='checkbox'><label for='data-1143e511-6fd8-460e-bc43-3f33e00ce221' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>mass_units</dd><dt><span>standard_name :</span></dt><dd>Wet Mass</dd><dt><span>mc_type :</span></dt><dd>mass</dd><dt><span>mc_col_orig :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([2029.61780764, 1966.24413201, 1832.40451244, 1273.23539711,
            480.49695225,  190.52509456,   94.35518418,   51.13254505,
             23.58088726,    5.57525784])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>mass_dry</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.982e+03 1.921e+03 ... 23.44 5.52</div><input id='attrs-487141c4-f5f2-4510-b969-d35ea0023296' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-487141c4-f5f2-4510-b969-d35ea0023296' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a146ea68-c113-4f64-b2f4-305089f34eaa' class='xr-var-data-in' type='checkbox'><label for='data-a146ea68-c113-4f64-b2f4-305089f34eaa' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>mass_units</dd><dt><span>standard_name :</span></dt><dd>Dry Mass</dd><dt><span>mc_type :</span></dt><dd>mass</dd><dt><span>mc_col_orig :</span></dt><dd>mass_dry</dd></dl></div><div class='xr-var-data'><pre>array([1981.688, 1920.608, 1790.808, 1249.318,  472.378,  188.678,
             93.78 ,   50.81 ,   23.44 ,    5.52 ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>H2O</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.362 2.321 2.27 ... 0.5975 0.9911</div><input id='attrs-08b8f6a7-f49f-48cf-b177-2099350218e1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-08b8f6a7-f49f-48cf-b177-2099350218e1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-edfe015f-9288-48ef-aa27-f76c62e527c5' class='xr-var-data-in' type='checkbox'><label for='data-edfe015f-9288-48ef-aa27-f76c62e527c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>%</dd><dt><span>standard_name :</span></dt><dd>H2O</dd><dt><span>mc_type :</span></dt><dd>moisture</dd><dt><span>mc_col_orig :</span></dt><dd>H2O</dd></dl></div><div class='xr-var-data'><pre>array([2.36151888, 2.32097995, 2.27005075, 1.8784741 , 1.68969901,
           0.96947574, 0.60959468, 0.63080186, 0.59746379, 0.99112614])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Al2O3</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.774 1.722 1.665 ... 0.8941 0.873</div><input id='attrs-1ffe9734-d08a-4e25-accc-581fe83aa05b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1ffe9734-d08a-4e25-accc-581fe83aa05b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-646d0bd7-7a62-4681-b2bc-954de465f6f9' class='xr-var-data-in' type='checkbox'><label for='data-646d0bd7-7a62-4681-b2bc-954de465f6f9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>%</dd><dt><span>standard_name :</span></dt><dd>Al2O3</dd><dt><span>mc_type :</span></dt><dd>chemistry</dd><dt><span>mc_col_orig :</span></dt><dd>Al2O3</dd></dl></div><div class='xr-var-data'><pre>array([1.7735851 , 1.72190358, 1.66513797, 1.58723432, 1.33057763,
           1.24445616, 1.13898806, 1.03876993, 0.8940913 , 0.87298913])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Fe</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>60.44 60.54 60.68 ... 65.69 66.19</div><input id='attrs-4bdda395-5fae-4268-8bbf-f322912d5595' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4bdda395-5fae-4268-8bbf-f322912d5595' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a68d24f6-a1fc-4b8b-a685-c23dfe22cb6e' class='xr-var-data-in' type='checkbox'><label for='data-a68d24f6-a1fc-4b8b-a685-c23dfe22cb6e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>%</dd><dt><span>standard_name :</span></dt><dd>Fe</dd><dt><span>mc_type :</span></dt><dd>chemistry</dd><dt><span>mc_col_orig :</span></dt><dd>Fe</dd></dl></div><div class='xr-var-data'><pre>array([60.4439379 , 60.54429733, 60.68122032, 61.12485812, 62.29731211,
           63.40437359, 64.39875773, 65.17139146, 65.68619881, 66.19458333])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>SiO2</span></div><div class='xr-var-dims'>(Fe_bins)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.827 2.778 2.689 ... 2.049 2.0</div><input id='attrs-2d1fe35c-ae14-4357-9a05-85607eec0f59' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2d1fe35c-ae14-4357-9a05-85607eec0f59' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1e78784b-6db6-4a6e-b091-afbe06f666d7' class='xr-var-data-in' type='checkbox'><label for='data-1e78784b-6db6-4a6e-b091-afbe06f666d7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>%</dd><dt><span>standard_name :</span></dt><dd>SiO2</dd><dt><span>mc_type :</span></dt><dd>chemistry</dd><dt><span>mc_col_orig :</span></dt><dd>SiO2</dd></dl></div><div class='xr-var-data'><pre>array([2.82721018, 2.77829082, 2.68893448, 2.54513781, 2.35429631,
           2.39765039, 2.28791533, 2.3042964 , 2.04941553, 1.99981884])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-342d94b4-dbb9-4931-9a22-f7c53ab8c524' class='xr-section-summary-in' type='checkbox'  ><label for='section-342d94b4-dbb9-4931-9a22-f7c53ab8c524' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>Fe_bins</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-e913562c-2847-4559-994c-f6ee5e24c622' class='xr-index-data-in' type='checkbox'/><label for='index-e913562c-2847-4559-994c-f6ee5e24c622' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(IntervalIndex([(57.0, 58.0], (58.0, 59.0], (59.0, 60.0], (60.0, 61.0],
                   (61.0, 62.0], (62.0, 63.0], (63.0, 64.0], (64.0, 65.0],
                   (65.0, 66.0], (66.0, 67.0]],
                  dtype=&#x27;interval[float64, right]&#x27;, name=&#x27;Fe_bins&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-40e1a864-4626-405a-ad46-f3bbf11a3994' class='xr-section-summary-in' type='checkbox'  checked><label for='section-40e1a864-4626-405a-ad46-f3bbf11a3994' class='xr-section-summary' >Attributes: <span>(5)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>mc_name :</span></dt><dd>Aggregate of A072391 with group Fe</dd><dt><span>mc_vars_mass :</span></dt><dd>[&#x27;mass_wet&#x27;, &#x27;mass_dry&#x27;]</dd><dt><span>mc_vars_chem :</span></dt><dd>[&#x27;Al2O3&#x27;, &#x27;Fe&#x27;, &#x27;SiO2&#x27;]</dd><dt><span>mc_vars_attrs :</span></dt><dd>[]</dd><dt><span>mc_interval_edges :</span></dt><dd>{}</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-53

Tabular Grade bin data
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 54-59

.. code-block:: default


    res: pd.DataFrame = obj_mc.binned_mass_composition(cutoff_var='Fe', bin_width=1.0, cumulative=True,
                                                       direction='ascending', as_dataframe=True)
    res





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/mass-composition/mass-composition/elphick/mass_composition/mc_xarray.py:157: FutureWarning:

    The return type of `Dataset.dims` will be changed to return a set of dimension names in future, in order to be more consistent with `DataArray.dims`. To access a mapping from dimension names to lengths, please use `Dataset.sizes`.



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Al2O3</th>
          <th>Fe</th>
          <th>SiO2</th>
        </tr>
        <tr>
          <th>Fe_bins</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>(57.0, 58.0]</th>
          <td>63.373676</td>
          <td>61.080</td>
          <td>3.619288</td>
          <td>3.398666</td>
          <td>57.288222</td>
          <td>4.365437</td>
        </tr>
        <tr>
          <th>(58.0, 59.0]</th>
          <td>197.213295</td>
          <td>190.880</td>
          <td>3.211394</td>
          <td>2.791020</td>
          <td>58.217789</td>
          <td>4.124492</td>
        </tr>
        <tr>
          <th>(59.0, 60.0]</th>
          <td>756.382411</td>
          <td>732.370</td>
          <td>3.174639</td>
          <td>2.091473</td>
          <td>59.282386</td>
          <td>3.308385</td>
        </tr>
        <tr>
          <th>(60.0, 61.0]</th>
          <td>1549.120855</td>
          <td>1509.310</td>
          <td>2.569900</td>
          <td>1.912236</td>
          <td>59.863876</td>
          <td>2.975221</td>
        </tr>
        <tr>
          <th>(61.0, 62.0]</th>
          <td>1839.092713</td>
          <td>1793.010</td>
          <td>2.505731</td>
          <td>1.829265</td>
          <td>60.132412</td>
          <td>2.872413</td>
        </tr>
        <tr>
          <th>(62.0, 63.0]</th>
          <td>1935.262623</td>
          <td>1887.908</td>
          <td>2.446935</td>
          <td>1.805108</td>
          <td>60.247486</td>
          <td>2.853999</td>
        </tr>
        <tr>
          <th>(63.0, 64.0]</th>
          <td>1978.485263</td>
          <td>1930.878</td>
          <td>2.406248</td>
          <td>1.792921</td>
          <td>60.319538</td>
          <td>2.840970</td>
        </tr>
        <tr>
          <th>(64.0, 65.0]</th>
          <td>2006.036920</td>
          <td>1958.248</td>
          <td>2.382255</td>
          <td>1.784113</td>
          <td>60.381189</td>
          <td>2.836520</td>
        </tr>
        <tr>
          <th>(65.0, 66.0]</th>
          <td>2024.042550</td>
          <td>1976.168</td>
          <td>2.365294</td>
          <td>1.776101</td>
          <td>60.427875</td>
          <td>2.829521</td>
        </tr>
        <tr>
          <th>(66.0, 67.0]</th>
          <td>2029.617808</td>
          <td>1981.688</td>
          <td>2.361519</td>
          <td>1.773585</td>
          <td>60.443938</td>
          <td>2.827210</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 60-64

.. code-block:: default

    res: pd.DataFrame = obj_mc.binned_mass_composition(cutoff_var='Fe', bin_width=1.0, cumulative=True,
                                                       direction='descending', as_dataframe=True)
    res





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/mass-composition/mass-composition/elphick/mass_composition/mc_xarray.py:157: FutureWarning:

    The return type of `Dataset.dims` will be changed to return a set of dimension names in future, in order to be more consistent with `DataArray.dims`. To access a mapping from dimension names to lengths, please use `Dataset.sizes`.



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>mass_wet</th>
          <th>mass_dry</th>
          <th>H2O</th>
          <th>Al2O3</th>
          <th>Fe</th>
          <th>SiO2</th>
        </tr>
        <tr>
          <th>Fe_bins</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>(57.0, 58.0]</th>
          <td>2029.617808</td>
          <td>1981.688</td>
          <td>2.361519</td>
          <td>1.773585</td>
          <td>60.443938</td>
          <td>2.827210</td>
        </tr>
        <tr>
          <th>(58.0, 59.0]</th>
          <td>1966.244132</td>
          <td>1920.608</td>
          <td>2.320980</td>
          <td>1.721904</td>
          <td>60.544297</td>
          <td>2.778291</td>
        </tr>
        <tr>
          <th>(59.0, 60.0]</th>
          <td>1832.404512</td>
          <td>1790.808</td>
          <td>2.270051</td>
          <td>1.665138</td>
          <td>60.681220</td>
          <td>2.688934</td>
        </tr>
        <tr>
          <th>(60.0, 61.0]</th>
          <td>1273.235397</td>
          <td>1249.318</td>
          <td>1.878474</td>
          <td>1.587234</td>
          <td>61.124858</td>
          <td>2.545138</td>
        </tr>
        <tr>
          <th>(61.0, 62.0]</th>
          <td>480.496952</td>
          <td>472.378</td>
          <td>1.689699</td>
          <td>1.330578</td>
          <td>62.297312</td>
          <td>2.354296</td>
        </tr>
        <tr>
          <th>(62.0, 63.0]</th>
          <td>190.525095</td>
          <td>188.678</td>
          <td>0.969476</td>
          <td>1.244456</td>
          <td>63.404374</td>
          <td>2.397650</td>
        </tr>
        <tr>
          <th>(63.0, 64.0]</th>
          <td>94.355184</td>
          <td>93.780</td>
          <td>0.609595</td>
          <td>1.138988</td>
          <td>64.398758</td>
          <td>2.287915</td>
        </tr>
        <tr>
          <th>(64.0, 65.0]</th>
          <td>51.132545</td>
          <td>50.810</td>
          <td>0.630802</td>
          <td>1.038770</td>
          <td>65.171391</td>
          <td>2.304296</td>
        </tr>
        <tr>
          <th>(65.0, 66.0]</th>
          <td>23.580887</td>
          <td>23.440</td>
          <td>0.597464</td>
          <td>0.894091</td>
          <td>65.686199</td>
          <td>2.049416</td>
        </tr>
        <tr>
          <th>(66.0, 67.0]</th>
          <td>5.575258</td>
          <td>5.520</td>
          <td>0.991126</td>
          <td>0.872989</td>
          <td>66.194583</td>
          <td>1.999819</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 65-67

Plot the Grade Bins
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-76

.. code-block:: default


    fig = obj_mc.plot_bins(variables=['mass_dry', 'Fe', 'SiO2', 'Al2O3'],
                           cutoff_var='Fe',
                           bin_width=1.0,
                           cumulative=True,
                           direction='descending')
    # noinspection PyTypeChecker
    plotly.io.show(fig)  # this call to show will set the thumbnail for the gallery



.. raw:: html
    :file: images/sphx_glr_grade_tonnage_001.html


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/mass-composition/mass-composition/elphick/mass_composition/mc_xarray.py:157: FutureWarning:

    The return type of `Dataset.dims` will be changed to return a set of dimension names in future, in order to be more consistent with `DataArray.dims`. To access a mapping from dimension names to lengths, please use `Dataset.sizes`.






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.654 seconds)


.. _sphx_glr_download_auto_examples_grade_tonnage.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: grade_tonnage.py <grade_tonnage.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: grade_tonnage.ipynb <grade_tonnage.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
