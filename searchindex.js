Search.setIndex({"docnames": ["api/_autosummary/elphick.mass_composition.datasets", "api/_autosummary/elphick.mass_composition.datasets.datasets", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_assay", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_collars", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_geo", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_met", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_wireline", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_demo_data", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_iron_ore_sample_a072391", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_iron_ore_sample_xyz_a072391", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_nordic_iron_ore_sink_float", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_size_by_assay", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_size_distribution", "api/_autosummary/elphick.mass_composition.datasets.downloader", "api/_autosummary/elphick.mass_composition.datasets.downloader.Downloader", "api/_autosummary/elphick.mass_composition.datasets.sample_data", "api/_autosummary/elphick.mass_composition.datasets.sample_data.demo_size_network", "api/_autosummary/elphick.mass_composition.datasets.sample_data.dh_intervals", "api/_autosummary/elphick.mass_composition.datasets.sample_data.iron_ore_met_sample_data", "api/_autosummary/elphick.mass_composition.datasets.sample_data.iron_ore_sample_data", "api/_autosummary/elphick.mass_composition.datasets.sample_data.sample_data", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay_2", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay_3", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_distribution", "api/_autosummary/elphick.mass_composition.flowsheet", "api/_autosummary/elphick.mass_composition.flowsheet.Flowsheet", "api/_autosummary/elphick.mass_composition.mass_composition", "api/_autosummary/elphick.mass_composition.mass_composition.MassComposition", "api/_autosummary/elphick.mass_composition.mc_node", "api/_autosummary/elphick.mass_composition.mc_node.MCNode", "api/_autosummary/elphick.mass_composition.mc_node.NodeType", "api/_autosummary/elphick.mass_composition.mc_xarray", "api/_autosummary/elphick.mass_composition.mc_xarray.CompositionContext", "api/_autosummary/elphick.mass_composition.mc_xarray.MassCompositionAccessor", "api/_autosummary/elphick.mass_composition.mc_xarray.mc_aggregate", "api/_autosummary/elphick.mass_composition.stream", "api/_autosummary/elphick.mass_composition.stream.Stream", "api/_autosummary/elphick.mass_composition.utils", "api/_autosummary/elphick.mass_composition.utils.amenability", "api/_autosummary/elphick.mass_composition.utils.amenability.amenability_index", "api/_autosummary/elphick.mass_composition.utils.amenability.area_trapezoid", "api/_autosummary/elphick.mass_composition.utils.amenability.pairwise", "api/_autosummary/elphick.mass_composition.utils.components", "api/_autosummary/elphick.mass_composition.utils.components.elements", "api/_autosummary/elphick.mass_composition.utils.components.is_compositional", "api/_autosummary/elphick.mass_composition.utils.components.is_element", "api/_autosummary/elphick.mass_composition.utils.components.is_oxide", "api/_autosummary/elphick.mass_composition.utils.components.oxides", "api/_autosummary/elphick.mass_composition.utils.geometry", "api/_autosummary/elphick.mass_composition.utils.geometry.midpoint", "api/_autosummary/elphick.mass_composition.utils.hash_utils", "api/_autosummary/elphick.mass_composition.utils.hash_utils.check_hash", "api/_autosummary/elphick.mass_composition.utils.hash_utils.read_hash", "api/_autosummary/elphick.mass_composition.utils.hash_utils.read_hash_file", "api/_autosummary/elphick.mass_composition.utils.hash_utils.write_hash", "api/_autosummary/elphick.mass_composition.utils.interp", "api/_autosummary/elphick.mass_composition.utils.interp.interp_monotonic", "api/_autosummary/elphick.mass_composition.utils.interp.mass_preserving_interp", "api/_autosummary/elphick.mass_composition.utils.loader", "api/_autosummary/elphick.mass_composition.utils.loader.create_mass_composition", "api/_autosummary/elphick.mass_composition.utils.loader.streams_from_dataframe", "api/_autosummary/elphick.mass_composition.utils.moisture", "api/_autosummary/elphick.mass_composition.utils.moisture.solve_mass_moisture", "api/_autosummary/elphick.mass_composition.utils.parallel", "api/_autosummary/elphick.mass_composition.utils.parallel.TqdmParallel", "api/_autosummary/elphick.mass_composition.utils.partition", "api/_autosummary/elphick.mass_composition.utils.partition.napier_munn", "api/_autosummary/elphick.mass_composition.utils.partition.perfect", "api/_autosummary/elphick.mass_composition.utils.pd_utils", "api/_autosummary/elphick.mass_composition.utils.pd_utils.calculate_partition", "api/_autosummary/elphick.mass_composition.utils.pd_utils.calculate_recovery", "api/_autosummary/elphick.mass_composition.utils.pd_utils.column_prefix_counts", "api/_autosummary/elphick.mass_composition.utils.pd_utils.column_prefixes", "api/_autosummary/elphick.mass_composition.utils.pd_utils.composition_to_mass", "api/_autosummary/elphick.mass_composition.utils.pd_utils.mass_to_composition", "api/_autosummary/elphick.mass_composition.utils.pd_utils.weight_average", "api/_autosummary/elphick.mass_composition.utils.sampling", "api/_autosummary/elphick.mass_composition.utils.sampling.random_int", "api/_autosummary/elphick.mass_composition.utils.size", "api/_autosummary/elphick.mass_composition.utils.size.mean_size", "api/_autosummary/elphick.mass_composition.utils.size_distribution", "api/_autosummary/elphick.mass_composition.utils.size_distribution.gaudin_schuhmann", "api/_autosummary/elphick.mass_composition.utils.size_distribution.lynch", "api/_autosummary/elphick.mass_composition.utils.size_distribution.modified_rosin_rammler", "api/_autosummary/elphick.mass_composition.utils.size_distribution.rosin_rammler", "api/_autosummary/elphick.mass_composition.utils.sklearn", "api/_autosummary/elphick.mass_composition.utils.sklearn.PandasPipeline", "api/_autosummary/elphick.mass_composition.utils.sklearn.extract_feature_names", "api/_autosummary/elphick.mass_composition.utils.viz", "api/_autosummary/elphick.mass_composition.utils.viz.plot_parallel", "api/modules", "auto_examples/001_basic_usage", "auto_examples/002_data_examples", "auto_examples/003_constrain", "auto_examples/004_plot_demo", "auto_examples/104_math_operations", "auto_examples/105_create_network", "auto_examples/106_network_basics", "auto_examples/107_filtering", "auto_examples/108_sankey_plots", "auto_examples/109_split_and_partition", "auto_examples/110_network_layouts", "auto_examples/111_constraints_and_status", "auto_examples/112_compare", "auto_examples/113_partition_models", "auto_examples/114_compare_partitions", "auto_examples/115_simplify_network", "auto_examples/200_interval_data", "auto_examples/201_incremental_separation", "auto_examples/202_interval_data_advanced", "auto_examples/300_interval_data_sink_float", "auto_examples/400_mass_balancing", "auto_examples/502_dag", "auto_examples/503_dag_with_partitions", "auto_examples/504_dag_with_estimator", "auto_examples/_501_simulating_networks", "auto_examples/_simulating_network_functions", "auto_examples/grade_tonnage", "auto_examples/index", "auto_examples/iron_ore_assays", "auto_examples/resampling_interval_data", "auto_examples/sg_execution_times", "auto_examples/xarray_examples/basic_usage_xr", "auto_examples/xarray_examples/index", "auto_examples/xarray_examples/math_operations_xr", "auto_examples/xarray_examples/sg_execution_times", "datasets/datasets", "glossary/glossary", "index", "license/license", "usage/installation", "usage/quickstart", "usage/troubleshooting", "user_guide/content/01_getting_started", "user_guide/content/02_flowsheets", "user_guide/content/03_data", "user_guide/user_guide"], "filenames": ["api/_autosummary/elphick.mass_composition.datasets.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_assay.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_collars.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_geo.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_met.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_a072391_wireline.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_demo_data.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_iron_ore_sample_a072391.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_iron_ore_sample_xyz_a072391.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_nordic_iron_ore_sink_float.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_size_by_assay.rst", "api/_autosummary/elphick.mass_composition.datasets.datasets.load_size_distribution.rst", "api/_autosummary/elphick.mass_composition.datasets.downloader.rst", "api/_autosummary/elphick.mass_composition.datasets.downloader.Downloader.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.demo_size_network.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.dh_intervals.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.iron_ore_met_sample_data.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.iron_ore_sample_data.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.sample_data.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay_2.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_by_assay_3.rst", "api/_autosummary/elphick.mass_composition.datasets.sample_data.size_distribution.rst", "api/_autosummary/elphick.mass_composition.flowsheet.rst", "api/_autosummary/elphick.mass_composition.flowsheet.Flowsheet.rst", "api/_autosummary/elphick.mass_composition.mass_composition.rst", "api/_autosummary/elphick.mass_composition.mass_composition.MassComposition.rst", "api/_autosummary/elphick.mass_composition.mc_node.rst", "api/_autosummary/elphick.mass_composition.mc_node.MCNode.rst", "api/_autosummary/elphick.mass_composition.mc_node.NodeType.rst", "api/_autosummary/elphick.mass_composition.mc_xarray.rst", "api/_autosummary/elphick.mass_composition.mc_xarray.CompositionContext.rst", "api/_autosummary/elphick.mass_composition.mc_xarray.MassCompositionAccessor.rst", "api/_autosummary/elphick.mass_composition.mc_xarray.mc_aggregate.rst", "api/_autosummary/elphick.mass_composition.stream.rst", "api/_autosummary/elphick.mass_composition.stream.Stream.rst", "api/_autosummary/elphick.mass_composition.utils.rst", "api/_autosummary/elphick.mass_composition.utils.amenability.rst", "api/_autosummary/elphick.mass_composition.utils.amenability.amenability_index.rst", "api/_autosummary/elphick.mass_composition.utils.amenability.area_trapezoid.rst", "api/_autosummary/elphick.mass_composition.utils.amenability.pairwise.rst", "api/_autosummary/elphick.mass_composition.utils.components.rst", "api/_autosummary/elphick.mass_composition.utils.components.elements.rst", "api/_autosummary/elphick.mass_composition.utils.components.is_compositional.rst", "api/_autosummary/elphick.mass_composition.utils.components.is_element.rst", "api/_autosummary/elphick.mass_composition.utils.components.is_oxide.rst", "api/_autosummary/elphick.mass_composition.utils.components.oxides.rst", "api/_autosummary/elphick.mass_composition.utils.geometry.rst", "api/_autosummary/elphick.mass_composition.utils.geometry.midpoint.rst", "api/_autosummary/elphick.mass_composition.utils.hash_utils.rst", "api/_autosummary/elphick.mass_composition.utils.hash_utils.check_hash.rst", "api/_autosummary/elphick.mass_composition.utils.hash_utils.read_hash.rst", "api/_autosummary/elphick.mass_composition.utils.hash_utils.read_hash_file.rst", "api/_autosummary/elphick.mass_composition.utils.hash_utils.write_hash.rst", "api/_autosummary/elphick.mass_composition.utils.interp.rst", "api/_autosummary/elphick.mass_composition.utils.interp.interp_monotonic.rst", "api/_autosummary/elphick.mass_composition.utils.interp.mass_preserving_interp.rst", "api/_autosummary/elphick.mass_composition.utils.loader.rst", "api/_autosummary/elphick.mass_composition.utils.loader.create_mass_composition.rst", "api/_autosummary/elphick.mass_composition.utils.loader.streams_from_dataframe.rst", "api/_autosummary/elphick.mass_composition.utils.moisture.rst", "api/_autosummary/elphick.mass_composition.utils.moisture.solve_mass_moisture.rst", "api/_autosummary/elphick.mass_composition.utils.parallel.rst", "api/_autosummary/elphick.mass_composition.utils.parallel.TqdmParallel.rst", "api/_autosummary/elphick.mass_composition.utils.partition.rst", "api/_autosummary/elphick.mass_composition.utils.partition.napier_munn.rst", "api/_autosummary/elphick.mass_composition.utils.partition.perfect.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.calculate_partition.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.calculate_recovery.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.column_prefix_counts.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.column_prefixes.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.composition_to_mass.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.mass_to_composition.rst", "api/_autosummary/elphick.mass_composition.utils.pd_utils.weight_average.rst", "api/_autosummary/elphick.mass_composition.utils.sampling.rst", "api/_autosummary/elphick.mass_composition.utils.sampling.random_int.rst", "api/_autosummary/elphick.mass_composition.utils.size.rst", "api/_autosummary/elphick.mass_composition.utils.size.mean_size.rst", "api/_autosummary/elphick.mass_composition.utils.size_distribution.rst", "api/_autosummary/elphick.mass_composition.utils.size_distribution.gaudin_schuhmann.rst", "api/_autosummary/elphick.mass_composition.utils.size_distribution.lynch.rst", "api/_autosummary/elphick.mass_composition.utils.size_distribution.modified_rosin_rammler.rst", "api/_autosummary/elphick.mass_composition.utils.size_distribution.rosin_rammler.rst", "api/_autosummary/elphick.mass_composition.utils.sklearn.rst", "api/_autosummary/elphick.mass_composition.utils.sklearn.PandasPipeline.rst", "api/_autosummary/elphick.mass_composition.utils.sklearn.extract_feature_names.rst", "api/_autosummary/elphick.mass_composition.utils.viz.rst", "api/_autosummary/elphick.mass_composition.utils.viz.plot_parallel.rst", "api/modules.rst", "auto_examples/001_basic_usage.rst", "auto_examples/002_data_examples.rst", "auto_examples/003_constrain.rst", "auto_examples/004_plot_demo.rst", "auto_examples/104_math_operations.rst", "auto_examples/105_create_network.rst", "auto_examples/106_network_basics.rst", "auto_examples/107_filtering.rst", "auto_examples/108_sankey_plots.rst", "auto_examples/109_split_and_partition.rst", "auto_examples/110_network_layouts.rst", "auto_examples/111_constraints_and_status.rst", "auto_examples/112_compare.rst", "auto_examples/113_partition_models.rst", "auto_examples/114_compare_partitions.rst", "auto_examples/115_simplify_network.rst", "auto_examples/200_interval_data.rst", "auto_examples/201_incremental_separation.rst", "auto_examples/202_interval_data_advanced.rst", "auto_examples/300_interval_data_sink_float.rst", "auto_examples/400_mass_balancing.rst", "auto_examples/502_dag.rst", "auto_examples/503_dag_with_partitions.rst", "auto_examples/504_dag_with_estimator.rst", "auto_examples/_501_simulating_networks.rst", "auto_examples/_simulating_network_functions.rst", "auto_examples/grade_tonnage.rst", "auto_examples/index.rst", "auto_examples/iron_ore_assays.rst", "auto_examples/resampling_interval_data.rst", "auto_examples/sg_execution_times.rst", "auto_examples/xarray_examples/basic_usage_xr.rst", "auto_examples/xarray_examples/index.rst", "auto_examples/xarray_examples/math_operations_xr.rst", "auto_examples/xarray_examples/sg_execution_times.rst", "datasets/datasets.rst", "glossary/glossary.rst", "index.rst", "license/license.rst", "usage/installation.rst", "usage/quickstart.rst", "usage/troubleshooting.rst", "user_guide/content/01_getting_started.rst", "user_guide/content/02_flowsheets.rst", "user_guide/content/03_data.rst", "user_guide/user_guide.rst"], "titles": ["elphick.mass_composition.datasets", "elphick.mass_composition.datasets.datasets", "elphick.mass_composition.datasets.datasets.load_a072391_assay", "elphick.mass_composition.datasets.datasets.load_a072391_collars", "elphick.mass_composition.datasets.datasets.load_a072391_geo", "elphick.mass_composition.datasets.datasets.load_a072391_met", "elphick.mass_composition.datasets.datasets.load_a072391_wireline", "elphick.mass_composition.datasets.datasets.load_demo_data", "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_a072391", "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_xyz_a072391", "elphick.mass_composition.datasets.datasets.load_nordic_iron_ore_sink_float", "elphick.mass_composition.datasets.datasets.load_size_by_assay", "elphick.mass_composition.datasets.datasets.load_size_distribution", "elphick.mass_composition.datasets.downloader", "elphick.mass_composition.datasets.downloader.Downloader", "elphick.mass_composition.datasets.sample_data", "elphick.mass_composition.datasets.sample_data.demo_size_network", "elphick.mass_composition.datasets.sample_data.dh_intervals", "elphick.mass_composition.datasets.sample_data.iron_ore_met_sample_data", "elphick.mass_composition.datasets.sample_data.iron_ore_sample_data", "elphick.mass_composition.datasets.sample_data.sample_data", "elphick.mass_composition.datasets.sample_data.size_by_assay", "elphick.mass_composition.datasets.sample_data.size_by_assay_2", "elphick.mass_composition.datasets.sample_data.size_by_assay_3", "elphick.mass_composition.datasets.sample_data.size_distribution", "elphick.mass_composition.flowsheet", "elphick.mass_composition.flowsheet.Flowsheet", "elphick.mass_composition.mass_composition", "elphick.mass_composition.mass_composition.MassComposition", "elphick.mass_composition.mc_node", "elphick.mass_composition.mc_node.MCNode", "elphick.mass_composition.mc_node.NodeType", "elphick.mass_composition.mc_xarray", "elphick.mass_composition.mc_xarray.CompositionContext", "elphick.mass_composition.mc_xarray.MassCompositionAccessor", "elphick.mass_composition.mc_xarray.mc_aggregate", "elphick.mass_composition.stream", "elphick.mass_composition.stream.Stream", "elphick.mass_composition.utils", "elphick.mass_composition.utils.amenability", "elphick.mass_composition.utils.amenability.amenability_index", "elphick.mass_composition.utils.amenability.area_trapezoid", "elphick.mass_composition.utils.amenability.pairwise", "elphick.mass_composition.utils.components", "elphick.mass_composition.utils.components.elements", "elphick.mass_composition.utils.components.is_compositional", "elphick.mass_composition.utils.components.is_element", "elphick.mass_composition.utils.components.is_oxide", "elphick.mass_composition.utils.components.oxides", "elphick.mass_composition.utils.geometry", "elphick.mass_composition.utils.geometry.midpoint", "elphick.mass_composition.utils.hash_utils", "elphick.mass_composition.utils.hash_utils.check_hash", "elphick.mass_composition.utils.hash_utils.read_hash", "elphick.mass_composition.utils.hash_utils.read_hash_file", "elphick.mass_composition.utils.hash_utils.write_hash", "elphick.mass_composition.utils.interp", "elphick.mass_composition.utils.interp.interp_monotonic", "elphick.mass_composition.utils.interp.mass_preserving_interp", "elphick.mass_composition.utils.loader", "elphick.mass_composition.utils.loader.create_mass_composition", "elphick.mass_composition.utils.loader.streams_from_dataframe", "elphick.mass_composition.utils.moisture", "elphick.mass_composition.utils.moisture.solve_mass_moisture", "elphick.mass_composition.utils.parallel", "elphick.mass_composition.utils.parallel.TqdmParallel", "elphick.mass_composition.utils.partition", "elphick.mass_composition.utils.partition.napier_munn", "elphick.mass_composition.utils.partition.perfect", "elphick.mass_composition.utils.pd_utils", "elphick.mass_composition.utils.pd_utils.calculate_partition", "elphick.mass_composition.utils.pd_utils.calculate_recovery", "elphick.mass_composition.utils.pd_utils.column_prefix_counts", "elphick.mass_composition.utils.pd_utils.column_prefixes", "elphick.mass_composition.utils.pd_utils.composition_to_mass", "elphick.mass_composition.utils.pd_utils.mass_to_composition", "elphick.mass_composition.utils.pd_utils.weight_average", "elphick.mass_composition.utils.sampling", "elphick.mass_composition.utils.sampling.random_int", "elphick.mass_composition.utils.size", "elphick.mass_composition.utils.size.mean_size", "elphick.mass_composition.utils.size_distribution", "elphick.mass_composition.utils.size_distribution.gaudin_schuhmann", "elphick.mass_composition.utils.size_distribution.lynch", "elphick.mass_composition.utils.size_distribution.modified_rosin_rammler", "elphick.mass_composition.utils.size_distribution.rosin_rammler", "elphick.mass_composition.utils.sklearn", "elphick.mass_composition.utils.sklearn.PandasPipeline", "elphick.mass_composition.utils.sklearn.extract_feature_names", "elphick.mass_composition.utils.viz", "elphick.mass_composition.utils.viz.plot_parallel", "API Reference", "Basic usage", "Datasets and Sample Data", "Constrain", "Plot Demo", "Math Operations", "Create Network", "Network Basics", "Filtering", "Sankey Plots", "Splitting and Partitioning Objects", "Network Layouts", "Constraints and Status", "Compare", "Partition Models", "Compare Partition Separations", "Simplify a Network", "Interval Data", "Incremental Separation", "Interval Data - Advanced", "Interval Data - Sink Float", "Mass Balancing", "DAG to Define and Simulate", "DAG with Partitions", "DAG with Estimator", "Simulating a Network in Parallel", "Network Simulation Tools", "Grade Tonnage", "Example Gallery", "Iron Ore Assays", "Resampling Interval Data", "Computation times", "Basic usage XR", "Xarray Gallery", "Math Operations XR", "Computation times", "Datasets", "Glossary", "Welcome to mass-composition documentation!", "License", "Installation", "Quick Start Guide", "Troubleshooting", "Getting Started", "Flowsheets", "Data", "User Guide"], "terms": {"modul": [0, 38, 93, 98, 103, 108, 109, 110, 111, 112, 121, 127, 129], "function": [1, 15, 28, 32, 34, 35, 37, 39, 43, 49, 51, 56, 57, 58, 59, 62, 66, 69, 77, 79, 81, 86, 89, 101, 106, 110, 112, 114, 116, 117], "show_report": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 93], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 26, 28, 34, 37, 87, 92, 103, 104, 112, 113, 118, 121, 123], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 33, 34, 35, 37, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 40, 44, 45, 46, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 84, 85, 87, 90, 96, 101, 104, 105, 109, 117, 118, 121, 125], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 35, 37, 44, 45, 46, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 87, 90, 98, 105, 109, 112, 118, 121], "datafram": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 37, 40, 58, 61, 70, 71, 74, 75, 76, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 123, 125, 129, 132, 133], "class": [13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 64, 65, 86, 87, 116, 117, 128], "__init__": [14, 26, 28, 30, 31, 33, 34, 37, 65, 87], "instanti": [14, 26, 93, 134], "method": [14, 26, 28, 30, 34, 37, 57, 58, 65, 87, 93, 94, 95, 96, 99, 101, 105, 106, 107, 109, 112, 113, 114, 125, 127, 132, 133], "load_data": 14, "datafil": 14, "size_by_assai": [14, 93, 101, 102, 105, 106, 107, 109, 110, 111, 112, 114, 121], "zip": [14, 119, 127], "load": [14, 92, 93, 99, 101, 127], "231575341_size_by_assai": 14, "data": [14, 15, 17, 20, 26, 28, 57, 58, 70, 87, 90, 92, 94, 95, 96, 97, 99, 101, 102, 104, 105, 106, 109, 112, 114, 119, 120, 122, 123, 125, 127, 129, 132, 133], "panda": [14, 28, 69, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 123, 125, 132, 133], "To": [15, 100, 105, 109, 118, 121, 129, 133, 134], "provid": [15, 26, 28, 37, 57, 58, 71, 74, 75, 76, 94, 103, 107, 109, 113, 114, 116, 119, 124, 130, 132, 137], "sampl": [15, 17, 21, 22, 23, 28, 40, 58, 61, 101, 103, 105, 107, 110, 111, 112, 113, 114, 117, 119, 121, 122, 127, 128, 129], "flowsheet": [16, 97, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 116, 117, 128, 129], "n": [17, 98, 133], "5": [17, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 121, 123, 125, 133], "n_dh": 17, "2": [17, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121, 123, 125], "analyt": [17, 28, 40, 92, 100, 103, 109, 129], "fe": [17, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 121, 123, 125, 129], "al2o3": [17, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121, 123, 125], "down": 17, "The": [17, 26, 28, 30, 37, 40, 53, 57, 58, 61, 63, 65, 67, 68, 70, 71, 74, 75, 76, 82, 83, 84, 85, 87, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 127, 128, 129, 130, 131, 132, 133], "drillhol": [17, 108], "test": [17, 20, 96, 101, 104, 105, 106, 110, 111, 121, 123, 125, 137], "paramet": [17, 20, 26, 28, 30, 34, 35, 37, 40, 53, 57, 58, 61, 63, 65, 67, 68, 70, 71, 74, 75, 76, 80, 87, 90, 106, 114], "int": [17, 26, 28, 34, 58, 60, 61, 65, 72, 98, 108, 116, 117], "number": [17, 26, 28, 58, 61, 105], "drill": [17, 108, 115], "hole": [17, 108], "includ": [17, 20, 26, 28, 57, 58, 98, 117, 130], "option": [17, 26, 28, 30, 34, 37, 54, 58, 61, 63, 65, 70, 71, 74, 75, 76, 90, 100, 112, 132], "iter": [17, 28, 34, 42, 58, 61, 87, 98, 100, 112], "str": [17, 26, 28, 30, 34, 37, 40, 44, 45, 46, 47, 53, 54, 58, 60, 61, 65, 70, 71, 72, 73, 74, 75, 76, 87, 90, 98], "include_wet_mass": 20, "true": [20, 26, 28, 34, 37, 45, 46, 47, 57, 58, 87, 93, 98, 103, 104, 110, 112, 114, 115, 118, 120, 121, 123], "include_dry_mass": 20, "include_moistur": 20, "creat": [20, 26, 28, 37, 58, 61, 90, 93, 113, 114, 119, 122, 127, 129, 132, 134, 135], "synthet": 20, "bool": [20, 26, 28, 34, 37, 52, 57, 58], "If": [20, 26, 28, 34, 37, 57, 58, 61, 65, 80, 87, 94, 110, 129, 131, 132, 133], "wet": [20, 58, 63, 71, 74, 75, 76, 92, 118, 128, 129], "mass": [20, 26, 28, 34, 35, 37, 57, 58, 63, 70, 71, 74, 75, 76, 82, 83, 84, 85, 90, 92, 93, 94, 95, 98, 99, 100, 103, 104, 107, 109, 110, 115, 118, 119, 121, 122, 127, 128, 131, 132], "i": [20, 26, 28, 34, 37, 40, 61, 70, 71, 74, 75, 76, 80, 82, 83, 84, 85, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 127, 128, 129, 130, 131, 132, 136, 137], "dry": [20, 28, 37, 58, 63, 70, 71, 74, 75, 76, 92, 118, 128, 129], "moistur": [20, 98, 129], "h2o": [20, 71, 74, 75, 76, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121, 123, 128], "size": [21, 22, 23, 28, 67, 68, 70, 82, 83, 84, 85, 92, 95, 96, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 121, 123, 125, 127], "x": [21, 22, 23, 28, 41, 58, 61, 67, 68, 82, 85, 87, 94, 101, 105, 108, 111, 112, 115, 127], "assai": [21, 22, 23, 101, 111, 112, 119, 121, 122, 127], "3": [22, 23, 26, 28, 82, 83, 84, 85, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 125, 133], "balanc": [22, 30, 96, 98, 103, 107, 110, 119, 122, 125], "unbalanc": [23, 98], "name": [26, 28, 34, 37, 40, 61, 65, 70, 87, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 129], "attribut": [26, 28, 30, 31, 33, 34, 37, 87, 92, 95, 96, 101, 104, 105, 106, 108, 109, 112, 115, 118, 123, 125], "classmethod": 26, "from_dag": [26, 113, 114, 115], "dag": [26, 119, 122], "construct": [26, 92, 94, 95, 96, 99, 101, 103, 104, 108, 110, 113, 123, 125], "from": [26, 28, 34, 37, 57, 58, 61, 70, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 127, 128, 130, 132, 133], "object": [26, 28, 34, 37, 61, 65, 87, 93, 96, 97, 107, 109, 110, 113, 114, 116, 119, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135], "ha": [26, 28, 37, 87, 93, 94, 97, 99, 112, 128], "been": [26, 34, 93, 94, 98, 99, 112], "run": [26, 61, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 123, 125], "previous": 26, "from_datafram": [26, 97, 112], "df": [26, 61, 71, 74, 75, 76, 97, 112, 115], "mc_name_col": [26, 61, 97, 112], "none": [26, 28, 34, 37, 58, 60, 61, 63, 65, 87, 90], "n_job": [26, 61, 113, 114, 115, 116], "1": [26, 28, 34, 37, 61, 70, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 125, 133], "network": [26, 99, 100, 110, 113, 114, 115, 119, 122, 128, 129, 131, 135], "column": [26, 28, 34, 40, 58, 61, 70, 71, 72, 73, 74, 75, 76, 108, 112, 115, 118, 132], "specifi": [26, 28, 34, 37, 61, 99, 103, 110, 112], "contain": [26, 40, 61, 70, 71, 74, 75, 76, 93, 99, 110, 111, 127], "assum": [26, 28, 61, 71, 74, 75, 76], "wide": [26, 61], "mc": [26, 28, 37, 61, 98, 103, 110, 117, 132], "extract": [26, 61, 105], "prefix": [26, 61, 87], "parallel": [26, 28, 61, 90, 95, 108, 117, 119, 122, 129], "job": [26, 61], "us": [26, 28, 34, 37, 42, 57, 58, 61, 80, 82, 83, 84, 85, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 127, 128, 130, 133, 137], "all": [26, 28, 61, 71, 74, 75, 76, 80, 87, 98, 101, 103, 104, 113, 114, 115, 119, 130], "avail": [26, 61, 87, 105, 115], "core": [26, 61], "an": [26, 28, 31, 33, 37, 57, 58, 61, 80, 90, 95, 98, 99, 100, 103, 104, 105, 106, 108, 109, 113, 114, 115, 117, 118, 121, 123, 130, 132, 133], "instanc": 26, "initi": [26, 137], "from_stream": [26, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 112, 117], "stream": [26, 28, 70, 99, 100, 103, 104, 105, 110, 112, 113, 114, 115, 117, 128], "list": [26, 28, 44, 45, 46, 47, 48, 73, 116, 121], "union": [26, 28, 34, 37, 45, 46, 47, 58, 60, 61, 63], "masscomposit": [26, 34, 35, 37, 60, 61, 93, 96, 97, 101, 102, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 123, 125, 128, 132, 133, 134, 135], "from_yaml": 26, "flowsheet_fil": 26, "defin": [26, 28, 34, 37, 58, 61, 98, 101, 104, 106, 107, 112, 116, 119, 121, 122], "yaml": 26, "file": [26, 53, 93, 122, 126, 130], "path": [26, 28, 30, 53, 55, 110, 111], "follow": [26, 82, 83, 84, 85, 129, 130, 132, 133], "prescrib": [26, 103], "format": [26, 34, 103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "get_column_format": 26, "strip_perc": 26, "lookup": 26, "string": [26, 53], "remov": [26, 28, 99, 109, 110], "lead": 26, "symbol": 26, "plotli": [26, 28, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121], "tabl": [26, 98, 102, 106], "dict": [26, 28, 34, 45, 46, 47, 57, 61, 72, 73, 87, 94, 98, 105, 112, 116], "get_edge_by_nam": [26, 98, 103], "get": [26, 87, 92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 110, 112, 118, 120, 121, 123, 125, 127, 133], "its": [26, 100, 129], "store": 26, "edg": [26, 28, 57, 58, 61, 80, 98, 99, 100, 103, 109, 114, 121], "get_input_stream": 26, "input": [26, 28, 30, 37, 67, 68, 87, 96, 101, 105, 112, 113, 114, 115, 125], "feed": [26, 70, 94, 97, 98, 100, 102, 103, 104, 106, 107, 110, 113, 114, 115, 117], "get_output_stream": 26, "output": [26, 28, 30, 37, 87, 96, 113, 114, 125], "product": [26, 104, 114], "get_stream_nam": 26, "nodes_to_dict": [26, 98], "export": 26, "mcnode": [26, 98], "A": [26, 28, 30, 34, 35, 37, 40, 57, 58, 63, 68, 70, 71, 74, 75, 76, 80, 92, 94, 100, 112, 123, 127, 128, 130, 137], "dictionari": [26, 57, 98], "kei": [26, 37, 87, 98], "integ": [26, 28, 98, 108, 115, 133], "plot": [26, 28, 82, 85, 90, 98, 102, 103, 105, 108, 110, 112, 113, 114, 119, 121, 122, 129], "orient": [26, 102], "horizont": [26, 102], "matplotlib": [26, 98, 100, 103, 108], "vertic": [26, 102], "layout": [26, 119, 122], "figur": [26, 28, 90, 95, 100, 105, 108, 120, 129, 133], "plot_bal": [26, 110, 112], "facet_col_wrap": [26, 28], "color": [26, 28, 90, 95, 100, 101, 104, 105, 106, 108, 110, 112, 120, 129], "node": [26, 30, 103, 107, 110, 113, 114, 115, 128], "versu": 26, "across": [26, 40, 103, 109, 110, 112], "subplot": [26, 28, 104], "per": [26, 28, 34, 104], "row": [26, 28, 108], "befor": [26, 99, 100, 108, 129], "wrap": [26, 115], "variabl": [26, 28, 34, 90, 92, 94, 95, 96, 101, 104, 105, 106, 108, 109, 112, 115, 118, 120, 121, 123, 125], "plot_network": [26, 98, 100, 101, 102, 103, 113, 114, 115], "plot_parallel": [26, 28, 95, 101, 106, 108, 112, 120, 129, 133], "vars_includ": [26, 28, 95, 120], "vars_exclud": [26, 28, 104], "titl": [26, 28, 40, 90, 105, 127], "include_dim": [26, 28], "plot_interval_edg": [26, 28, 120], "interact": [26, 28, 90, 95, 98, 103, 129], "explor": [26, 28, 90], "multidimension": [26, 28, 101], "like": [26, 28, 87, 90, 92, 110, 115, 129, 131, 133], "composit": [26, 28, 34, 37, 43, 57, 58, 70, 71, 74, 75, 76, 90, 92, 93, 94, 95, 98, 99, 100, 103, 104, 109, 110, 112, 115, 118, 121, 127, 128, 131, 132], "exclud": [26, 28, 104], "boolean": [26, 28], "dimens": [26, 28, 34, 37, 57, 58, 67, 68, 92, 95, 96, 104, 105, 106, 108, 109, 112, 114, 118, 121, 123, 125, 133], "show": [26, 28, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 120, 121, 137], "dim": [26, 28, 34, 101, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 121], "interv": [26, 28, 57, 58, 61, 70, 109, 118, 119, 122], "instead": [26, 28], "mid": [26, 28], "plot_sankei": [26, 98, 100], "width_var": 26, "mass_wet": [26, 58, 63, 71, 74, 75, 76, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121, 123, 125, 132], "color_var": 26, "edge_colormap": 26, "copper_r": [26, 101, 105, 106, 107, 114, 115], "vmin": 26, "vmax": 26, "sankei": [26, 97, 98, 113, 114, 115, 119, 122], "determin": [26, 82, 83, 84, 85, 121], "width": [26, 28, 100, 105, 121], "colormap": 26, "float": [26, 28, 34, 37, 57, 58, 67, 68, 87, 101, 119, 122, 127], "valu": [26, 28, 31, 33, 34, 37, 57, 58, 61, 94, 99, 100, 105, 112, 133], "map": [26, 57, 105, 109, 118, 121], "minimum": [26, 28], "maximum": [26, 28, 37, 103], "queri": [26, 92, 99, 100, 111, 115], "mc_name": [26, 92, 95, 96, 99, 100, 101, 105, 106, 108, 109, 112, 118, 123, 125], "filter": [26, 119, 122], "appli": [26, 28, 34, 37, 87, 93, 99, 101, 103, 104, 109, 112, 114, 115, 127], "index": [26, 28, 40, 57, 58, 61, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 108, 109, 112, 113, 114, 118, 120, 121, 123, 125, 129, 133], "result": [26, 28, 34, 37, 57, 58, 87, 94, 96, 103, 104, 109, 110, 111, 113, 114, 116, 121, 133], "ar": [26, 28, 37, 63, 71, 74, 75, 76, 80, 87, 93, 94, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 127, 129, 132, 133], "other": [26, 28, 34, 37, 63, 71, 74, 75, 76, 80, 87, 94, 104, 115, 129, 130], "which": [26, 28, 37, 42, 70, 80, 83, 84, 85, 87, 99, 100, 101, 105, 106, 107, 112, 114, 133], "first": [26, 28, 34, 37, 87, 94, 98, 101, 103, 108, 109, 115, 121, 123], "report": [26, 30, 93, 98, 99, 105, 107, 110, 127, 129], "apply_format": [26, 98], "summari": [26, 107], "total": [26, 71, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126], "weight": [26, 28, 30, 34, 35, 71, 74, 75, 76, 92, 98, 99, 118, 123, 129, 132], "averag": [26, 28, 34, 35, 70, 71, 76, 92, 98, 118, 123, 129, 132], "reset_stream_nod": [26, 98], "reset": [26, 133], "break": [26, 98], "relationship": [26, 97, 113, 114], "within": [26, 99, 121], "set_node_nam": [26, 98], "node_nam": [26, 30, 98, 107], "set": [26, 28, 87, 93, 95, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 118, 120, 121, 133], "set_stream_data": [26, 98], "stream_data": [26, 60, 98], "streams_to_dict": [26, 98], "table_plot": [26, 97, 98, 100, 101, 102, 105, 106, 107, 110, 112, 113, 114, 115, 116], "plot_typ": [26, 97, 98, 100, 102, 112, 113, 114, 115], "cols_exclud": 26, "table_po": [26, 97, 98, 100, 101, 102, 105, 106, 107, 112], "left": [26, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 121], "table_area": [26, 97, 98, 112], "0": [26, 28, 30, 34, 37, 63, 70, 80, 82, 83, 84, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126], "4": [26, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 114, 115, 118, 120, 121, 123, 125], "table_header_color": 26, "cornflowerblu": 26, "table_odd_color": 26, "whitesmok": 26, "table_even_color": 26, "lightgrai": 26, "sankey_width_var": 26, "sankey_color_var": [26, 101, 105, 106, 107, 114, 115], "sankey_edge_colormap": [26, 101, 105, 106, 107, 114, 115], "sankey_vmin": [26, 101, 105, 106, 107, 114, 115], "sankey_vmax": [26, 101, 105, 106, 107, 114, 115], "network_orient": [26, 102], "posit": [26, 127, 133], "right": [26, 57, 58, 101, 105, 106, 108, 109, 112, 118, 121, 130], "top": [26, 98, 101, 110, 115], "bottom": [26, 80, 98], "proport": [26, 104], "height": [26, 104, 109], "alloc": 26, "header": 26, "odd": 26, "even": 26, "to_datafram": [26, 94, 96, 99, 101, 103, 104, 105, 109, 110, 112, 115, 121, 123, 125], "tidi": 26, "add": [26, 28, 30, 34, 37, 94, 96, 98, 100, 101, 104, 105, 108, 113, 114, 116, 123, 125, 129, 131, 134, 135, 136], "so": [26, 80, 93, 97, 100, 103, 110, 112, 115, 123, 127, 130], "uniqu": [26, 113, 121], "to_simpl": [26, 107], "simplifi": [26, 93, 119, 122, 127], "mass_wet_var": 28, "mass_dry_var": [28, 115], "moisture_var": 28, "chem_var": 28, "mass_unit": [28, 108], "composition_unit": 28, "constraint": [28, 94, 112, 119, 122], "config_fil": 28, "__add__": 28, "two": [28, 34, 37, 63, 70, 71, 93, 98, 99, 100, 106, 110, 115, 127, 128, 136], "perform": [28, 34, 80, 94, 98, 104, 106, 115], "addit": [28, 30, 34, 37, 71, 74, 75, 76, 115], "onli": [28, 34, 37, 61, 65, 70, 87, 95, 98, 106, 109, 114, 121, 129], "append": [28, 34], "ani": [28, 34, 37, 98, 100, 110, 115, 121, 130], "present": [28, 40, 98, 118], "ignor": [28, 71, 75, 76, 106], "var": [28, 35], "param": [28, 34, 37, 87], "self": [28, 34, 37, 65, 87], "aggreg": [28, 34, 35, 100, 101, 106, 108, 112, 120, 121, 129, 132], "group_var": [28, 34, 92, 120, 123], "group_bin": [28, 34], "as_datafram": [28, 34, 92, 104, 118, 123], "original_column_nam": [28, 34, 123], "calcul": [28, 34, 37, 40, 70, 71, 80, 128, 129, 132], "group": [28, 34, 92, 94, 95, 96, 99, 101, 103, 104, 118, 123, 125], "bin": [28, 34, 108], "pd": [28, 34, 40, 58, 70, 71, 74, 75, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 123, 125, 129], "origin": [28, 34, 57, 58, 93, 94, 96, 101, 106, 108, 110, 111, 121, 125, 127, 129], "dataset": [28, 34, 35, 37, 57, 58, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 129, 132, 133], "binned_mass_composit": [28, 118], "cutoff_var": [28, 118], "bin_width": [28, 118], "cumul": [28, 34, 118, 121], "direct": [28, 30, 34, 98, 109, 113, 114, 118, 121, 129], "descend": [28, 34, 118], "k": [28, 82, 83, 92, 105, 112, 118, 123, 129, 133], "grade": [28, 92, 96, 99, 100, 101, 103, 106, 119, 121, 122, 123, 125], "tonnag": [28, 119, 122], "curv": [28, 70, 101, 105, 118], "cut": [28, 67, 68, 118], "off": [28, 118], "ascend": [28, 34, 118, 121], "accumul": 28, "calculate_partit": [28, 105], "ref": [28, 67, 82, 83, 84, 85, 105, 115], "partit": [28, 34, 37, 70, 107, 109, 110, 111, 112, 113, 119, 122], "rel": [28, 40, 57, 58, 109], "constrain": [28, 119, 122], "clip_mass": [28, 94], "clip_composit": 28, "relative_mass": [28, 94], "relative_composit": [28, 94], "It": [28, 40, 94, 100, 103, 105, 108, 110, 116, 118, 128, 129, 132, 133], "possibl": [28, 94, 98, 103, 132], "improb": [28, 94], "In": [28, 94, 98, 100, 101, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115], "thi": [28, 34, 37, 57, 58, 71, 74, 75, 76, 87, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 130, 131, 132, 133, 137], "case": [28, 34, 70, 87, 103, 105, 106, 108, 110, 111, 113, 132, 133], "can": [28, 42, 70, 93, 94, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 112, 113, 114, 115, 117, 121, 123, 127, 129, 132, 133, 135, 137], "help": [28, 82, 83, 84, 85, 123], "improv": [28, 137], "integr": [28, 93, 127], "tupl": [28, 34, 37, 60, 94, 116, 117], "limit": [28, 94, 108, 130], "between": [28, 108, 109, 113, 114, 128], "absolut": [28, 57, 58, 94, 96, 101, 121, 125], "recoveri": [28, 37, 40, 71, 94, 106], "compon": [28, 63, 74, 94, 95, 96, 104, 106, 109, 112, 125, 132], "must": [28, 37, 87, 99, 110, 113, 114, 129, 132], "new": [28, 34, 37, 58, 61, 87, 110, 112, 137], "argument": [28, 37, 63, 87, 93, 94, 101, 102, 105, 106, 112, 114], "div": [28, 34, 125], "divid": [28, 34, 94, 104, 112, 114], "denomin": [28, 34], "refer": [28, 37, 70, 93, 94, 105, 127], "ideal_incremental_composit": 28, "discard_from": [28, 109], "lowest": [28, 109], "increment": [28, 40, 119, 122], "separ": [28, 34, 37, 101, 104, 105, 107, 112, 119, 122], "fraction": [28, 34, 37, 40, 57, 58, 65, 70, 80, 82, 83, 84, 85, 96, 97, 99, 101, 108, 109, 110, 111, 113, 116, 117, 121, 123, 125], "sort": [28, 109, 121], "prior": [28, 58, 71, 74, 75, 76, 87, 109], "discard": [28, 109], "remain": [28, 98, 109, 110], "recalcul": [28, 109], "portion": [28, 96, 109, 125, 130], "equival": [28, 96, 101, 103, 109, 125], "perfect": [28, 101, 106, 107, 109], "everi": [28, 109], "applic": [28, 37, 40, 61, 70, 109], "1d": [28, 34, 61, 101, 108, 110, 121], "where": [28, 82, 83, 84, 85, 87, 94, 103, 108, 109, 110, 115, 133, 137], "singl": [28, 57, 58, 103, 104, 106, 107, 109, 110, 127, 129, 134], "see": [28, 34, 37, 87, 110, 127, 129, 132], "also": [28, 34, 37, 87, 94, 98, 102, 103, 104, 108, 129], "ideal_incremental_separ": [28, 109], "ideal_incremental_recoveri": 28, "liter": 28, "highest": [28, 109], "next": [28, 114], "etc": [28, 113, 114], "apply_closur": 28, "miss": [28, 63, 110], "record": [28, 30, 94, 99, 103, 133], "zero": [28, 57, 58, 80, 109, 110, 112], "close": [28, 118, 121], "envelop": 28, "plot_amen": [28, 109], "target_analyt": [28, 109], "gangue_analyt": 28, "yield": [28, 40, 106, 109], "understand": [28, 134], "amen": 28, "reject": [28, 114], "graphobject": 28, "plot_bin": [28, 118], "plot_comparison": [28, 104], "trendlin": [28, 104], "trendline_kwarg": 28, "compar": [28, 107, 118, 119, 122], "differ": [28, 37, 105, 106, 109, 114, 121], "allow": [28, 37, 96, 114, 115, 129], "customis": 28, "http": [28, 67, 82, 83, 84, 85], "com": [28, 67, 129], "python": [28, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 129], "linear": 28, "fit": [28, 87, 94, 105, 115, 130], "plot_grade_recoveri": [28, 109], "gener": [28, 37, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125], "ideal": [28, 40, 106, 107], "chosen": 28, "properti": [28, 101, 103, 123, 128, 132], "each": [28, 87, 98, 99, 100, 108, 113, 114, 121], "theoret": 28, "liber": 28, "comminut": 28, "plot_interv": [28, 121], "show_edg": 28, "min_x": 28, "axi": 28, "reason": [28, 121], "visual": [28, 105, 121], "rang": [28, 34, 94, 103, 109], "log": [28, 37, 65, 82, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 121], "scale": [28, 37, 112], "when": [28, 37, 82, 93, 103, 104, 107, 108, 112, 117, 133], "plot_ternari": [28, 95], "ternari": [28, 95], "diagram": [28, 95], "resample_1d": [28, 121], "interval_edg": [28, 58, 60, 61, 121], "precis": [28, 58, 121], "include_original_edg": [28, 58, 121], "resampl": [28, 119, 122], "grid": [28, 58, 61, 121], "up": [28, 58, 61, 98, 105, 121], "factor": [28, 58, 61, 108, 121], "exampl": [28, 58, 61, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 127, 129, 132, 133, 137], "10": [28, 58, 61, 83, 84, 85, 92, 94, 95, 96, 98, 99, 101, 103, 104, 108, 111, 112, 117, 118, 120, 121, 123, 125], "automat": [28, 37, 58, 61, 98, 110, 132], "resolut": [28, 58, 61], "decim": [28, 58], "place": [28, 58, 133], "round": [28, 58, 105, 121, 123], "interpol": [28, 57, 58, 105], "onto": 28, "split": [28, 34, 37, 96, 98, 99, 100, 103, 105, 107, 110, 111, 112, 113, 114, 115, 117, 119, 122, 123, 125], "name_1": [28, 37, 98, 99, 103, 105, 106, 107, 110, 112, 113, 114, 115, 117], "name_2": [28, 37, 98, 99, 103, 105, 106, 107, 110, 112, 113, 114, 115, 117], "simpl": [28, 34, 92, 93, 94, 103, 105, 113, 115, 123, 127, 133], "maintain": [28, 34, 109, 121], "same": [28, 34, 98, 99, 100, 105, 107, 110, 113, 114, 115], "split_by_partit": [28, 34, 37, 101, 105, 106, 107, 110, 112, 114], "split_by_funct": [28, 37], "split_by_estim": [28, 37, 115], "constant": [28, 34, 83, 84, 85], "complement": [28, 34, 37, 40, 96, 101, 125], "estim": [28, 37, 87, 94, 119, 122], "extra_featur": [28, 37, 115], "allow_prefix_mismatch": [28, 37, 115], "mass_recovery_column": [28, 37, 115], "mass_recovery_max": [28, 37, 115], "sklearn": [28, 37, 115], "predict": [28, 37, 87, 115], "pandaspipelin": [28, 115], "transform": [28, 34, 37, 87, 93, 113, 114, 127], "repres": [28, 37, 57, 58, 70, 100, 102, 105, 106, 107, 109, 110, 114, 128], "structur": [28, 37, 93, 127], "ident": [28, 37], "featur": [28, 37, 87, 94, 115], "pass": [28, 37, 82, 83, 84, 85, 87, 94, 98, 100, 101, 105, 106, 108, 109, 110, 111, 112, 115, 121], "info": [28, 37, 103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "messag": [28, 37, 103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "rais": [28, 37], "error": [28, 37, 57, 58, 110, 112], "indic": [28, 37, 40, 109], "model": [28, 37, 87, 94, 106, 119, 122], "explicitli": [28, 37], "execut": [28, 37, 65, 93, 99, 114, 115, 122, 126], "should": [28, 37, 133], "either": [28, 30, 37, 94, 128], "100": [28, 37, 63, 82, 83, 84, 85, 92, 94, 95, 96, 97, 99, 101, 103, 104, 105, 109, 111, 112, 114, 115, 116, 121, 123, 125], "split_funct": [28, 37], "callabl": [28, 34, 37, 105], "partition_definit": [28, 34, 37, 101, 105, 106, 107, 110, 112, 114], "along": [28, 34, 37, 101, 106, 114], "given": [28, 34, 37], "effici": [28, 34, 37, 115], "sub": [28, 34, 37, 96, 123, 125], "subtract": [28, 34, 37, 96, 104, 125], "to_xarrai": [28, 123], "compliant": [28, 35, 123], "xr": [28, 35, 57, 58, 104, 118, 119, 124, 126, 132], "node_id": [30, 98], "node_subset": [30, 98], "out": [30, 94, 99, 103, 130], "imbalance_report": 30, "html": [30, 115], "do": [30, 130], "around": [30, 115], "enumer": [31, 33], "xarray_obj": 34, "xarrai": [34, 57, 92, 95, 99, 104, 105, 106, 108, 109, 112, 118, 132, 133], "accessor": [34, 132], "column_format": 34, "composition_to_mass": [34, 123], "expect": [34, 103, 109], "have": [34, 87, 93, 98, 103, 110, 113, 114, 115, 121, 129, 132, 133], "reduc": [34, 99, 105], "suppli": [34, 63, 94, 128], "divis": [34, 96, 125], "mass_to_composit": [34, 123], "mul": 34, "multipli": 34, "retain": [34, 80, 83, 84, 85, 93, 101, 105, 106, 109, 112, 121, 127], "attr": 34, "note": [34, 80, 87, 92, 93, 98, 103, 110, 121, 127], "doe": [34, 96, 101, 110, 112, 115, 125], "togeth": [34, 116, 137], "oper": [34, 40, 101, 104, 105, 110, 112, 113, 114, 115, 119, 122, 123, 124, 126, 129, 132], "ndarrai": [34, 67, 68, 80, 87, 121], "scalr": 34, "arrai": [34, 82, 83, 84, 85, 87], "xr_d": [35, 123, 125, 132], "standalon": 35, "sum": [35, 96, 101, 125], "chem": 35, "mass_dri": [35, 58, 63, 70, 71, 74, 75, 76, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121, 123, 125, 132], "kwarg": [37, 65, 87, 113, 114, 115], "word": 37, "anoth": [37, 104, 110], "assign": [37, 108], "second": [37, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125], "base": [37, 101, 106, 108, 110, 114, 121], "baseestim": 37, "df_recoveri": 40, "col_target": 40, "col_mass_recoveri": 40, "implement": [40, 87, 110], "paper": 40, "OF": [40, 105, 130], "individu": [40, 99, 129], "particl": [40, 83, 84, 85, 101, 105, 121, 127], "pyknometri": 40, "g": [40, 67, 68, 108, 110, 111, 113, 114], "dr": 40, "t": [40, 104], "f": [40, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117], "mason": 40, "dm": 40, "powder": 40, "10th": 40, "ferrosilicon": 40, "confer": 40, "particular": [40, 99, 109, 130], "gangu": [40, 109], "target": [40, 87, 109], "full": [40, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 129], "process": [40, 65, 94, 98, 101, 104, 105, 106, 109, 112, 114, 115, 116, 117, 121, 128], "point": [40, 67, 68, 104, 109], "independ": [40, 57, 58], "henc": [40, 121], "characteris": [40, 106, 118], "ore": [40, 106, 109, 127], "mass_recoveri": 40, "seri": [40, 63, 71, 76], "y": [41, 87, 103, 105, 108, 109, 110, 111, 112, 115, 121, 127], "": [42, 87, 97, 98, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121], "s0": 42, "s1": 42, "s2": 42, "s3": 42, "For": [42, 103, 129, 132], "py39": 42, "after": [42, 87, 93, 98, 127], "itertool": 42, "manag": [43, 94, 98, 100, 114, 128, 129, 136], "candid": [45, 46, 47, 104], "strict": [45, 46, 47], "formula": 48, "p1": 50, "p2": 50, "filepath": [52, 53, 54, 55], "read": [53, 129], "hash": [53, 93], "d": [57, 82, 83, 84, 85, 133], "coord": [57, 58], "include_original_coord": 57, "loss": [57, 58], "pchip": [57, 58], "cannot": [57, 58, 110, 112, 128], "via": [57, 58, 87], "directli": [57, 58, 98, 115, 128], "due": [57, 58, 112], "data_var": [57, 58], "time": [57, 58, 65, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125], "convert": [57, 58, 74, 75, 94, 115, 121, 123], "cumsum": [57, 58], "monoton": [57, 58], "increas": [57, 58, 118], "spline": [57, 58, 105], "preserv": [57, 58, 96, 104, 113, 115, 125], "diff": [57, 58], "recov": [57, 58, 104], "reconstruct": [57, 58], "context": [57, 58, 104, 114, 129, 137], "coordin": [57, 92, 95, 96, 101, 104, 105, 106, 108, 109, 112, 118, 123, 125, 129], "df_interv": 58, "consid": [58, 70, 71, 74, 75, 76, 101, 104, 105, 110], "solve_mass_moistur": [58, 71, 74, 75, 76], "call": [58, 71, 74, 75, 76, 87, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 112, 115, 118, 120], "need": [58, 71, 74, 75, 76, 97, 98, 115, 129, 132, 133, 137], "solv": 63, "trifecta": 63, "dataarrai": [63, 105, 109, 118, 121], "wa": [63, 104, 121], "arg": [65, 117], "depth": 65, "print": [65, 92, 95, 96, 98, 101, 103, 105, 106, 108, 110, 112, 116, 118, 120, 123, 125], "namespac": 65, "default": [65, 87, 103, 104], "joblib": [65, 116], "print_progress": 65, "displai": [65, 98, 103, 108], "control": 65, "verbos": [65, 87], "d50": [67, 68, 83, 84, 101, 105, 106, 107, 110, 112, 114], "ep": [67, 105, 106, 107, 110, 112, 114], "napier": [67, 106], "munn": [67, 106], "1998": [67, 106], "www": 67, "sciencedirect": 67, "scienc": 67, "articl": 67, "pii": 67, "s1474667016453036": 67, "e": [67, 68, 85, 92, 108, 110, 111, 113, 114, 115, 118, 123, 129, 131], "densiti": [67, 68, 70, 111], "escart": 67, "probabl": [67, 105], "df_feed": 70, "df_ref": [70, 71, 105], "col_mass_dri": [70, 105], "one": [70, 87, 94, 99, 101, 104, 105, 109, 112, 114], "dimension": [70, 90, 105], "pn": [70, 105], "bound": [70, 103, 108, 109], "mean": [70, 80, 99, 108, 116, 133], "geometr": [70, 80], "otherwis": [70, 130], "arithmet": [70, 80], "da": [70, 105], "interpret": [70, 106], "diamet": [70, 84, 85], "todo": [70, 108], "generalis": 70, "fa": 70, "than": [71, 74, 75, 76, 96, 104, 109, 121], "valid": [71, 74, 75, 76, 87, 105, 121, 123], "w": [71, 74, 75, 76], "unit": [71, 74, 75, 76, 94, 101, 104, 105, 118], "_dry": 74, "drop": [74, 110, 111, 112, 115, 118, 121], "size_interv": 80, "pan": 80, "0mm": 80, "ratio": [80, 104], "intervalarrai": 80, "53": [82, 83, 84, 85, 106, 115, 116], "8": [82, 83, 84, 85, 93, 94, 96, 97, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 125], "38": [82, 83, 84, 85], "26": [82, 83, 84, 85, 93, 97, 101, 105, 108, 109, 110, 112, 118, 120, 121], "7": [82, 83, 84, 85, 92, 94, 95, 96, 99, 101, 103, 104, 106, 108, 110, 111, 112, 114, 115, 118, 120, 123, 125], "18": [82, 83, 84, 85, 92, 94, 95, 96, 99, 101, 103, 104, 108, 111, 115, 123], "13": [82, 83, 84, 85, 92, 98, 99, 101, 108, 109, 111, 115, 116, 123], "350": 82, "m": [82, 83, 84, 103, 108, 109, 110, 111, 112, 121, 129, 133], "71": [82, 103, 111, 115], "gaudin": 82, "schuhmann": 82, "equat": [82, 83, 84, 85], "distribut": [82, 83, 84, 85, 110, 121, 127, 130], "mp": [82, 83, 84, 85], "modulu": 82, "wp": [82, 85], "slope": [82, 85], "v": [82, 85, 111, 112], "syscad": [82, 83, 84, 85], "net": [82, 83, 84, 85], "size_distribution_definit": [82, 83, 84, 85], "rosin": [82, 83, 84, 85], "rammler": [82, 83, 84, 85], "42": [83, 84, 85, 109, 111, 115], "50": [83, 84, 101, 105, 106, 107, 111, 115, 118, 121], "sharp": [83, 84, 121], "modifi": [84, 94, 96, 101, 112, 125, 130], "exp": [84, 85], "693147": 84, "b": [85, 129], "36": [85, 108, 111, 118, 120, 123], "ln": 85, "step": [87, 104, 115, 129], "memori": 87, "fit_param": 87, "sequenti": 87, "final": [87, 96, 113, 114, 125], "train": [87, 115], "fulfil": 87, "requir": [87, 98, 99, 100, 107, 115, 129, 132], "pipelin": [87, 88, 115], "label": 87, "enable_metadata_rout": 87, "p": [87, 108, 111, 115, 118, 120], "s__p": 87, "request": [87, 129], "accept": 87, "certain": [87, 114, 133], "metadata": 87, "forward": 87, "them": [87, 129], "chang": [87, 93, 105, 109, 110, 115, 118, 121, 129], "version": [87, 110, 129], "now": [87, 98, 99, 100, 103, 105, 108, 110, 115, 121], "intermedi": 87, "well": 87, "set_config": 87, "rout": 87, "user": 87, "guid": 87, "more": [87, 94, 98, 100, 101, 104, 105, 106, 109, 113, 114, 118, 121, 127, 129, 131, 133, 137], "detail": [87, 98, 110], "get_feature_names_out": 87, "input_featur": 87, "feature_names_out": 87, "end": 87, "20": [87, 94, 115, 123], "while": [87, 101, 109, 116, 132, 133], "mai": [87, 98, 104, 115, 116, 133], "uncertainti": 87, "some": [87, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 115, 118, 119, 120, 121, 123, 124, 125, 127, 129, 132], "return_std": 87, "return_cov": 87, "propag": 87, "y_pred": [87, 115], "score": [87, 115], "sample_weight": 87, "keyword": 87, "work": [87, 98, 105, 106, 108, 109, 110, 112, 115, 118, 121, 129, 132], "xt": 87, "shape": [87, 115, 118, 120], "n_sampl": 87, "n_transformed_featur": 87, "multi": [90, 108], "click": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 127], "here": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 129, 133, 134, 135, 136], "download": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127], "code": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133], "how": [92, 98, 103, 107, 115, 116, 123, 133, 134, 137], "design": [92, 115], "onc": [92, 104, 115, 132], "chemic": [92, 112, 121, 128, 129, 132], "conform": 92, "intern": [92, 104, 107], "standard": 92, "import": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 132, 133], "elphick": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 130, 132], "mass_composit": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 132], "sample_data": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 125, 127, 129], "we": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 120, 121, 123, 125, 127, 129, 132], "demo": [92, 94, 96, 99, 101, 102, 103, 104, 105, 106, 108, 110, 112, 118, 119, 120, 121, 122, 123, 125, 127], "form": [92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 112, 118, 120, 121, 123, 125], "df_data": [92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 116, 118, 120, 121, 123, 125, 129, 132], "wet_mass": [92, 94, 95, 96, 99, 101, 103, 104, 123, 125], "sio2": [92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 118, 120, 121, 123, 125], "loi": [92, 94, 95, 96, 98, 99, 101, 103, 104, 115, 123, 125], "90": [92, 94, 95, 96, 99, 101, 103, 104, 108, 118, 120, 123, 125], "57": [92, 94, 95, 96, 99, 101, 103, 104, 108, 109, 111, 118, 123, 125], "grp_1": [92, 94, 95, 96, 99, 101, 103, 104, 123, 125], "80": [92, 94, 95, 96, 99, 101, 103, 104, 115, 123, 125], "59": [92, 94, 95, 96, 98, 99, 101, 103, 104, 108, 109, 118, 120, 123, 125], "110": [92, 94, 95, 96, 99, 101, 103, 104, 123, 125], "61": [92, 94, 95, 96, 99, 101, 103, 104, 108, 115, 118, 120, 123, 125], "9": [92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 118, 120, 121, 123, 125, 133], "grp_2": [92, 94, 95, 96, 99, 101, 103, 104, 123, 125], "obj_mc": [92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 108, 116, 118, 120, 129, 132, 133], "unnam": [92, 95, 96, 125], "216b": [92, 95, 96, 101, 123], "int64": [92, 95, 96, 101, 104, 108, 123, 125], "24b": [92, 95, 96, 101, 104, 123, 125], "float64": [92, 95, 96, 101, 104, 105, 106, 108, 109, 112, 118, 123, 125], "11": [92, 94, 95, 96, 99, 101, 103, 104, 111, 112, 114, 123, 125], "mc_vars_mass": [92, 95, 96, 101, 105, 106, 108, 109, 112, 118, 123, 125], "mc_vars_chem": [92, 95, 96, 101, 105, 106, 108, 109, 112, 118, 123, 125], "mc_vars_attr": [92, 95, 96, 101, 105, 106, 108, 109, 112, 118, 123, 125], "mc_interval_edg": [92, 95, 96, 101, 105, 106, 108, 109, 112, 118, 123, 125], "head": [92, 95, 96, 101, 108, 118, 120, 121, 123, 125], "300": [92, 98, 99, 101, 109, 123], "260": [92, 94, 98, 99, 101, 122, 123], "333333": [92, 98, 99, 101, 123], "515385": [92, 98, 99, 101, 123], "873077": [92, 98, 99, 101, 123], "lt": [92, 104, 118], "gt": [92, 104, 118], "56b": [92, 123], "without": [92, 118, 123, 128, 130], "8b": [92, 118, 123], "33": [92, 93, 97, 101, 105, 106, 109, 110, 112, 114, 115, 116, 121, 123], "515": [92, 123], "873": [92, 118, 123], "x27": [92, 104, 115, 118], "datasetdimens": [92, 104, 118], "1coordin": 92, "float64300": 92, "0unit": [92, 118], "mass_unitsstandard_nam": [92, 118], "massmc_typ": [92, 118], "massmc_col_orig": [92, 118], "wet_massarrai": 92, "float64260": 92, "mass_dryarrai": [92, 118], "float6413": 92, "33unit": 92, "standard_nam": [92, 118], "h2omc_typ": [92, 118], "moisturemc_col_orig": [92, 118], "h2oarrai": [92, 118], "33333333": 92, "float6459": 92, "femc_typ": [92, 118], "chemistrymc_col_orig": [92, 118], "fearrai": [92, 118], "float643": 92, "515unit": 92, "sio2mc_typ": [92, 118], "sio2arrai": [92, 118], "51538462": 92, "float641": [92, 118], "873unit": [92, 118], "al2o3mc_typ": [92, 118], "al2o3arrai": [92, 118], "87307692": 92, "float644": 92, "loimc_typ": 92, "loiarrai": 92, "unnamedmc_vars_mass": 92, "190": [92, 118, 123], "170": [92, 99, 111, 115, 123], "526316": [92, 123], "941176": [92, 123], "211765": [92, 123], "388235": [92, 123], "529412": [92, 123], "181818": [92, 94, 99, 103, 104, 123], "000000": [92, 94, 97, 99, 103, 104, 108, 109, 112, 120, 123], "200000": [92, 123], "900000": [92, 97, 123], "criteria": [92, 99, 114], "just": [92, 129], "58": [92, 99, 100, 108, 115, 118], "200": [92, 99, 104, 106, 109, 111], "15": [92, 93, 97, 99, 101, 104, 105, 106, 108, 109, 110, 112, 115, 120, 121], "60": [92, 99, 101, 103, 106, 108, 109, 112, 115, 118, 120, 121, 123], "058824": [92, 99], "623529": [92, 99], "276471": [92, 99], "470588": [92, 99], "script": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125], "minut": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125], "151": [92, 122], "001_basic_usag": [92, 122], "py": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126], "jupyt": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133], "notebook": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133], "ipynb": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125], "galleri": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 129, 132, 137], "sphinx": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133], "public": [93, 127], "domain": [93, 127, 137], "larg": [93, 127], "unalt": [93, 127], "often": [93, 98, 99, 101, 104, 108, 111, 115, 118, 121, 127], "why": [93, 106, 127, 137], "open": [93, 127], "real": [93, 106, 111, 120, 121, 127], "our": [93, 94, 105, 110, 127], "realist": [93, 127], "oblig": [93, 127], "appropri": [93, 127], "thei": [93, 98, 103, 108, 112, 113, 114, 118, 121, 127], "potenti": [93, 127], "minor": [93, 127], "adjust": [93, 127], "prepar": [93, 97, 112, 127], "readi": [93, 127], "inject": [93, 106, 127], "packag": [93, 98, 108, 127, 129, 131, 136, 137], "keep": [93, 123, 127, 133], "approach": [93, 114, 127], "regist": 93, "found": [93, 127], "check": [93, 96, 105, 110, 112, 123, 125, 133], "therebi": 93, "avoid": [93, 98], "repeat": [93, 109], "unless": 93, "updat": 93, "df_ds1": 93, "load_size_by_assai": 93, "size_retain": [93, 101, 108, 109, 110, 111, 112, 121], "size_pass": [93, 101, 109, 111, 112, 121], "mass_pct": [93, 111], "850": [93, 101, 109, 111, 112, 121], "000": [93, 101, 109, 111, 112, 121, 133], "64": [93, 97, 101, 105, 106, 108, 109, 110, 111, 112, 115, 118, 120, 121], "04": [93, 97, 101, 105, 106, 108, 109, 110, 112, 120, 121, 122], "68": [93, 97, 99, 101, 105, 106, 109, 110, 111, 112, 118, 121, 123], "500": [93, 101, 105, 109, 112, 121], "05": [93, 97, 101, 103, 105, 106, 108, 109, 110, 112, 120, 121], "23": [93, 97, 101, 105, 106, 108, 109, 110, 112, 115, 116, 118, 120, 121], "150": [93, 101, 105, 106, 107, 109, 110, 112, 115, 121], "52": [93, 97, 98, 101, 105, 106, 109, 110, 112, 114, 115, 118, 121], "84": [93, 97, 101, 105, 106, 109, 110, 112, 121], "19": [93, 97, 101, 105, 106, 109, 110, 111, 112, 115, 118, 121], "075": [93, 97, 101, 105, 109, 110, 112, 121], "62": [93, 97, 101, 105, 106, 109, 110, 112, 115, 118, 121], "65": [93, 97, 101, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121], "88": [93, 96, 97, 101, 105, 106, 109, 110, 112, 115, 121], "32": [93, 97, 101, 105, 106, 109, 110, 112, 115, 121], "045": [93, 97, 101, 105, 106, 109, 110, 112, 114, 121], "81": [93, 96, 97, 101, 105, 106, 109, 110, 112, 118, 121, 123, 125], "12": [93, 94, 97, 101, 105, 106, 108, 109, 110, 111, 112, 114, 115, 118, 120, 121], "25": [93, 97, 101, 105, 106, 108, 109, 110, 112, 115, 121, 123], "49": [93, 97, 101, 105, 109, 110, 112, 121], "55": [93, 97, 101, 105, 106, 108, 109, 110, 112, 121], "95": [93, 97, 101, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121], "6": [93, 97, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121], "39": [93, 97, 101, 105, 106, 108, 109, 110, 112, 118, 120, 121, 122], "34": [93, 97, 101, 105, 106, 108, 109, 110, 112, 115, 121], "you": [93, 98, 115, 129, 131, 132, 133], "view": [93, 103, 107, 108, 118, 121, 129], "profil": 93, "utilis": 93, "abov": [93, 98, 99, 106, 121, 130, 132], "made": [93, 104, 110], "df_sd1": 93, "310": [93, 108, 111, 118, 120, 122], "002_data_exampl": [93, 122], "demonstr": [94, 95, 96, 98, 99, 101, 102, 106, 107, 109, 112, 115, 116, 120, 125], "machin": [94, 129], "learn": [94, 98], "ml": 94, "over": 94, "wai": [94, 115], "outlier": 94, "111111": [94, 99, 103, 104], "simpi": 94, "simplest": 94, "obj_1": [94, 99], "85": [94, 97, 101, 105, 106, 108, 109, 110, 112, 115, 118, 120, 121], "555556": 94, "notic": [94, 99, 110, 130], "accordingli": [94, 110], "granular": 94, "tuple_of_limit": 94, "obj_2": 94, "sometim": [94, 98], "describ": [94, 104], "miner": [94, 101, 104, 112, 121, 128], "known": [94, 108], "ll": [94, 98, 99, 100, 104, 105, 106, 110, 111, 115, 121, 123, 129, 131, 133], "make": [94, 99, 108, 129, 133], "act": 94, "obj_oth": 94, "obj_3": 94, "16": [94, 103, 104, 108, 111, 115], "22": [94, 108, 111, 112, 114, 115, 118, 120, 123], "obj_4": 94, "combin": 94, "multipl": [94, 129, 133, 135], "obj_5": 94, "003_constrain": [94, 122], "graph_obj": [95, 100, 120, 133], "standardis": [95, 96, 101, 125], "chemistri": [95, 96, 101, 125], "fig": [95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 120, 121, 129, 133], "fig2": 95, "fig3": 95, "fig4": 95, "noinspect": [95, 97, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 118, 120, 121, 123, 125], "pytypecheck": [95, 97, 100, 101, 102, 104, 105, 106, 107, 109, 110, 112, 118, 120, 121], "io": [95, 97, 100, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 120, 121], "thumbnail": [95, 97, 100, 101, 102, 106, 107, 110, 112, 118, 120], "445": [95, 122], "004_plot_demo": [95, 122], "obj_mc_split": [96, 101], "obj_mc_comp": [96, 101], "99": [96, 108, 118, 120, 125], "72": [96, 108, 112, 125], "part": [96, 100, 101, 125, 137], "obj_mc_sum": [96, 101], "confirm": [96, 101, 103, 108, 125], "materi": [96, 101, 125], "start": [96, 98, 101, 104, 125], "assert_frame_equ": [96, 101, 105, 121, 123, 125], "obj_mc_minu": 96, "obj_mc_div": 96, "renam": [96, 98, 113, 115], "altern": [96, 105, 129], "syntax": 96, "rather": [96, 109, 115], "operand": 96, "obj_mc_sum_renam": 96, "121": 96, "obj_mc_sub_renam": 96, "done": [96, 98, 123], "451": [96, 122], "104_math_oper": [96, 122], "size_by_assay_2": 97, "tall": 97, "300000": 97, "500000": 97, "800000": 97, "coars": [97, 101, 106, 109, 110, 112], "299990": 97, "860347": 97, "21": [97, 112, 115], "092951": 97, "953958": 97, "349356": 97, "543785": 97, "fine": [97, 101, 110, 112, 113, 115, 117], "000010": [97, 112], "039653": 97, "407049": 97, "546042": 97, "450644": 97, "456215": 97, "00": [97, 98, 103, 104, 108, 112, 114, 115, 116, 118, 120, 122, 126], "492": 97, "17it": 97, "24": [97, 111, 112], "06it": 97, "4it": [97, 112], "02it": 97, "knowledg": 97, "those": [97, 121], "set_stream_par": [97, 98], "parent": [97, 98, 115], "705": [97, 122], "105_create_network": [97, 122], "relat": [98, 100, 102, 103, 119, 124, 129], "engin": [98, 112], "metallurgi": [98, 108, 110, 111, 112, 121, 127], "disciplin": [98, 108], "_flowsheet_": 98, "copi": [98, 113, 114, 130], "deepcopi": [98, 113, 114], "pyplot": [98, 100, 103, 108], "plt": [98, 100, 103, 108], "mc_node": 98, "obj_mc_1": [98, 100, 103], "obj_mc_2": [98, 100, 103], "placehold": 98, "random": [98, 112, 117], "captur": [98, 106], "implicitli": 98, "obj": 98, "_node": 98, "324494284532216511557115773226938749275": 98, "126424624233062861302886601543594094071": 98, "132186196820896510251720553826709908991": 98, "220692732893009472278859239807727056057": 98, "graph": [98, 103, 110, 113, 114, 129], "node_typ": 98, "sink": [98, 119, 122, 127], "renumb": 98, "readabl": 98, "overal": [98, 107, 112], "statu": [98, 119, 122], "assur": [98, 103], "satisfi": 98, "imbalanc": 98, "appear": 98, "red": [98, 103, 105], "later": [98, 106], "home": [98, 105, 109, 110, 112, 118, 121], "runner": [98, 105, 109, 110, 112, 118, 121], "venv": 98, "lib": 98, "python3": 98, "site": 98, "df_report": 98, "120": [98, 99], "104": [98, 99, 125, 126], "180": [98, 99, 104, 111], "156": [98, 99], "87": [98, 108, 115, 118, 120], "obj_mc_3": 98, "obj_mc_4": 98, "obj_mc_5": 98, "fs2": 98, "nodes_befor": 98, "o": [98, 110], "item": [98, 112, 116], "node_0": 98, "node_1": 98, "node_2": 98, "node_3": 98, "nodes_aft": 98, "easili": [98, 129], "access": [98, 105, 109, 115, 118, 121, 132], "dict_kei": 98, "replac": 98, "new_stream": 98, "duplic": 98, "Of": [98, 129], "cours": [98, 112, 129], "highlight": [98, 103], "what": [98, 104, 110, 133], "flow": [98, 114, 128], "wrong": [98, 133], "exist": [98, 103, 112, 132], "pick": 98, "let": [98, 110], "link": [98, 127], "_stream": 98, "1_": 98, "connect": [98, 104, 113, 114, 130], "could": [98, 105, 133, 137], "linkag": 98, "complet": [98, 112, 121], "rubbish": 98, "set_stream_child": 98, "child": 98, "perhap": [98, 110], "less": [98, 121], "build": [98, 137], "set_stream_nod": 98, "194": [98, 122], "106_network_bas": [98, 122], "specif": [99, 133, 137], "subset": [99, 127], "interest": [99, 105, 128], "both": [99, 101, 102, 106, 108, 117], "One": 99, "most": [99, 115], "common": [99, 103, 110, 112, 121], "consist": [99, 104, 105, 109, 110, 118, 121], "below": [99, 109, 133], "small": [99, 127], "obj_on": 99, "obj_two": 99, "did": 99, "though": [99, 104], "102": [99, 112], "232": [99, 122], "107_filter": [99, 122], "sphinx_gallery_thumbnail_numb": [100, 101, 102, 103, 105, 106, 107], "hf": 100, "select": [100, 114, 120, 121], "conveni": 100, "underli": [100, 132], "verifi": 100, "tabul": 100, "again": [100, 123], "725": [100, 122], "108_sankey_plot": [100, 122], "functool": [101, 105, 106, 107, 110, 111, 112, 114], "partial": [101, 105, 106, 107, 110, 111, 112, 114], "util": [101, 105, 106, 107, 110, 111, 112, 114, 115, 116], "30": [101, 108, 112, 118, 120], "270": 101, "234": 101, "screen": [101, 110, 114, 115], "characterist": 101, "tromp": 101, "definit": 101, "mc_size": [101, 106, 107, 109, 112, 121], "336b": [101, 105, 106, 109, 112], "48b": [101, 105, 106, 108, 109, 112, 118], "09245": [101, 106, 112, 121], "14753": [101, 106, 112, 121], "27716": [101, 106, 112, 121], "visualis": [101, 103, 106, 107, 129, 131, 132], "initialis": [101, 105, 106, 110, 112], "ad": [101, 105, 106, 110, 112, 113, 114], "inform": [101, 105, 106, 109, 112, 121], "mc_coars": [101, 112], "mc_fine": [101, 110, 112], "70": [101, 105, 106, 107, 108, 114, 115, 118, 120], "849": [101, 122], "109_split_and_partit": [101, 122], "mc_feed": [102, 105, 110], "mc_1": 102, "mc_2": 102, "mc_3": 102, "mc_4": 102, "mc_5": 102, "mc_6": 102, "support": [102, 128, 129, 136], "183": [102, 122], "110_network_layout": [102, 122], "upper": [103, 108], "driven": 103, "mineralog": 103, "hematit": 103, "fe2o3": 103, "69": [103, 108, 118, 120], "97": 103, "warn": [103, 110], "ok": 103, "basicconfig": [103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "level": [103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 124, 136], "asctim": [103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "levelnam": [103, 108, 109, 110, 111, 112, 113, 114, 115, 121], "datefmt": [103, 108, 109, 110, 111, 112, 121], "dt": [103, 108, 109, 110, 111, 112, 121], "h": [103, 108, 109, 110, 111, 112, 121], "z": [103, 108, 109, 110, 111, 112, 121, 127], "inspect": [103, 121], "inf": 103, "num_oor": 103, "sinc": [103, 104, 105, 106, 108, 110, 111, 115, 121, 128, 129], "low": [103, 119, 124], "enough": [103, 110], "obj_mc_oor": 103, "2024": [103, 118], "28t13": 103, "06": [103, 108, 116, 118, 120], "29": [103, 115], "0000": 103, "mc_statu": 103, "fail": [103, 108], "nan": [103, 108, 109, 111, 112, 133], "colour": 103, "obj_mc_fe": 103, "stream_1": 103, "stream_2": 103, "imbal": 103, "update_data": 103, "54": [103, 108, 111, 115, 118, 123], "67": [103, 111, 114, 115, 116, 118, 123], "48": [103, 108, 115, 118, 120, 123], "66": [103, 115, 116, 118], "offend": 103, "failing_compon": 103, "caus": [103, 117, 121], "exceed": 103, "would": [103, 105, 106, 137], "node_bal": 103, "881784e": 103, "000000e": [103, 104], "440892e": [103, 104], "220446e": [103, 104], "577": [103, 122], "111_constraints_and_statu": [103, 122], "math": [104, 112, 119, 122, 123, 124, 126, 132], "metal": 104, "fed": 104, "metric": 104, "circuit": 104, "insid": 104, "larger": 104, "facil": 104, "simpli": [104, 133], "doubl": 104, "obj_mc_ref": 104, "160": 104, "220": 104, "rec_1": 104, "product_mass_wet_rec_fe": 104, "product_mass_dry_rec_fe": 104, "product_h2o_rec_fe": 104, "product_fe_rec_fe": 104, "product_sio2_rec_fe": 104, "product_al2o3_rec_fe": 104, "product_loi_rec_fe": 104, "By": 104, "explicit": 104, "clariti": 104, "basic": [104, 119, 122, 124, 126, 129], "rec_2": 104, "explicit_nam": 104, "desir": 104, "rec_3": 104, "192b": [104, 125], "5xarrai": 104, "3coordin": 104, "int640": 104, "2arrai": 104, "float640": 104, "5arrai": 104, "indexpandasindexpandasindex": 104, "rangeindex": 104, "stop": 104, "No": 104, "convers": 104, "rec_4": 104, "product_mass_wet_diff_fe": 104, "product_mass_dry_diff_fe": 104, "product_h2o_diff_fe": 104, "product_fe_diff_fe": 104, "product_sio2_diff_fe": 104, "product_al2o3_diff_fe": 104, "product_loi_diff_fe": 104, "105427e": 104, "110223e": 104, "upgrad": [104, 109], "rec_5": 104, "product_mass_wet_ur_fe": 104, "product_mass_dry_ur_fe": 104, "product_h2o_ur_fe": 104, "product_fe_ur_fe": 104, "product_sio2_ur_fe": 104, "product_al2o3_ur_fe": 104, "product_loi_ur_fe": 104, "rec_6": 104, "Or": [104, 129, 131], "rec_7": 104, "01": [104, 105, 108, 114, 115, 118, 120, 122], "02": [104, 108, 112, 115, 120, 122], "100000e": 104, "against": [104, 115, 121], "update_layout": [104, 105, 109], "600": 104, "With": 104, "grp2": 104, "pyargumentlist": 104, "571": [104, 122], "112_compar": [104, 122], "deslim": [105, 109], "cyclon": 105, "aim": 105, "slurri": 105, "micron": 105, "underflow": 105, "uf": 105, "numpi": [105, 111, 112, 121], "np": [105, 111, 112, 121], "graph_object": 105, "go": [105, 123, 132, 133], "scipi": 105, "pchipinterpol": 105, "napier_munn": [105, 106, 107, 110, 111, 112, 114], "pd_util": 105, "part_cyclon": 105, "overflow": [105, 114], "mc_uf": 105, "mc_of": 105, "df_partit": 105, "1386": [105, 109], "futurewarn": [105, 109, 110, 118, 121], "futur": [105, 109, 110, 115, 118, 121], "order": [105, 108, 109, 118, 121], "length": [105, 109, 118, 121], "pleas": [105, 109, 115, 118, 121], "303840": 105, "999997": 105, "651920": 105, "995995": 105, "273861": 105, "795960": 105, "106066": 105, "381583": 105, "058095": 105, "266972": 105, "020855": 105, "194771": 105, "As": [105, 109], "linspac": 105, "max": [105, 121], "num": 105, "spline_partit": 105, "sort_index": 105, "pn_extract": 105, "pn_origin": 105, "scatter": 105, "line": 105, "darkslategrei": 105, "add_trac": 105, "mode": 105, "marker": 105, "dash": 105, "update_xax": 105, "trip": [105, 121, 123], "xaxis_titl": 105, "yaxis_titl": 105, "yaxis_rang": 105, "There": [105, 107, 112, 129], "re": [105, 106, 118, 133], "coarser": [105, 109], "investig": 105, "advanc": [105, 119, 122], "parameter": 105, "df_partition_2": 105, "pipe": [105, 115], "496": [105, 122], "113_partition_model": [105, 122], "infer": 106, "plant": [106, 112], "danger": 106, "robust": 106, "sim": [106, 107], "simul": [106, 110, 114, 115, 119, 122], "realiti": [106, 114], "specul": 106, "illustr": [106, 114, 132], "purpos": [106, 114, 130], "intend": 106, "half": 106, "easier": 106, "17": [106, 108, 115, 118], "98": [106, 123], "mc_ideal_fe": [106, 107], "mc_sim_fe": [106, 107], "part_id": [106, 107], "part_sim": [106, 107], "mc_ideal_coars": [106, 107], "mc_ideal_fin": [106, 107], "ideal_coars": [106, 107], "ideal_fin": [106, 107], "mc_sim_coars": [106, 107], "mc_sim_fin": [106, 107], "sim_coars": [106, 107], "sim_fin": [106, 107], "shown": [106, 109, 121], "review": 106, "prudent": 106, "world": 106, "ineffici": 106, "973": [106, 122], "114_compare_partit": [106, 122], "complex": [107, 113, 114], "achiev": [107, 121, 133], "collaps": 107, "system": [107, 112], "high": 107, "fs_simpl": 107, "374": [107, 122], "115_simplify_network": [107, 122], "interval_from": [108, 118, 120, 129], "interval_to": [108, 118, 120, 129], "lower": [108, 121], "relev": 108, "geologi": [108, 127], "analys": 108, "encount": [108, 110, 111, 112], "typic": [108, 110, 111, 121, 128, 132], "nomenclatur": [108, 110, 111, 121], "siev": [108, 110, 111, 121], "stack": [108, 110, 111], "iron_ore_sample_data": [108, 118, 120], "funcnam": [108, 109, 110, 111, 112, 121], "mgo": [108, 118, 120], "mno": [108, 118, 120], "tio2": [108, 111, 118, 120], "cao": [108, 118, 120], "na2o": [108, 118, 120], "k2o": [108, 118, 120], "dhid": [108, 118, 120, 129], "35": [108, 118, 120], "07": [108, 110, 116, 120], "019": [108, 120], "080": [108, 118, 120], "03": [108, 116, 118, 120, 121], "cbs02": [108, 118, 120], "28": [108, 111, 118, 120], "017": [108, 120], "91": [108, 115, 118, 120], "082": [108, 120], "27": [108, 111, 118, 120, 123], "016": [108, 120], "09": [108, 112, 118, 120], "059": [108, 120], "96": [108, 109, 118, 120], "022": [108, 120], "057": [108, 120], "40": [108, 118, 120], "75": [108, 115, 118, 120, 123], "040": [108, 111, 120], "program": [108, 115], "kg": 108, "0x7f3958f41420": 108, "2029": [108, 118], "617808": [108, 118], "1981": [108, 118], "688": [108, 118], "361519": [108, 118], "080513": 108, "149219": 108, "773585": [108, 118], "044628": 108, "443938": [108, 118], "82721": [108, 118], "062978": 108, "125071": 108, "015877": 108, "013164": 108, "46": [108, 110, 115, 120], "614043": [108, 120], "652257": [108, 120], "055636": [108, 120], "029685": [108, 120], "022764": [108, 120], "656675": [108, 120], "589849": [108, 120], "053834": [108, 120], "029160": [108, 120], "010436": [108, 120], "017296": [108, 120], "cbs03": [108, 120], "229": [108, 120], "414089": [108, 120], "226": [108, 120], "250": [108, 120], "379204": [108, 120], "132968": [108, 120], "038134": [108, 120], "399500": [108, 120], "046587": [108, 120], "297271": [108, 120], "653106": [108, 120], "052016": [108, 120], "699112": [108, 120], "030318": [108, 120], "019871": [108, 120], "cbs04": [108, 120], "347": [108, 120], "440438": [108, 120], "344": [108, 120], "680": [108, 120], "794507": [108, 120], "088788": [108, 120], "126484": [108, 120], "513147": [108, 120], "038461": [108, 120], "289083": [108, 120], "319658": [108, 120], "050986": [108, 120], "093096": [108, 120], "001773": [108, 120], "011788": [108, 120], "cbs10": [108, 120], "306": [108, 120], "500146": [108, 120], "304": [108, 118, 120], "690": [108, 120], "590586": [108, 120], "044836": [108, 120], "091520": [108, 120], "963728": [108, 120], "059062": [108, 120], "001839": [108, 120], "949455": [108, 120], "061461": [108, 120], "060045": [108, 120], "014310": [108, 120], "012509": [108, 120], "cbs12": [108, 120], "506": [108, 120], "098042": [108, 120], "493": [108, 120], "968": [108, 120], "396777": [108, 120], "090723": [108, 120], "247394": [108, 120], "854824": [108, 120], "032990": [108, 120], "572344": [108, 120], "491186": [108, 120], "067683": [108, 120], "045545": [108, 120], "016941": [108, 120], "014323": [108, 120], "cbs13": [108, 120], "593": [108, 120], "551050": [108, 120], "565": [108, 120], "790": [108, 120], "677112": [108, 120], "066832": [108, 120], "165065": [108, 120], "969400": [108, 120], "051777": [108, 120], "839565": [108, 120], "443914": [108, 120], "072125": [108, 120], "027301": [108, 120], "019054": [108, 120], "010321": [108, 120], "2d": [108, 111], "Then": 108, "astyp": [108, 115], "categori": [108, 115], "identifi": 108, "dh_id": 108, "dh": 108, "reset_index": [108, 120, 121, 129], "set_index": [108, 120, 129], "obj_mc_2d": 108, "_data": [108, 125], "hole_id": 108, "dtype": [108, 118], "90kb": 108, "123": 108, "984b": 108, "6kb": 108, "76": [108, 111], "56": [108, 109, 114, 115], "08": [108, 112, 122], "41": [108, 115], "058": 108, "052": 108, "460": [108, 111], "461": 108, "462": 108, "c": [108, 130], "still": [108, 121, 129], "take": 108, "advantag": 108, "natur": 108, "961": [108, 122], "200_interval_data": [108, 122], "assess": 109, "concept": 109, "leverag": 109, "de": 109, "slime": 109, "smallest": 109, "size_cut": 109, "150000": 109, "040000": 109, "680000": 109, "285000": 109, "047500": 109, "342500": 109, "700": 109, "441864": 109, "908992": 109, "240705": 109, "335711": 109, "966517": 109, "304645": 109, "51": [109, 111, 115, 118, 123], "072451": 109, "993000": 109, "295216": 109, "092450": 109, "147530": 109, "277160": 109, "033": [109, 111], "035228": 109, "016231": 109, "020677": 109, "132": 109, "141209": 109, "065164": 109, "072293": 109, "397": 109, "425734": 109, "182728": 109, "207979": 109, "422": 109, "451798": 109, "200088": 109, "227385": 109, "510": 109, "543778": 109, "245069": 109, "273677": 109, "results_2": 109, "953981": 109, "219452": 109, "331665": 109, "86": 109, "800": 109, "454873": 109, "466889": 109, "571371": 109, "228905": 109, "621327": 109, "617910": 109, "994429": 109, "739896": 109, "717301": 109, "950000": 109, "390000": 109, "340000": 109, "967": 109, "964772": 109, "983769": 109, "979323": 109, "868": 109, "858791": 109, "934836": 109, "927707": 109, "603": 109, "574266": 109, "817272": 109, "792021": 109, "578": 109, "548202": 109, "799912": 109, "772615": 109, "490": 109, "456222": 109, "754931": 109, "726323": 109, "coarsest": 109, "respons": 109, "ai": 109, "fact": 109, "legitim": 109, "neg": 109, "closer": 109, "legend": 109, "bracket": 109, "suggest": 109, "margin": 109, "spectrum": 109, "downgrad": 109, "plausibl": 109, "pathwai": 109, "benefici": 109, "scalp": 109, "361": [109, 122], "201_incremental_separ": [109, 122], "aka": [110, 111], "walk": 110, "through": 110, "overs": [110, 114], "unders": [110, 114], "fewer": 110, "magnitud": 110, "pathlib": [110, 111], "manual": 110, "mc_overs": 110, "mc_unders": 110, "u": 110, "situat": 110, "df_fine": 110, "loc": [110, 112, 115], "set_data": 110, "633999": 110, "810638": 110, "769423": 110, "291601": 110, "intervalindex": [110, 118], "That": [110, 137], "said": 110, "align": 110, "come": [110, 137], "soon": 110, "1014": 110, "previou": 110, "deprec": 110, "future_stack": 110, "adopt": [110, 137], "silenc": 110, "breach": 110, "threshold": 110, "dig": 110, "deeper": 110, "toler": 110, "_toler": 110, "1920929e": 110, "reveal": 110, "problem": [110, 112, 133], "resort": 110, "_balance_error": 110, "00016": 110, "000103": 110, "000003": 110, "000004": 110, "001": [110, 117, 122], "entir": [110, 118], "112": [110, 122], "202_interval_data_advanc": [110, 122], "metallurg": [111, 112, 115], "conduct": 111, "pyunresolvedrefer": [111, 123, 125], "load_nordic_iron_ore_sink_float": 111, "density_lo": 111, "density_hi": 111, "042": 111, "0049": 111, "47": [111, 115, 123], "107": 111, "178": 111, "0062": 111, "063": 111, "440": [111, 118], "0056": 111, "610": 111, "235": 111, "0057": 111, "650": 111, "0072": 111, "084": 111, "0030": 111, "980": 111, "380": 111, "0100": 111, "78": [111, 114, 115, 118], "285": 111, "0120": 111, "79": [111, 115], "015": 111, "060": 111, "0070": 111, "320": 111, "280": 111, "0080": 111, "174": 111, "530": 111, "0020": 111, "145": 111, "0130": 111, "780": [111, 118], "1100": 111, "069": 111, "480": [111, 118], "plu": [111, 115], "leav": 111, "df_sink_float": 111, "346": [111, 122], "300_interval_data_sink_float": [111, 122], "far": 112, "inher": 112, "audit": 112, "collect": [112, 129], "measur": 112, "never": 112, "fundament": 112, "optimis": 112, "mcbalanc": 112, "corrupt": 112, "df_coarse_2": 112, "lambda": 112, "normal": 112, "std": 112, "mc_coarse_2": 112, "set_parent_nod": 112, "fs_ub": 112, "yet": 112, "mcb": 112, "sd": 112, "configur": 112, "df_sd": 112, "create_balance_config": 112, "best_measur": 112, "cost": 112, "cf": 112, "_create_cost_funct": 112, "ravel": 112, "df_bal": 112, "fs_bal": 112, "runtimewarn": 112, "invalid": 112, "44": [112, 114, 118], "18414624507857": 112, "68716348473487": 112, "6822": 112, "474633349426": 112, "1299": 112, "7196730403964": 112, "624316443587384": 112, "12603423431622": 112, "202": 112, "powel": 112, "handl": 112, "optimizewarn": 112, "unknown": [112, 127], "solver": 112, "xatol": 112, "optim": 112, "termin": 112, "successfulli": 112, "current": [112, 115], "850809": 112, "evalu": 112, "1457": 112, "node_in": 112, "002935e": 112, "034756": 112, "314848e": 112, "095644e": 112, "096296e": 112, "196257": 112, "14": [112, 114], "036747": 112, "560657e": 112, "524572e": 112, "213041e": 112, "000011": 112, "603801e": 112, "310747e": 112, "922607": 112, "2729": 112, "000078": 112, "018427": 112, "000417": 112, "003000": 112, "003995": 112, "305829": 112, "769922": 112, "082481": 112, "984925": 112, "002750": 112, "683671": 112, "014384": 112, "448308": 112, "994857": 112, "10763": 112, "001444": 112, "191930": 112, "001535": 112, "985332": 112, "031624": 112, "757421": 112, "001292": 112, "010482": 112, "265487": 112, "073742": 112, "038438": 112, "357": 112, "364351": 112, "080776": 112, "259364": 112, "834363": 112, "1501": 112, "000113": 112, "178690": 112, "000048": 112, "060996": 112, "014591": 112, "036741": 112, "277": 112, "107219": 112, "004394": 112, "440876": 112, "004370": 112, "484283": 112, "001844": 112, "562201": 112, "410410": 112, "1497": 112, "000040": 112, "003939": 112, "017871": 112, "000738": 112, "044401": 112, "263268": 112, "000028": 112, "102159": 112, "004298": 112, "122773": 112, "001070": 112, "807691": 112, "042026": 112, "4708": 112, "003753": 112, "012161": 112, "013599": 112, "080565": 112, "081375": 112, "100791": 112, "081055": 112, "599332": 112, "897935": 112, "219394": 112, "237840": 112, "380482": 112, "684675": 112, "839377": 112, "552": 112, "20it": 112, "76it": 112, "28it": 112, "521": [112, 122], "400_mass_balanc": [112, 122], "enabl": [113, 114], "creation": 113, "acycl": [113, 114], "produc": [113, 114], "logger": [113, 114, 115], "getlogg": [113, 114, 115], "__name__": [113, 114, 115], "mc_sampl": [113, 114], "add_input": [113, 114, 115], "feed_1": 113, "feed_2": 113, "add_step": [113, 114, 115], "joiner": [113, 114], "lump": [113, 115, 117], "split_2": 113, "lumpier": 113, "less_lumpi": 113, "split_3": 113, "finer": 113, "less_fin": 113, "joiner_1": 113, "mix_1": 113, "joiner_2": 113, "mix_2": 113, "add_output": [113, 114, 115], "product_1": 113, "product_2": 113, "0x7f39501ba2f0": 113, "compat": [113, 114], "sample_2": 113, "progress_bar": [113, 114, 115], "usual": [113, 114, 115], "analysi": [113, 114, 129], "558": [113, 122], "502_dag": [113, 122], "segment": 114, "These": 114, "basi": [114, 128, 129], "part_screen": 114, "part_rgr_cyclon": 114, "part_clr_cyclon": 114, "038": 114, "part_scav_cyclon": 114, "rougher": [114, 127], "rgr_uf": 114, "rgr_of": 114, "cleaner": 114, "clr_uf": 114, "clr_of": 114, "scaveng": 114, "scav_uf": 114, "scav_of": 114, "tail": [114, 127], "0x7f3958962200": 114, "15node": 114, "28node": 114, "48node": 114, "06node": 114, "89": 114, "75node": 114, "343": [114, 122], "503_dag_with_partit": [114, 122], "focu": 115, "develop": 115, "randomforest": 115, "regressor": 115, "extra": [115, 131], "ensur": [115, 129], "instal": [115, 132], "poetri": [115, 129, 131], "guard": 115, "being": [115, 121], "ensembl": 115, "randomforestregressor": 115, "model_select": 115, "train_test_split": 115, "make_pipelin": 115, "preprocess": 115, "standardscal": 115, "iron_ore_met_sample_data": 115, "a072391": [115, 118, 120, 127], "concern": 115, "about": [115, 129], "categor": 115, "bulk_hole_no": 115, "base_compon": 115, "cols_x": 115, "dry_weight_lump_kg": 115, "head_": 115, "comp": 115, "cols_i": 115, "lump_pct": 115, "lump_": 115, "dropna": 115, "head_mass_dri": 115, "cat": 115, "head_f": 115, "head_p": 115, "head_sio2": 115, "head_al2o3": 115, "head_loi": 115, "lump_f": 115, "lump_p": 115, "lump_sio2": 115, "lump_al2o3": 115, "lump_loi": 115, "sample_numb": 115, "30129": 115, "31": 115, "94": [115, 118], "014": 115, "83": 115, "30131": 115, "009": 115, "30132": 115, "30133": 115, "011": 115, "74": 115, "30134": 115, "93": [115, 118], "col": 115, "x_train": 115, "x_test": 115, "y_train": 115, "y_test": 115, "test_siz": 115, "random_st": 115, "from_pipelin": 115, "n_estim": 115, "environ": [115, 132], "rerun": 115, "cell": 115, "represent": 115, "trust": 115, "On": 115, "github": [115, 129], "unabl": 115, "render": 115, "try": [115, 117, 133], "page": [115, 129], "nbviewer": 115, "org": 115, "nbsp": 115, "pandaspipelineinot": 115, "fittedpandaspipelin": 115, "document": [115, 130, 133], "standardscalerstandardscal": 115, "randomforestregressorrandomforestregressor": 115, "percentag": 115, "30838": 115, "1259": 115, "03646": 115, "5286": 115, "9012": 115, "3704": 115, "30836": 115, "511": 115, "8068": 115, "04462": 115, "6825": 115, "9777": 115, "5672": 115, "30143": 115, "425": 115, "9562": 115, "01953": 115, "0668": 115, "6913": 115, "1378": 115, "30158": 115, "1892": 115, "03722": 115, "7937": 115, "9085": 115, "5543": 115, "30915": 115, "386": 115, "5843": 115, "03022": 115, "4852": 115, "9723": 115, "6845": 115, "300330": 115, "227643": 115, "085785": 115, "101752": 115, "385039": 115, "119670": 115, "672634": 115, "053632": 115, "974256": 115, "166007": 115, "092784": 115, "072357": 115, "416554": 115, "051142": 115, "309856": 115, "501770": 115, "752437": 115, "334215": 115, "63": [115, 118], "892801": 115, "032687": 115, "975628": 115, "644740": 115, "424259": 115, "458248": 115, "788980": 115, "040617": 115, "092612": 115, "643560": 115, "669172": 115, "334961": 115, "800730": 115, "042821": 115, "135598": 115, "948541": 115, "155420": 115, "immedi": 115, "input_stream": 115, "99node": 115, "98node": 115, "93node": 115, "longer": 115, "marshal": 115, "screen_2": 115, "lump_2": 115, "fines_2": 115, "stockpil": 115, "92node": 115, "83node": 115, "11node": 115, "77node": 115, "498": [115, 122], "504_dag_with_estim": [115, 122], "ultim": 116, "pattern": 116, "progressbar": 116, "feedback": 116, "my_simul": [116, 117], "tqdmparallel": 116, "simulating_networks_tool": 116, "delai": 116, "_simulating_network_funct": [116, 117, 122], "d_input": 116, "prefer": 116, "len": 116, "d_result": 116, "sid": [116, 117], "0x7f3959bc0460": 116, "0x7f3959bc3160": 116, "0x7f39580e71f0": 116, "025": [116, 122], "_501_simulating_network": [116, 122], "runnabl": 117, "simulating_network": 117, "main": 117, "issu": [117, 133], "least": 117, "ipython": 117, "def": 117, "sleep": 117, "deposit": 118, "tonn": 118, "inplac": 118, "126": [118, 120], "03e": 118, "982e": 118, "362": 118, "774": 118, "827": 118, "mc_xarrai": [118, 121, 123, 125], "157": [118, 121], "560b": 118, "fe_bin": 118, "80b": 118, "966e": 118, "832e": 118, "575": 118, "921e": 118, "791e": 118, "321": 118, "6308": 118, "5975": 118, "9911": 118, "722": 118, "665": 118, "039": 118, "8941": 118, "778": 118, "689": 118, "545": 118, "049": 118, "10coordin": 118, "float642": 118, "575unit": 118, "nonearrai": 118, "61780764": 118, "1966": 118, "24413201": 118, "1832": 118, "40451244": 118, "1273": 118, "23539711": 118, "49695225": 118, "52509456": 118, "35518418": 118, "13254505": 118, "58088726": 118, "57525784": 118, "52unit": 118, "1920": 118, "608": 118, "1790": 118, "808": 118, "1249": 118, "318": 118, "472": 118, "378": 118, "188": 118, "678": 118, "9911unit": 118, "36151888": 118, "32097995": 118, "27005075": 118, "8784741": 118, "68969901": 118, "96947574": 118, "60959468": 118, "63080186": 118, "59746379": 118, "99112614": 118, "7735851": 118, "72190358": 118, "66513797": 118, "58723432": 118, "33057763": 118, "24445616": 118, "13898806": 118, "03876993": 118, "8940913": 118, "87298913": 118, "float6460": 118, "19unit": 118, "4439379": 118, "54429733": 118, "68122032": 118, "12485812": 118, "29731211": 118, "40437359": 118, "39875773": 118, "17139146": 118, "68619881": 118, "19458333": 118, "82721018": 118, "77829082": 118, "68893448": 118, "54513781": 118, "35429631": 118, "39765039": 118, "28791533": 118, "3042964": 118, "04941553": 118, "99981884": 118, "fe_binspandasindexpandasindex": 118, "femc_vars_mass": 118, "373676": 118, "619288": 118, "398666": 118, "288222": 118, "365437": 118, "197": 118, "213295": 118, "880": 118, "211394": 118, "791020": 118, "217789": 118, "124492": 118, "756": 118, "382411": 118, "732": 118, "370": 118, "174639": 118, "091473": 118, "282386": 118, "308385": 118, "1549": 118, "120855": 118, "1509": 118, "569900": 118, "912236": 118, "863876": 118, "975221": 118, "1839": 118, "092713": 118, "1793": 118, "010": 118, "505731": 118, "829265": 118, "132412": 118, "872413": 118, "1935": 118, "262623": 118, "1887": 118, "908": 118, "446935": 118, "805108": 118, "247486": 118, "853999": 118, "1978": 118, "485263": 118, "1930": 118, "878": 118, "406248": 118, "792921": 118, "319538": 118, "840970": 118, "2006": 118, "036920": 118, "1958": 118, "248": 118, "382255": 118, "784113": 118, "381189": 118, "836520": 118, "042550": 118, "1976": 118, "168": 118, "365294": 118, "776101": 118, "427875": 118, "829521": 118, "827210": 118, "244132": 118, "320980": 118, "721904": 118, "544297": 118, "778291": 118, "404512": 118, "270051": 118, "665138": 118, "681220": 118, "688934": 118, "235397": 118, "878474": 118, "587234": 118, "124858": 118, "545138": 118, "496952": 118, "689699": 118, "330578": 118, "297312": 118, "354296": 118, "525095": 118, "969476": 118, "244456": 118, "404374": 118, "397650": 118, "355184": 118, "609595": 118, "138988": 118, "398758": 118, "287915": 118, "132545": 118, "810": 118, "630802": 118, "038770": 118, "171391": 118, "304296": 118, "580887": 118, "597464": 118, "894091": 118, "686199": 118, "049416": 118, "575258": 118, "520": 118, "991126": 118, "872989": 118, "194583": 118, "999819": 118, "654": [118, 122], "grade_tonnag": [118, 122], "usag": [119, 122, 124, 126], "tool": [119, 122], "iron": [119, 122, 127], "Ore": [119, 122, 127], "auto_examples_python": 119, "auto_examples_jupyt": 119, "514": [120, 122], "iron_ore_assai": [120, 122], "laboratori": 121, "new_edg": 121, "geomspac": 121, "0e": 121, "new_coord": 121, "insert": 121, "mc_upsampl": 121, "dip": 121, "narrow": 121, "adjac": 121, "neighbour": 121, "artefact": 121, "numer": 121, "correct": [121, 129], "upsampl": 121, "similar": 121, "smooth": 121, "howev": [121, 128], "mc_upsampled_2": 121, "back": [121, 123, 128, 133], "orig_index": 121, "original_edg": 121, "mc_downsampl": 121, "mc_downsampled_2": 121, "906": [121, 122], "resampling_interval_data": [121, 122], "294": 122, "auto_exampl": 122, "mb": [122, 126], "unus": 123, "concret": 123, "xr_ds_mass": 123, "xr_ds_chem": 123, "xr_1": 123, "xr_2": 123, "82": 123, "xr_ds_wtd": [123, 132], "circl": 123, "xr_ds_ad": 123, "xr_ds_add_sub": 123, "186": [123, 126], "basic_usage_xr": [123, 126], "masscompositionaccessor": 125, "pyprotectedmemb": 125, "xr_ds_split": 125, "xr_ds_comp": 125, "xr_ds_sum": 125, "xr_ds_minu": 125, "xr_ds_div": 125, "math_operations_xr": [125, 126], "290": 126, "auto_examples_xarray_exampl": 126, "descript": 127, "clean": 127, "wamex": 127, "databas": 127, "collar": 127, "necessari": 127, "wirelin": 127, "a072391_assai": 127, "csv": 127, "xyz": 127, "merg": [127, 130], "a072391_collar": 127, "nordic": 127, "lim": 127, "url": 127, "button": 127, "overview": 127, "section": 127, "mandatori": 128, "element": [128, 132], "oxid": [128, 132], "hold": 128, "inherit": 128, "destin": 128, "synonym": 128, "geoscientist": 129, "metallurgist": 129, "coda": 129, "care": 129, "mathemat": 129, "technic": 129, "correctli": 129, "begin": 129, "met": [129, 132], "latest": 129, "window": 129, "linux": 129, "mac": 129, "doc": 129, "pip": [129, 131], "viz": [129, 131], "your": [129, 131, 132, 133], "flavour": [129, 131], "incom": [129, 133], "meet": [129, 132], "trivial": [129, 132], "fork": 129, "repositori": 129, "branch": 129, "git": 129, "checkout": 129, "branch_nam": 129, "commit": 129, "commit_messag": 129, "push": 129, "pull": 129, "project": 129, "infanc": 129, "keen": 129, "want": [129, 131, 132], "me": 129, "reach": 129, "your_email": 129, "address": 129, "mit": [129, 130], "search": 129, "copyright": 130, "2023": 130, "greg": 130, "permiss": 130, "herebi": 130, "grant": 130, "free": 130, "charg": 130, "person": 130, "obtain": 130, "softwar": 130, "associ": 130, "deal": 130, "restrict": 130, "publish": 130, "sublicens": 130, "sell": 130, "permit": 130, "whom": 130, "furnish": 130, "subject": [130, 133], "condit": 130, "shall": 130, "substanti": 130, "THE": 130, "AS": 130, "warranti": 130, "kind": 130, "express": 130, "OR": 130, "impli": 130, "BUT": 130, "NOT": 130, "TO": 130, "merchant": 130, "FOR": 130, "AND": 130, "noninfring": 130, "IN": 130, "NO": 130, "event": 130, "author": 130, "holder": 130, "BE": 130, "liabl": 130, "claim": 130, "damag": 130, "liabil": 130, "whether": 130, "action": 130, "contract": 130, "tort": 130, "aris": 130, "WITH": 130, "alreadi": 132, "pre": 132, "requisit": 132, "detect": 132, "under": 132, "hood": 132, "troubl": 133, "land": 133, "look": [133, 134], "tip": 133, "trick": 133, "id": 133, "wonder": 133, "behav": 133, "tweak": 133, "invok": 133, "inadvert": 133, "too": 133, "mani": 133, "surpris": 133, "quickli": 133, "ram": 133, "consum": 133, "imagin": 133, "1000": 133, "But": 133, "sai": 133, "densifi": 133, "space": 133, "999": 133, "ymmv": 133, "content": [134, 135, 136], "compris": 135, "challeng": 137, "thought": 137, "good": 137, "suffici": 137, "earli": 137, "hang": 137, "bit": 137, "answer": 137, "who": 137}, "objects": {"elphick": [[91, 0, 0, "-", "mass_composition"]], "elphick.mass_composition": [[0, 0, 0, "-", "datasets"], [25, 0, 0, "-", "flowsheet"], [27, 0, 0, "-", "mass_composition"], [29, 0, 0, "-", "mc_node"], [32, 0, 0, "-", "mc_xarray"], [36, 0, 0, "-", "stream"], [38, 0, 0, "-", "utils"]], "elphick.mass_composition.datasets": [[1, 0, 0, "-", "datasets"], [13, 0, 0, "-", "downloader"], [15, 0, 0, "-", "sample_data"]], "elphick.mass_composition.datasets.datasets": [[2, 1, 1, "", "load_a072391_assay"], [3, 1, 1, "", "load_a072391_collars"], [4, 1, 1, "", "load_a072391_geo"], [5, 1, 1, "", "load_a072391_met"], [6, 1, 1, "", "load_a072391_wireline"], [7, 1, 1, "", "load_demo_data"], [8, 1, 1, "", "load_iron_ore_sample_a072391"], [9, 1, 1, "", "load_iron_ore_sample_xyz_a072391"], [10, 1, 1, "", "load_nordic_iron_ore_sink_float"], [11, 1, 1, "", "load_size_by_assay"], [12, 1, 1, "", "load_size_distribution"]], "elphick.mass_composition.datasets.downloader": [[14, 2, 1, "", "Downloader"]], "elphick.mass_composition.datasets.downloader.Downloader": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "load_data"]], "elphick.mass_composition.datasets.sample_data": [[16, 1, 1, "", "demo_size_network"], [17, 1, 1, "", "dh_intervals"], [18, 1, 1, "", "iron_ore_met_sample_data"], [19, 1, 1, "", "iron_ore_sample_data"], [20, 1, 1, "", "sample_data"], [21, 1, 1, "", "size_by_assay"], [22, 1, 1, "", "size_by_assay_2"], [23, 1, 1, "", "size_by_assay_3"], [24, 1, 1, "", "size_distribution"]], "elphick.mass_composition.flowsheet": [[26, 2, 1, "", "Flowsheet"]], "elphick.mass_composition.flowsheet.Flowsheet": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "from_dag"], [26, 3, 1, "", "from_dataframe"], [26, 3, 1, "", "from_streams"], [26, 3, 1, "", "from_yaml"], [26, 3, 1, "", "get_column_formats"], [26, 3, 1, "", "get_edge_by_name"], [26, 3, 1, "", "get_input_streams"], [26, 3, 1, "", "get_output_streams"], [26, 3, 1, "", "get_stream_names"], [26, 3, 1, "", "nodes_to_dict"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_balance"], [26, 3, 1, "", "plot_network"], [26, 3, 1, "", "plot_parallel"], [26, 3, 1, "", "plot_sankey"], [26, 3, 1, "", "query"], [26, 3, 1, "", "report"], [26, 3, 1, "", "reset_stream_nodes"], [26, 3, 1, "", "set_node_names"], [26, 3, 1, "", "set_stream_data"], [26, 3, 1, "", "streams_to_dict"], [26, 3, 1, "", "table_plot"], [26, 3, 1, "", "to_dataframe"], [26, 3, 1, "", "to_simple"]], "elphick.mass_composition.mass_composition": [[28, 2, 1, "", "MassComposition"]], "elphick.mass_composition.mass_composition.MassComposition": [[28, 3, 1, "", "__add__"], [28, 3, 1, "", "__init__"], [28, 3, 1, "", "add"], [28, 3, 1, "", "aggregate"], [28, 3, 1, "", "binned_mass_composition"], [28, 3, 1, "", "calculate_partition"], [28, 3, 1, "", "constrain"], [28, 3, 1, "", "div"], [28, 3, 1, "", "ideal_incremental_composition"], [28, 3, 1, "", "ideal_incremental_recovery"], [28, 3, 1, "", "ideal_incremental_separation"], [28, 3, 1, "", "plot_amenability"], [28, 3, 1, "", "plot_bins"], [28, 3, 1, "", "plot_comparison"], [28, 3, 1, "", "plot_grade_recovery"], [28, 3, 1, "", "plot_intervals"], [28, 3, 1, "", "plot_parallel"], [28, 3, 1, "", "plot_ternary"], [28, 3, 1, "", "resample_1d"], [28, 3, 1, "", "split"], [28, 3, 1, "", "split_by_estimator"], [28, 3, 1, "", "split_by_function"], [28, 3, 1, "", "split_by_partition"], [28, 3, 1, "", "sub"], [28, 3, 1, "", "to_xarray"]], "elphick.mass_composition.mc_node": [[30, 2, 1, "", "MCNode"], [31, 2, 1, "", "NodeType"]], "elphick.mass_composition.mc_node.MCNode": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "add"], [30, 3, 1, "", "imbalance_report"]], "elphick.mass_composition.mc_node.NodeType": [[31, 3, 1, "", "__init__"]], "elphick.mass_composition.mc_xarray": [[33, 2, 1, "", "CompositionContext"], [34, 2, 1, "", "MassCompositionAccessor"], [35, 1, 1, "", "mc_aggregate"]], "elphick.mass_composition.mc_xarray.CompositionContext": [[33, 3, 1, "", "__init__"]], "elphick.mass_composition.mc_xarray.MassCompositionAccessor": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "add"], [34, 3, 1, "", "aggregate"], [34, 3, 1, "", "composition_to_mass"], [34, 3, 1, "", "cumulate"], [34, 3, 1, "", "div"], [34, 3, 1, "", "mass_to_composition"], [34, 3, 1, "", "mul"], [34, 3, 1, "", "split"], [34, 3, 1, "", "split_by_partition"], [34, 3, 1, "", "sub"]], "elphick.mass_composition.stream": [[37, 2, 1, "", "Stream"]], "elphick.mass_composition.stream.Stream": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "add"], [37, 3, 1, "", "split"], [37, 3, 1, "", "split_by_estimator"], [37, 3, 1, "", "split_by_function"], [37, 3, 1, "", "split_by_partition"], [37, 3, 1, "", "sub"]], "elphick.mass_composition.utils": [[39, 0, 0, "-", "amenability"], [43, 0, 0, "-", "components"], [49, 0, 0, "-", "geometry"], [51, 0, 0, "-", "hash_utils"], [56, 0, 0, "-", "interp"], [59, 0, 0, "-", "loader"], [62, 0, 0, "-", "moisture"], [64, 0, 0, "-", "parallel"], [66, 0, 0, "-", "partition"], [69, 0, 0, "-", "pd_utils"], [77, 0, 0, "-", "sampling"], [79, 0, 0, "-", "size"], [81, 0, 0, "-", "size_distribution"], [86, 0, 0, "-", "sklearn"], [89, 0, 0, "-", "viz"]], "elphick.mass_composition.utils.amenability": [[40, 1, 1, "", "amenability_index"], [41, 1, 1, "", "area_trapezoid"], [42, 1, 1, "", "pairwise"]], "elphick.mass_composition.utils.components": [[44, 1, 1, "", "elements"], [45, 1, 1, "", "is_compositional"], [46, 1, 1, "", "is_element"], [47, 1, 1, "", "is_oxide"], [48, 1, 1, "", "oxides"]], "elphick.mass_composition.utils.geometry": [[50, 1, 1, "", "midpoint"]], "elphick.mass_composition.utils.hash_utils": [[52, 1, 1, "", "check_hash"], [53, 1, 1, "", "read_hash"], [54, 1, 1, "", "read_hash_file"], [55, 1, 1, "", "write_hash"]], "elphick.mass_composition.utils.interp": [[57, 1, 1, "", "interp_monotonic"], [58, 1, 1, "", "mass_preserving_interp"]], "elphick.mass_composition.utils.loader": [[60, 1, 1, "", "create_mass_composition"], [61, 1, 1, "", "streams_from_dataframe"]], "elphick.mass_composition.utils.moisture": [[63, 1, 1, "", "solve_mass_moisture"]], "elphick.mass_composition.utils.parallel": [[65, 2, 1, "", "TqdmParallel"]], "elphick.mass_composition.utils.parallel.TqdmParallel": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "print_progress"]], "elphick.mass_composition.utils.partition": [[67, 1, 1, "", "napier_munn"], [68, 1, 1, "", "perfect"]], "elphick.mass_composition.utils.pd_utils": [[70, 1, 1, "", "calculate_partition"], [71, 1, 1, "", "calculate_recovery"], [72, 1, 1, "", "column_prefix_counts"], [73, 1, 1, "", "column_prefixes"], [74, 1, 1, "", "composition_to_mass"], [75, 1, 1, "", "mass_to_composition"], [76, 1, 1, "", "weight_average"]], "elphick.mass_composition.utils.sampling": [[78, 1, 1, "", "random_int"]], "elphick.mass_composition.utils.size": [[80, 1, 1, "", "mean_size"]], "elphick.mass_composition.utils.size_distribution": [[82, 1, 1, "", "gaudin_schuhmann"], [83, 1, 1, "", "lynch"], [84, 1, 1, "", "modified_rosin_rammler"], [85, 1, 1, "", "rosin_rammler"]], "elphick.mass_composition.utils.sklearn": [[87, 2, 1, "", "PandasPipeline"], [88, 1, 1, "", "extract_feature_names"]], "elphick.mass_composition.utils.sklearn.PandasPipeline": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "fit"], [87, 3, 1, "", "get_feature_names_out"], [87, 3, 1, "", "predict"], [87, 3, 1, "", "score"], [87, 3, 1, "", "transform"]], "elphick.mass_composition.utils.viz": [[90, 1, 1, "", "plot_parallel"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"elphick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "mass_composit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "dataset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 93, 96, 101, 123, 125, 127], "load_a072391_assai": 2, "load_a072391_collar": 3, "load_a072391_geo": 4, "load_a072391_met": 5, "load_a072391_wirelin": 6, "load_demo_data": 7, "load_iron_ore_sample_a072391": 8, "load_iron_ore_sample_xyz_a072391": 9, "load_nordic_iron_ore_sink_float": 10, "load_size_by_assai": 11, "load_size_distribut": 12, "download": [13, 14], "sample_data": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "demo_size_network": 16, "dh_interv": 17, "iron_ore_met_sample_data": 18, "iron_ore_sample_data": 19, "size_by_assai": 21, "size_by_assay_2": 22, "size_by_assay_3": 23, "size_distribut": [24, 81, 82, 83, 84, 85], "flowsheet": [25, 26, 98, 100, 112, 135], "masscomposit": [28, 92, 94, 95, 98, 99, 100, 103, 104, 108, 112, 115, 118, 120, 121, 129], "mc_node": [29, 30, 31], "mcnode": 30, "nodetyp": 31, "mc_xarrai": [32, 33, 34, 35], "compositioncontext": 33, "masscompositionaccessor": 34, "mc_aggreg": 35, "stream": [36, 37, 97, 98], "util": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "amen": [39, 40, 41, 42, 109], "amenability_index": 40, "area_trapezoid": 41, "pairwis": 42, "compon": [43, 44, 45, 46, 47, 48], "element": 44, "is_composit": 45, "is_el": 46, "is_oxid": 47, "oxid": 48, "geometri": [49, 50], "midpoint": 50, "hash_util": [51, 52, 53, 54, 55], "check_hash": 52, "read_hash": 53, "read_hash_fil": 54, "write_hash": 55, "interp": [56, 57, 58], "interp_monoton": 57, "mass_preserving_interp": 58, "loader": [59, 60, 61], "create_mass_composit": 60, "streams_from_datafram": 61, "moistur": [62, 63], "solve_mass_moistur": 63, "parallel": [64, 65, 116, 120], "tqdmparallel": 65, "partit": [66, 67, 68, 101, 105, 106, 114], "napier_munn": 67, "perfect": 68, "pd_util": [69, 70, 71, 72, 73, 74, 75, 76], "calculate_partit": 70, "calculate_recoveri": 71, "column_prefix_count": 72, "column_prefix": 73, "composition_to_mass": 74, "mass_to_composit": 75, "weight_averag": 76, "sampl": [77, 78, 93, 102, 106, 109, 116], "random_int": 78, "size": [79, 80], "mean_siz": 80, "gaudin_schuhmann": 82, "lynch": 83, "modified_rosin_ramml": 84, "rosin_ramml": 85, "sklearn": [86, 87, 88], "pandaspipelin": 87, "extract_feature_nam": 88, "viz": [89, 90], "plot_parallel": 90, "api": 91, "refer": 91, "basic": [92, 98, 123], "usag": [92, 123], "creat": [92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 120, 121, 123, 125], "object": [92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 115, 118, 120, 121], "demonstr": [92, 103, 118, 123], "aggreg": [92, 118, 123], "method": [92, 98], "filter": [92, 99, 100], "data": [93, 98, 100, 103, 108, 110, 111, 115, 118, 121, 136], "tldr": [93, 127], "constrain": 94, "clip": 94, "rel": 94, "anoth": 94, "plot": [95, 100, 104, 109, 118, 120, 133], "demo": 95, "math": [96, 98, 125], "oper": [96, 98, 125], "mass": [96, 101, 102, 105, 106, 112, 123, 125, 129], "composit": [96, 101, 102, 105, 106, 123, 125, 129], "mc": [96, 101, 123, 125], "enabl": [96, 101, 123, 125], "xarrai": [96, 101, 119, 123, 124, 125], "network": [97, 98, 102, 103, 107, 112, 116, 117], "load": [97, 111, 115], "datafram": 97, "contain": 97, "3": 97, "some": [98, 100, 110], "expand": 98, "set": 98, "node": 98, "name": 98, "modifi": [98, 103], "relationship": 98, "singl": 99, "multipl": [99, 104, 116], "sankei": 100, "split": [101, 102, 106], "dimens": 101, "layout": 102, "constraint": 103, "statu": 103, "oor": 103, "within": 103, "compar": [104, 106], "recoveri": [104, 109], "differ": 104, "divis": 104, "comparison": 104, "model": [105, 115], "todo": [105, 110, 134, 135, 136, 137], "defin": [105, 113, 114, 115], "appli": [105, 106], "panda": 105, "function": [105, 118, 123], "separ": [106, 109], "simplifi": 107, "interv": [108, 110, 111, 121], "increment": 109, "grade": [109, 118], "advanc": 110, "unifi": 110, "index": 110, "troubleshoot": [110, 133], "imbal": 110, "sink": 111, "float": 111, "balanc": 112, "an": 112, "imbalanc": 112, "dag": [113, 114, 115], "simul": [113, 116, 117], "run": [113, 114, 133], "estim": 115, "build": 115, "test": 115, "head": 115, "more": 115, "complex": 115, "execut": 116, "view": 116, "tool": 117, "tonnag": 118, "tabular": 118, "bin": 118, "exampl": 119, "galleri": [119, 124], "iron": 120, "Ore": 120, "assai": 120, "resampl": 121, "comput": [122, 126], "time": [122, 126], "xr": [123, 125], "regist": 127, "glossari": 128, "welcom": 129, "document": 129, "prerequisit": 129, "instal": [129, 131], "us": 129, "contribut": 129, "contributor": 129, "contact": 129, "licens": [129, 130], "indic": 129, "tabl": 129, "quick": 132, "start": [132, 134], "guid": [132, 137], "why": 133, "won": 133, "t": 133, "my": 133, "plotli": 133, "show": 133, "did": 133, "i": 133, "just": 133, "out": 133, "memori": 133, "get": 134, "user": 137}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"elphick.mass_composition.datasets": [[0, "module-elphick.mass_composition.datasets"]], "elphick.mass_composition.datasets.datasets": [[1, "module-elphick.mass_composition.datasets.datasets"]], "elphick.mass_composition.datasets.datasets.load_a072391_assay": [[2, "elphick-mass-composition-datasets-datasets-load-a072391-assay"]], "elphick.mass_composition.datasets.datasets.load_a072391_collars": [[3, "elphick-mass-composition-datasets-datasets-load-a072391-collars"]], "elphick.mass_composition.datasets.datasets.load_a072391_geo": [[4, "elphick-mass-composition-datasets-datasets-load-a072391-geo"]], "elphick.mass_composition.datasets.datasets.load_a072391_met": [[5, "elphick-mass-composition-datasets-datasets-load-a072391-met"]], "elphick.mass_composition.datasets.datasets.load_a072391_wireline": [[6, "elphick-mass-composition-datasets-datasets-load-a072391-wireline"]], "elphick.mass_composition.datasets.datasets.load_demo_data": [[7, "elphick-mass-composition-datasets-datasets-load-demo-data"]], "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_a072391": [[8, "elphick-mass-composition-datasets-datasets-load-iron-ore-sample-a072391"]], "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_xyz_a072391": [[9, "elphick-mass-composition-datasets-datasets-load-iron-ore-sample-xyz-a072391"]], "elphick.mass_composition.datasets.datasets.load_nordic_iron_ore_sink_float": [[10, "elphick-mass-composition-datasets-datasets-load-nordic-iron-ore-sink-float"]], "elphick.mass_composition.datasets.datasets.load_size_by_assay": [[11, "elphick-mass-composition-datasets-datasets-load-size-by-assay"]], "elphick.mass_composition.datasets.datasets.load_size_distribution": [[12, "elphick-mass-composition-datasets-datasets-load-size-distribution"]], "elphick.mass_composition.datasets.downloader": [[13, "module-elphick.mass_composition.datasets.downloader"]], "elphick.mass_composition.datasets.downloader.Downloader": [[14, "elphick-mass-composition-datasets-downloader-downloader"]], "elphick.mass_composition.datasets.sample_data": [[15, "module-elphick.mass_composition.datasets.sample_data"]], "elphick.mass_composition.datasets.sample_data.demo_size_network": [[16, "elphick-mass-composition-datasets-sample-data-demo-size-network"]], "elphick.mass_composition.datasets.sample_data.dh_intervals": [[17, "elphick-mass-composition-datasets-sample-data-dh-intervals"]], "elphick.mass_composition.datasets.sample_data.iron_ore_met_sample_data": [[18, "elphick-mass-composition-datasets-sample-data-iron-ore-met-sample-data"]], "elphick.mass_composition.datasets.sample_data.iron_ore_sample_data": [[19, "elphick-mass-composition-datasets-sample-data-iron-ore-sample-data"]], "elphick.mass_composition.datasets.sample_data.sample_data": [[20, "elphick-mass-composition-datasets-sample-data-sample-data"]], "elphick.mass_composition.datasets.sample_data.size_by_assay": [[21, "elphick-mass-composition-datasets-sample-data-size-by-assay"]], "elphick.mass_composition.datasets.sample_data.size_by_assay_2": [[22, "elphick-mass-composition-datasets-sample-data-size-by-assay-2"]], "elphick.mass_composition.datasets.sample_data.size_by_assay_3": [[23, "elphick-mass-composition-datasets-sample-data-size-by-assay-3"]], "elphick.mass_composition.datasets.sample_data.size_distribution": [[24, "elphick-mass-composition-datasets-sample-data-size-distribution"]], "elphick.mass_composition.flowsheet": [[25, "module-elphick.mass_composition.flowsheet"]], "elphick.mass_composition.flowsheet.Flowsheet": [[26, "elphick-mass-composition-flowsheet-flowsheet"]], "elphick.mass_composition.mass_composition": [[27, "module-elphick.mass_composition.mass_composition"]], "elphick.mass_composition.mass_composition.MassComposition": [[28, "elphick-mass-composition-mass-composition-masscomposition"]], "elphick.mass_composition.mc_node": [[29, "module-elphick.mass_composition.mc_node"]], "elphick.mass_composition.mc_node.MCNode": [[30, "elphick-mass-composition-mc-node-mcnode"]], "elphick.mass_composition.mc_node.NodeType": [[31, "elphick-mass-composition-mc-node-nodetype"]], "elphick.mass_composition.mc_xarray": [[32, "module-elphick.mass_composition.mc_xarray"]], "elphick.mass_composition.mc_xarray.CompositionContext": [[33, "elphick-mass-composition-mc-xarray-compositioncontext"]], "elphick.mass_composition.mc_xarray.MassCompositionAccessor": [[34, "elphick-mass-composition-mc-xarray-masscompositionaccessor"]], "elphick.mass_composition.mc_xarray.mc_aggregate": [[35, "elphick-mass-composition-mc-xarray-mc-aggregate"]], "elphick.mass_composition.stream": [[36, "module-elphick.mass_composition.stream"]], "elphick.mass_composition.stream.Stream": [[37, "elphick-mass-composition-stream-stream"]], "elphick.mass_composition.utils": [[38, "module-elphick.mass_composition.utils"]], "elphick.mass_composition.utils.amenability": [[39, "module-elphick.mass_composition.utils.amenability"]], "elphick.mass_composition.utils.amenability.amenability_index": [[40, "elphick-mass-composition-utils-amenability-amenability-index"]], "elphick.mass_composition.utils.amenability.area_trapezoid": [[41, "elphick-mass-composition-utils-amenability-area-trapezoid"]], "elphick.mass_composition.utils.amenability.pairwise": [[42, "elphick-mass-composition-utils-amenability-pairwise"]], "elphick.mass_composition.utils.components": [[43, "module-elphick.mass_composition.utils.components"]], "elphick.mass_composition.utils.components.elements": [[44, "elphick-mass-composition-utils-components-elements"]], "elphick.mass_composition.utils.components.is_compositional": [[45, "elphick-mass-composition-utils-components-is-compositional"]], "elphick.mass_composition.utils.components.is_element": [[46, "elphick-mass-composition-utils-components-is-element"]], "elphick.mass_composition.utils.components.is_oxide": [[47, "elphick-mass-composition-utils-components-is-oxide"]], "elphick.mass_composition.utils.components.oxides": [[48, "elphick-mass-composition-utils-components-oxides"]], "elphick.mass_composition.utils.geometry": [[49, "module-elphick.mass_composition.utils.geometry"]], "elphick.mass_composition.utils.geometry.midpoint": [[50, "elphick-mass-composition-utils-geometry-midpoint"]], "elphick.mass_composition.utils.hash_utils": [[51, "module-elphick.mass_composition.utils.hash_utils"]], "elphick.mass_composition.utils.hash_utils.check_hash": [[52, "elphick-mass-composition-utils-hash-utils-check-hash"]], "elphick.mass_composition.utils.hash_utils.read_hash": [[53, "elphick-mass-composition-utils-hash-utils-read-hash"]], "elphick.mass_composition.utils.hash_utils.read_hash_file": [[54, "elphick-mass-composition-utils-hash-utils-read-hash-file"]], "elphick.mass_composition.utils.hash_utils.write_hash": [[55, "elphick-mass-composition-utils-hash-utils-write-hash"]], "elphick.mass_composition.utils.interp": [[56, "module-elphick.mass_composition.utils.interp"]], "elphick.mass_composition.utils.interp.interp_monotonic": [[57, "elphick-mass-composition-utils-interp-interp-monotonic"]], "elphick.mass_composition.utils.interp.mass_preserving_interp": [[58, "elphick-mass-composition-utils-interp-mass-preserving-interp"]], "elphick.mass_composition.utils.loader": [[59, "module-elphick.mass_composition.utils.loader"]], "elphick.mass_composition.utils.loader.create_mass_composition": [[60, "elphick-mass-composition-utils-loader-create-mass-composition"]], "elphick.mass_composition.utils.loader.streams_from_dataframe": [[61, "elphick-mass-composition-utils-loader-streams-from-dataframe"]], "elphick.mass_composition.utils.moisture": [[62, "module-elphick.mass_composition.utils.moisture"]], "elphick.mass_composition.utils.moisture.solve_mass_moisture": [[63, "elphick-mass-composition-utils-moisture-solve-mass-moisture"]], "elphick.mass_composition.utils.parallel": [[64, "module-elphick.mass_composition.utils.parallel"]], "elphick.mass_composition.utils.parallel.TqdmParallel": [[65, "elphick-mass-composition-utils-parallel-tqdmparallel"]], "elphick.mass_composition.utils.partition": [[66, "module-elphick.mass_composition.utils.partition"]], "elphick.mass_composition.utils.partition.napier_munn": [[67, "elphick-mass-composition-utils-partition-napier-munn"]], "elphick.mass_composition.utils.partition.perfect": [[68, "elphick-mass-composition-utils-partition-perfect"]], "elphick.mass_composition.utils.pd_utils": [[69, "module-elphick.mass_composition.utils.pd_utils"]], "elphick.mass_composition.utils.pd_utils.calculate_partition": [[70, "elphick-mass-composition-utils-pd-utils-calculate-partition"]], "elphick.mass_composition.utils.pd_utils.calculate_recovery": [[71, "elphick-mass-composition-utils-pd-utils-calculate-recovery"]], "elphick.mass_composition.utils.pd_utils.column_prefix_counts": [[72, "elphick-mass-composition-utils-pd-utils-column-prefix-counts"]], "elphick.mass_composition.utils.pd_utils.column_prefixes": [[73, "elphick-mass-composition-utils-pd-utils-column-prefixes"]], "elphick.mass_composition.utils.pd_utils.composition_to_mass": [[74, "elphick-mass-composition-utils-pd-utils-composition-to-mass"]], "elphick.mass_composition.utils.pd_utils.mass_to_composition": [[75, "elphick-mass-composition-utils-pd-utils-mass-to-composition"]], "elphick.mass_composition.utils.pd_utils.weight_average": [[76, "elphick-mass-composition-utils-pd-utils-weight-average"]], "elphick.mass_composition.utils.sampling": [[77, "module-elphick.mass_composition.utils.sampling"]], "elphick.mass_composition.utils.sampling.random_int": [[78, "elphick-mass-composition-utils-sampling-random-int"]], "elphick.mass_composition.utils.size": [[79, "module-elphick.mass_composition.utils.size"]], "elphick.mass_composition.utils.size.mean_size": [[80, "elphick-mass-composition-utils-size-mean-size"]], "elphick.mass_composition.utils.size_distribution": [[81, "module-elphick.mass_composition.utils.size_distribution"]], "elphick.mass_composition.utils.size_distribution.gaudin_schuhmann": [[82, "elphick-mass-composition-utils-size-distribution-gaudin-schuhmann"]], "elphick.mass_composition.utils.size_distribution.lynch": [[83, "elphick-mass-composition-utils-size-distribution-lynch"]], "elphick.mass_composition.utils.size_distribution.modified_rosin_rammler": [[84, "elphick-mass-composition-utils-size-distribution-modified-rosin-rammler"]], "elphick.mass_composition.utils.size_distribution.rosin_rammler": [[85, "elphick-mass-composition-utils-size-distribution-rosin-rammler"]], "elphick.mass_composition.utils.sklearn": [[86, "module-elphick.mass_composition.utils.sklearn"]], "elphick.mass_composition.utils.sklearn.PandasPipeline": [[87, "elphick-mass-composition-utils-sklearn-pandaspipeline"]], "elphick.mass_composition.utils.sklearn.extract_feature_names": [[88, "elphick-mass-composition-utils-sklearn-extract-feature-names"]], "elphick.mass_composition.utils.viz": [[89, "module-elphick.mass_composition.utils.viz"]], "elphick.mass_composition.utils.viz.plot_parallel": [[90, "elphick-mass-composition-utils-viz-plot-parallel"]], "API Reference": [[91, "module-elphick.mass_composition"]], "Basic usage": [[92, "basic-usage"]], "Create a MassComposition object": [[92, "create-a-masscomposition-object"], [94, "create-a-masscomposition-object"], [95, "create-a-masscomposition-object"], [99, "create-a-masscomposition-object"], [103, "create-a-masscomposition-object"], [104, "create-a-masscomposition-object"], [108, "create-a-masscomposition-object"], [112, "create-a-masscomposition-object"], [118, "create-a-masscomposition-object"], [120, "create-a-masscomposition-object"], [121, "create-a-masscomposition-object"]], "Demonstrate the aggregate method": [[92, "demonstrate-the-aggregate-method"]], "Filter the object": [[92, "filter-the-object"]], "Datasets and Sample Data": [[93, "datasets-and-sample-data"]], "TLDR": [[93, null], [127, null]], "Datasets": [[93, "datasets"], [127, "datasets"]], "Sample Data": [[93, "sample-data"]], "Constrain": [[94, "constrain"]], "Constraining by Clip": [[94, "constraining-by-clip"]], "Constraining Relative to Another Object": [[94, "constraining-relative-to-another-object"]], "Plot Demo": [[95, "plot-demo"]], "Math Operations": [[96, "math-operations"]], "Create a mass-composition (mc) enabled Xarray Dataset": [[96, "create-a-mass-composition-mc-enabled-xarray-dataset"], [101, "create-a-mass-composition-mc-enabled-xarray-dataset"], [123, "create-a-mass-composition-mc-enabled-xarray-dataset"], [125, "create-a-mass-composition-mc-enabled-xarray-dataset"]], "Create Network": [[97, "create-network"]], "Load a dataframe containing 3 streams": [[97, "load-a-dataframe-containing-3-streams"]], "Network Basics": [[98, "network-basics"]], "Create some MassComposition objects": [[98, "create-some-masscomposition-objects"], [100, "create-some-masscomposition-objects"]], "Create a Flowsheet object": [[98, "create-a-flowsheet-object"], [100, "create-a-flowsheet-object"]], "Expand the Network with Math Operators": [[98, "expand-the-network-with-math-operators"]], "Setting Node names": [[98, "setting-node-names"]], "Setting Stream data": [[98, "setting-stream-data"]], "Methods to modify relationships": [[98, "methods-to-modify-relationships"]], "Filtering": [[99, "filtering"]], "Filtering Single Objects": [[99, "filtering-single-objects"]], "Filtering Multiple Objects": [[99, "filtering-multiple-objects"]], "Sankey Plots": [[100, "sankey-plots"]], "Sankey Plot": [[100, "sankey-plot"]], "Filtered Data": [[100, "filtered-data"]], "Splitting and Partitioning Objects": [[101, "splitting-and-partitioning-objects"]], "Split by Mass": [[101, "split-by-mass"]], "Partition by Dimension": [[101, "partition-by-dimension"]], "Network Layouts": [[102, "network-layouts"]], "Create a mass-composition object": [[102, "create-a-mass-composition-object"], [105, "create-a-mass-composition-object"], [106, "create-a-mass-composition-object"]], "Split the Sample": [[102, "split-the-sample"], [106, "split-the-sample"]], "Constraints and Status": [[103, "constraints-and-status"]], "Modify the constraints to demonstrate OOR data": [[103, "modify-the-constraints-to-demonstrate-oor-data"]], "OOR data within a network": [[103, "oor-data-within-a-network"]], "Compare": [[104, "compare"]], "Compare by Recovery": [[104, "compare-by-recovery"]], "Compare by Difference": [[104, "compare-by-difference"]], "Compare by Division": [[104, "compare-by-division"]], "Multiple Comparisons": [[104, "multiple-comparisons"]], "Comparison Plot": [[104, "comparison-plot"]], "Partition Models": [[105, "partition-models"]], "TODO": [[105, null], [110, null], [134, null], [135, null], [136, null], [137, null], [137, null]], "Define and Apply the Partition": [[105, "define-and-apply-the-partition"]], "Pandas Function": [[105, "pandas-function"]], "Compare Partition Separations": [[106, "compare-partition-separations"]], "Apply the Partitions": [[106, "apply-the-partitions"]], "Simplify a Network": [[107, "simplify-a-network"]], "Create a network": [[107, "create-a-network"]], "Simplify the Network": [[107, "simplify-the-network"]], "Interval Data": [[108, "interval-data"]], "Incremental Separation": [[109, "incremental-separation"]], "Create the sample": [[109, "create-the-sample"]], "Incrementally Separate": [[109, "incrementally-separate"]], "Plot Grade-Recovery": [[109, "plot-grade-recovery"]], "Plot Amenability": [[109, "plot-amenability"]], "Interval Data - Advanced": [[110, "interval-data-advanced"]], "Create some data": [[110, "create-some-data"]], "Unifying Indexes": [[110, "unifying-indexes"]], "Troubleshooting the imbalance": [[110, "troubleshooting-the-imbalance"]], "Interval Data - Sink Float": [[111, "interval-data-sink-float"]], "Load Data": [[111, "load-data"], [115, "load-data"]], "Mass Balancing": [[112, "mass-balancing"]], "Create a Network that balances": [[112, "create-a-network-that-balances"]], "Create an imbalanced network": [[112, "create-an-imbalanced-network"]], "Balance the Flowsheet": [[112, "balance-the-flowsheet"]], "DAG to Define and Simulate": [[113, "dag-to-define-and-simulate"]], "Define the DAG": [[113, "define-the-dag"], [114, "define-the-dag"], [115, "define-the-dag"]], "Run the DAG": [[113, "run-the-dag"], [114, "run-the-dag"]], "DAG with Partitions": [[114, "dag-with-partitions"]], "Define the Partitions": [[114, "define-the-partitions"]], "DAG with Estimator": [[115, "dag-with-estimator"]], "Build a model": [[115, "build-a-model"]], "Test the model": [[115, "test-the-model"]], "Create a Head MassComposition object": [[115, "create-a-head-masscomposition-object"]], "More Complex DAG": [[115, "more-complex-dag"]], "Simulating a Network in Parallel": [[116, "simulating-a-network-in-parallel"]], "Execute multiple simulations": [[116, "execute-multiple-simulations"]], "View the network for a sample": [[116, "view-the-network-for-a-sample"]], "Network Simulation Tools": [[117, "network-simulation-tools"]], "Grade Tonnage": [[118, "grade-tonnage"]], "Demonstrate the aggregate function": [[118, "demonstrate-the-aggregate-function"]], "Tabular Grade bin data": [[118, "tabular-grade-bin-data"]], "Plot the Grade Bins": [[118, "plot-the-grade-bins"]], "Example Gallery": [[119, "example-gallery"]], "Xarray Gallery": [[119, "xarray-gallery"], [124, "xarray-gallery"]], "Iron Ore Assays": [[120, "iron-ore-assays"]], "Parallel plots": [[120, "parallel-plots"]], "Resampling Interval Data": [[121, "resampling-interval-data"]], "Computation times": [[122, "computation-times"], [126, "computation-times"]], "Basic usage XR": [[123, "basic-usage-xr"]], "Demonstrate the mc aggregate function": [[123, "demonstrate-the-mc-aggregate-function"]], "Math Operations XR": [[125, "math-operations-xr"]], "Dataset Register": [[127, "dataset-register"]], "Glossary": [[128, "glossary"]], "Welcome to mass-composition documentation!": [[129, "welcome-to-mass-composition-documentation"]], "MassComposition": [[129, "masscomposition"]], "Prerequisites": [[129, "prerequisites"]], "Installing MassComposition": [[129, "installing-masscomposition"]], "Using MassComposition": [[129, "using-masscomposition"]], "Contributing to MassComposition": [[129, "contributing-to-masscomposition"]], "Contributors": [[129, "contributors"]], "Contact": [[129, "contact"]], "License": [[129, "license"], [130, "license"]], "Indices and tables": [[129, "indices-and-tables"]], "Installation": [[131, "installation"]], "Quick Start Guide": [[132, "quick-start-guide"]], "Troubleshooting": [[133, "troubleshooting"]], "Why won\u2019t my plotly plot show?": [[133, "why-won-t-my-plotly-plot-show"]], "Why did I just run out of memory?": [[133, "why-did-i-just-run-out-of-memory"]], "Getting Started": [[134, "getting-started"]], "Flowsheets": [[135, "flowsheets"]], "Data": [[136, "data"]], "User Guide": [[137, "user-guide"]]}, "indexentries": {"elphick.mass_composition.datasets": [[0, "module-elphick.mass_composition.datasets"]], "module": [[0, "module-elphick.mass_composition.datasets"], [1, "module-elphick.mass_composition.datasets.datasets"], [13, "module-elphick.mass_composition.datasets.downloader"], [15, "module-elphick.mass_composition.datasets.sample_data"], [25, "module-elphick.mass_composition.flowsheet"], [27, "module-elphick.mass_composition.mass_composition"], [29, "module-elphick.mass_composition.mc_node"], [32, "module-elphick.mass_composition.mc_xarray"], [36, "module-elphick.mass_composition.stream"], [38, "module-elphick.mass_composition.utils"], [39, "module-elphick.mass_composition.utils.amenability"], [43, "module-elphick.mass_composition.utils.components"], [49, "module-elphick.mass_composition.utils.geometry"], [51, "module-elphick.mass_composition.utils.hash_utils"], [56, "module-elphick.mass_composition.utils.interp"], [59, "module-elphick.mass_composition.utils.loader"], [62, "module-elphick.mass_composition.utils.moisture"], [64, "module-elphick.mass_composition.utils.parallel"], [66, "module-elphick.mass_composition.utils.partition"], [69, "module-elphick.mass_composition.utils.pd_utils"], [77, "module-elphick.mass_composition.utils.sampling"], [79, "module-elphick.mass_composition.utils.size"], [81, "module-elphick.mass_composition.utils.size_distribution"], [86, "module-elphick.mass_composition.utils.sklearn"], [89, "module-elphick.mass_composition.utils.viz"], [91, "module-elphick.mass_composition"]], "elphick.mass_composition.datasets.datasets": [[1, "module-elphick.mass_composition.datasets.datasets"]], "load_a072391_assay() (in module elphick.mass_composition.datasets.datasets)": [[2, "elphick.mass_composition.datasets.datasets.load_a072391_assay"]], "load_a072391_collars() (in module elphick.mass_composition.datasets.datasets)": [[3, "elphick.mass_composition.datasets.datasets.load_a072391_collars"]], "load_a072391_geo() (in module elphick.mass_composition.datasets.datasets)": [[4, "elphick.mass_composition.datasets.datasets.load_a072391_geo"]], "load_a072391_met() (in module elphick.mass_composition.datasets.datasets)": [[5, "elphick.mass_composition.datasets.datasets.load_a072391_met"]], "load_a072391_wireline() (in module elphick.mass_composition.datasets.datasets)": [[6, "elphick.mass_composition.datasets.datasets.load_a072391_wireline"]], "load_demo_data() (in module elphick.mass_composition.datasets.datasets)": [[7, "elphick.mass_composition.datasets.datasets.load_demo_data"]], "load_iron_ore_sample_a072391() (in module elphick.mass_composition.datasets.datasets)": [[8, "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_a072391"]], "load_iron_ore_sample_xyz_a072391() (in module elphick.mass_composition.datasets.datasets)": [[9, "elphick.mass_composition.datasets.datasets.load_iron_ore_sample_xyz_a072391"]], "load_nordic_iron_ore_sink_float() (in module elphick.mass_composition.datasets.datasets)": [[10, "elphick.mass_composition.datasets.datasets.load_nordic_iron_ore_sink_float"]], "load_size_by_assay() (in module elphick.mass_composition.datasets.datasets)": [[11, "elphick.mass_composition.datasets.datasets.load_size_by_assay"]], "load_size_distribution() (in module elphick.mass_composition.datasets.datasets)": [[12, "elphick.mass_composition.datasets.datasets.load_size_distribution"]], "elphick.mass_composition.datasets.downloader": [[13, "module-elphick.mass_composition.datasets.downloader"]], "downloader (class in elphick.mass_composition.datasets.downloader)": [[14, "elphick.mass_composition.datasets.downloader.Downloader"]], "__init__() (elphick.mass_composition.datasets.downloader.downloader method)": [[14, "elphick.mass_composition.datasets.downloader.Downloader.__init__"]], "load_data() (elphick.mass_composition.datasets.downloader.downloader method)": [[14, "elphick.mass_composition.datasets.downloader.Downloader.load_data"]], "elphick.mass_composition.datasets.sample_data": [[15, "module-elphick.mass_composition.datasets.sample_data"]], "demo_size_network() (in module elphick.mass_composition.datasets.sample_data)": [[16, "elphick.mass_composition.datasets.sample_data.demo_size_network"]], "dh_intervals() (in module elphick.mass_composition.datasets.sample_data)": [[17, "elphick.mass_composition.datasets.sample_data.dh_intervals"]], "iron_ore_met_sample_data() (in module elphick.mass_composition.datasets.sample_data)": [[18, "elphick.mass_composition.datasets.sample_data.iron_ore_met_sample_data"]], "iron_ore_sample_data() (in module elphick.mass_composition.datasets.sample_data)": [[19, "elphick.mass_composition.datasets.sample_data.iron_ore_sample_data"]], "sample_data() (in module elphick.mass_composition.datasets.sample_data)": [[20, "elphick.mass_composition.datasets.sample_data.sample_data"]], "size_by_assay() (in module elphick.mass_composition.datasets.sample_data)": [[21, "elphick.mass_composition.datasets.sample_data.size_by_assay"]], "size_by_assay_2() (in module elphick.mass_composition.datasets.sample_data)": [[22, "elphick.mass_composition.datasets.sample_data.size_by_assay_2"]], "size_by_assay_3() (in module elphick.mass_composition.datasets.sample_data)": [[23, "elphick.mass_composition.datasets.sample_data.size_by_assay_3"]], "size_distribution() (in module elphick.mass_composition.datasets.sample_data)": [[24, "elphick.mass_composition.datasets.sample_data.size_distribution"]], "elphick.mass_composition.flowsheet": [[25, "module-elphick.mass_composition.flowsheet"]], "flowsheet (class in elphick.mass_composition.flowsheet)": [[26, "elphick.mass_composition.flowsheet.Flowsheet"]], "__init__() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.__init__"]], "from_dag() (elphick.mass_composition.flowsheet.flowsheet class method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.from_dag"]], "from_dataframe() (elphick.mass_composition.flowsheet.flowsheet class method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.from_dataframe"]], "from_streams() (elphick.mass_composition.flowsheet.flowsheet class method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.from_streams"]], "from_yaml() (elphick.mass_composition.flowsheet.flowsheet class method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.from_yaml"]], "get_column_formats() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.get_column_formats"]], "get_edge_by_name() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.get_edge_by_name"]], "get_input_streams() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.get_input_streams"]], "get_output_streams() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.get_output_streams"]], "get_stream_names() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.get_stream_names"]], "nodes_to_dict() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.nodes_to_dict"]], "plot() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.plot"]], "plot_balance() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.plot_balance"]], "plot_network() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.plot_network"]], "plot_parallel() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.plot_parallel"]], "plot_sankey() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.plot_sankey"]], "query() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.query"]], "report() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.report"]], "reset_stream_nodes() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.reset_stream_nodes"]], "set_node_names() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.set_node_names"]], "set_stream_data() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.set_stream_data"]], "streams_to_dict() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.streams_to_dict"]], "table_plot() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.table_plot"]], "to_dataframe() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.to_dataframe"]], "to_simple() (elphick.mass_composition.flowsheet.flowsheet method)": [[26, "elphick.mass_composition.flowsheet.Flowsheet.to_simple"]], "elphick.mass_composition.mass_composition": [[27, "module-elphick.mass_composition.mass_composition"]], "masscomposition (class in elphick.mass_composition.mass_composition)": [[28, "elphick.mass_composition.mass_composition.MassComposition"]], "__add__() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.__add__"]], "__init__() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.__init__"]], "add() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.add"]], "aggregate() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.aggregate"]], "binned_mass_composition() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.binned_mass_composition"]], "calculate_partition() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.calculate_partition"]], "constrain() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.constrain"]], "div() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.div"]], "ideal_incremental_composition() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.ideal_incremental_composition"]], "ideal_incremental_recovery() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.ideal_incremental_recovery"]], "ideal_incremental_separation() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.ideal_incremental_separation"]], "plot_amenability() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_amenability"]], "plot_bins() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_bins"]], "plot_comparison() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_comparison"]], "plot_grade_recovery() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_grade_recovery"]], "plot_intervals() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_intervals"]], "plot_parallel() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_parallel"]], "plot_ternary() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.plot_ternary"]], "resample_1d() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.resample_1d"]], "split() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.split"]], "split_by_estimator() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.split_by_estimator"]], "split_by_function() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.split_by_function"]], "split_by_partition() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.split_by_partition"]], "sub() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.sub"]], "to_xarray() (elphick.mass_composition.mass_composition.masscomposition method)": [[28, "elphick.mass_composition.mass_composition.MassComposition.to_xarray"]], "elphick.mass_composition.mc_node": [[29, "module-elphick.mass_composition.mc_node"]], "mcnode (class in elphick.mass_composition.mc_node)": [[30, "elphick.mass_composition.mc_node.MCNode"]], "__init__() (elphick.mass_composition.mc_node.mcnode method)": [[30, "elphick.mass_composition.mc_node.MCNode.__init__"]], "add() (elphick.mass_composition.mc_node.mcnode method)": [[30, "elphick.mass_composition.mc_node.MCNode.add"]], "imbalance_report() (elphick.mass_composition.mc_node.mcnode method)": [[30, "elphick.mass_composition.mc_node.MCNode.imbalance_report"]], "nodetype (class in elphick.mass_composition.mc_node)": [[31, "elphick.mass_composition.mc_node.NodeType"]], "__init__() (elphick.mass_composition.mc_node.nodetype method)": [[31, "elphick.mass_composition.mc_node.NodeType.__init__"]], "elphick.mass_composition.mc_xarray": [[32, "module-elphick.mass_composition.mc_xarray"]], "compositioncontext (class in elphick.mass_composition.mc_xarray)": [[33, "elphick.mass_composition.mc_xarray.CompositionContext"]], "__init__() (elphick.mass_composition.mc_xarray.compositioncontext method)": [[33, "elphick.mass_composition.mc_xarray.CompositionContext.__init__"]], "masscompositionaccessor (class in elphick.mass_composition.mc_xarray)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor"]], "__init__() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.__init__"]], "add() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.add"]], "aggregate() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.aggregate"]], "composition_to_mass() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.composition_to_mass"]], "cumulate() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.cumulate"]], "div() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.div"]], "mass_to_composition() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.mass_to_composition"]], "mul() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.mul"]], "split() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.split"]], "split_by_partition() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.split_by_partition"]], "sub() (elphick.mass_composition.mc_xarray.masscompositionaccessor method)": [[34, "elphick.mass_composition.mc_xarray.MassCompositionAccessor.sub"]], "mc_aggregate() (in module elphick.mass_composition.mc_xarray)": [[35, "elphick.mass_composition.mc_xarray.mc_aggregate"]], "elphick.mass_composition.stream": [[36, "module-elphick.mass_composition.stream"]], "stream (class in elphick.mass_composition.stream)": [[37, "elphick.mass_composition.stream.Stream"]], "__init__() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.__init__"]], "add() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.add"]], "split() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.split"]], "split_by_estimator() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.split_by_estimator"]], "split_by_function() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.split_by_function"]], "split_by_partition() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.split_by_partition"]], "sub() (elphick.mass_composition.stream.stream method)": [[37, "elphick.mass_composition.stream.Stream.sub"]], "elphick.mass_composition.utils": [[38, "module-elphick.mass_composition.utils"]], "elphick.mass_composition.utils.amenability": [[39, "module-elphick.mass_composition.utils.amenability"]], "amenability_index() (in module elphick.mass_composition.utils.amenability)": [[40, "elphick.mass_composition.utils.amenability.amenability_index"]], "area_trapezoid() (in module elphick.mass_composition.utils.amenability)": [[41, "elphick.mass_composition.utils.amenability.area_trapezoid"]], "pairwise() (in module elphick.mass_composition.utils.amenability)": [[42, "elphick.mass_composition.utils.amenability.pairwise"]], "elphick.mass_composition.utils.components": [[43, "module-elphick.mass_composition.utils.components"]], "elements() (in module elphick.mass_composition.utils.components)": [[44, "elphick.mass_composition.utils.components.elements"]], "is_compositional() (in module elphick.mass_composition.utils.components)": [[45, "elphick.mass_composition.utils.components.is_compositional"]], "is_element() (in module elphick.mass_composition.utils.components)": [[46, "elphick.mass_composition.utils.components.is_element"]], "is_oxide() (in module elphick.mass_composition.utils.components)": [[47, "elphick.mass_composition.utils.components.is_oxide"]], "oxides() (in module elphick.mass_composition.utils.components)": [[48, "elphick.mass_composition.utils.components.oxides"]], "elphick.mass_composition.utils.geometry": [[49, "module-elphick.mass_composition.utils.geometry"]], "midpoint() (in module elphick.mass_composition.utils.geometry)": [[50, "elphick.mass_composition.utils.geometry.midpoint"]], "elphick.mass_composition.utils.hash_utils": [[51, "module-elphick.mass_composition.utils.hash_utils"]], "check_hash() (in module elphick.mass_composition.utils.hash_utils)": [[52, "elphick.mass_composition.utils.hash_utils.check_hash"]], "read_hash() (in module elphick.mass_composition.utils.hash_utils)": [[53, "elphick.mass_composition.utils.hash_utils.read_hash"]], "read_hash_file() (in module elphick.mass_composition.utils.hash_utils)": [[54, "elphick.mass_composition.utils.hash_utils.read_hash_file"]], "write_hash() (in module elphick.mass_composition.utils.hash_utils)": [[55, "elphick.mass_composition.utils.hash_utils.write_hash"]], "elphick.mass_composition.utils.interp": [[56, "module-elphick.mass_composition.utils.interp"]], "interp_monotonic() (in module elphick.mass_composition.utils.interp)": [[57, "elphick.mass_composition.utils.interp.interp_monotonic"]], "mass_preserving_interp() (in module elphick.mass_composition.utils.interp)": [[58, "elphick.mass_composition.utils.interp.mass_preserving_interp"]], "elphick.mass_composition.utils.loader": [[59, "module-elphick.mass_composition.utils.loader"]], "create_mass_composition() (in module elphick.mass_composition.utils.loader)": [[60, "elphick.mass_composition.utils.loader.create_mass_composition"]], "streams_from_dataframe() (in module elphick.mass_composition.utils.loader)": [[61, "elphick.mass_composition.utils.loader.streams_from_dataframe"]], "elphick.mass_composition.utils.moisture": [[62, "module-elphick.mass_composition.utils.moisture"]], "solve_mass_moisture() (in module elphick.mass_composition.utils.moisture)": [[63, "elphick.mass_composition.utils.moisture.solve_mass_moisture"]], "elphick.mass_composition.utils.parallel": [[64, "module-elphick.mass_composition.utils.parallel"]], "tqdmparallel (class in elphick.mass_composition.utils.parallel)": [[65, "elphick.mass_composition.utils.parallel.TqdmParallel"]], "__init__() (elphick.mass_composition.utils.parallel.tqdmparallel method)": [[65, "elphick.mass_composition.utils.parallel.TqdmParallel.__init__"]], "print_progress() (elphick.mass_composition.utils.parallel.tqdmparallel method)": [[65, "elphick.mass_composition.utils.parallel.TqdmParallel.print_progress"]], "elphick.mass_composition.utils.partition": [[66, "module-elphick.mass_composition.utils.partition"]], "napier_munn() (in module elphick.mass_composition.utils.partition)": [[67, "elphick.mass_composition.utils.partition.napier_munn"]], "perfect() (in module elphick.mass_composition.utils.partition)": [[68, "elphick.mass_composition.utils.partition.perfect"]], "elphick.mass_composition.utils.pd_utils": [[69, "module-elphick.mass_composition.utils.pd_utils"]], "calculate_partition() (in module elphick.mass_composition.utils.pd_utils)": [[70, "elphick.mass_composition.utils.pd_utils.calculate_partition"]], "calculate_recovery() (in module elphick.mass_composition.utils.pd_utils)": [[71, "elphick.mass_composition.utils.pd_utils.calculate_recovery"]], "column_prefix_counts() (in module elphick.mass_composition.utils.pd_utils)": [[72, "elphick.mass_composition.utils.pd_utils.column_prefix_counts"]], "column_prefixes() (in module elphick.mass_composition.utils.pd_utils)": [[73, "elphick.mass_composition.utils.pd_utils.column_prefixes"]], "composition_to_mass() (in module elphick.mass_composition.utils.pd_utils)": [[74, "elphick.mass_composition.utils.pd_utils.composition_to_mass"]], "mass_to_composition() (in module elphick.mass_composition.utils.pd_utils)": [[75, "elphick.mass_composition.utils.pd_utils.mass_to_composition"]], "weight_average() (in module elphick.mass_composition.utils.pd_utils)": [[76, "elphick.mass_composition.utils.pd_utils.weight_average"]], "elphick.mass_composition.utils.sampling": [[77, "module-elphick.mass_composition.utils.sampling"]], "random_int() (in module elphick.mass_composition.utils.sampling)": [[78, "elphick.mass_composition.utils.sampling.random_int"]], "elphick.mass_composition.utils.size": [[79, "module-elphick.mass_composition.utils.size"]], "mean_size() (in module elphick.mass_composition.utils.size)": [[80, "elphick.mass_composition.utils.size.mean_size"]], "elphick.mass_composition.utils.size_distribution": [[81, "module-elphick.mass_composition.utils.size_distribution"]], "gaudin_schuhmann() (in module elphick.mass_composition.utils.size_distribution)": [[82, "elphick.mass_composition.utils.size_distribution.gaudin_schuhmann"]], "lynch() (in module elphick.mass_composition.utils.size_distribution)": [[83, "elphick.mass_composition.utils.size_distribution.lynch"]], "modified_rosin_rammler() (in module elphick.mass_composition.utils.size_distribution)": [[84, "elphick.mass_composition.utils.size_distribution.modified_rosin_rammler"]], "rosin_rammler() (in module elphick.mass_composition.utils.size_distribution)": [[85, "elphick.mass_composition.utils.size_distribution.rosin_rammler"]], "elphick.mass_composition.utils.sklearn": [[86, "module-elphick.mass_composition.utils.sklearn"]], "pandaspipeline (class in elphick.mass_composition.utils.sklearn)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline"]], "__init__() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.__init__"]], "fit() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.fit"]], "get_feature_names_out() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.get_feature_names_out"]], "predict() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.predict"]], "score() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.score"]], "transform() (elphick.mass_composition.utils.sklearn.pandaspipeline method)": [[87, "elphick.mass_composition.utils.sklearn.PandasPipeline.transform"]], "extract_feature_names() (in module elphick.mass_composition.utils.sklearn)": [[88, "elphick.mass_composition.utils.sklearn.extract_feature_names"]], "elphick.mass_composition.utils.viz": [[89, "module-elphick.mass_composition.utils.viz"]], "plot_parallel() (in module elphick.mass_composition.utils.viz)": [[90, "elphick.mass_composition.utils.viz.plot_parallel"]], "elphick.mass_composition": [[91, "module-elphick.mass_composition"]], "masscomposition": [[128, "term-MassComposition"]], "stream": [[128, "term-Stream"]], "composition": [[128, "term-composition"]], "mass": [[128, "term-mass"]]}})